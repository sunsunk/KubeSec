// Code generated by MockGen. DO NOT EDIT.
// Source: pkg/providers/heroku.go

// Package mock_providers is a generated GoMock package.
package mock_providers

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	v5 "github.com/heroku/heroku-go/v5"
)

// MockHerokuClient is a mock of HerokuClient interface.
type MockHerokuClient struct {
	ctrl     *gomock.Controller
	recorder *MockHerokuClientMockRecorder
}

// MockHerokuClientMockRecorder is the mock recorder for MockHerokuClient.
type MockHerokuClientMockRecorder struct {
	mock *MockHerokuClient
}

// NewMockHerokuClient creates a new mock instance.
func NewMockHerokuClient(ctrl *gomock.Controller) *MockHerokuClient {
	mock := &MockHerokuClient{ctrl: ctrl}
	mock.recorder = &MockHerokuClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockHerokuClient) EXPECT() *MockHerokuClientMockRecorder {
	return m.recorder
}

// ConfigVarInfoForApp mocks base method.
func (m *MockHerokuClient) ConfigVarInfoForApp(ctx context.Context, appIdentity string) (v5.ConfigVarInfoForAppResult, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ConfigVarInfoForApp", ctx, appIdentity)
	ret0, _ := ret[0].(v5.ConfigVarInfoForAppResult)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ConfigVarInfoForApp indicates an expected call of ConfigVarInfoForApp.
func (mr *MockHerokuClientMockRecorder) ConfigVarInfoForApp(ctx, appIdentity interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ConfigVarInfoForApp", reflect.TypeOf((*MockHerokuClient)(nil).ConfigVarInfoForApp), ctx, appIdentity)
}

// ConfigVarUpdate mocks base method.
func (m *MockHerokuClient) ConfigVarUpdate(ctx context.Context, appIdentity string, o map[string]*string) (v5.ConfigVarUpdateResult, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ConfigVarUpdate", ctx, appIdentity, o)
	ret0, _ := ret[0].(v5.ConfigVarUpdateResult)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ConfigVarUpdate indicates an expected call of ConfigVarUpdate.
func (mr *MockHerokuClientMockRecorder) ConfigVarUpdate(ctx, appIdentity, o interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ConfigVarUpdate", reflect.TypeOf((*MockHerokuClient)(nil).ConfigVarUpdate), ctx, appIdentity, o)
}

// Code generated by MockGen. DO NOT EDIT.
// Source: pkg/providers/cyberark_conjur.go

// Package mock_providers is a generated GoMock package.
package mock_providers

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockConjurClient is a mock of ConjurClient interface.
type MockConjurClient struct {
	ctrl     *gomock.Controller
	recorder *MockConjurClientMockRecorder
}

// MockConjurClientMockRecorder is the mock recorder for MockConjurClient.
type MockConjurClientMockRecorder struct {
	mock *MockConjurClient
}

// NewMockConjurClient creates a new mock instance.
func NewMockConjurClient(ctrl *gomock.Controller) *MockConjurClient {
	mock := &MockConjurClient{ctrl: ctrl}
	mock.recorder = &MockConjurClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockConjurClient) EXPECT() *MockConjurClientMockRecorder {
	return m.recorder
}

// AddSecret mocks base method.
func (m *MockConjurClient) AddSecret(variableId, secretValue string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AddSecret", variableId, secretValue)
	ret0, _ := ret[0].(error)
	return ret0
}

// AddSecret indicates an expected call of AddSecret.
func (mr *MockConjurClientMockRecorder) AddSecret(variableId, secretValue interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddSecret", reflect.TypeOf((*MockConjurClient)(nil).AddSecret), variableId, secretValue)
}

// RetrieveSecret mocks base method.
func (m *MockConjurClient) RetrieveSecret(variableId string) ([]byte, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "RetrieveSecret", variableId)
	ret0, _ := ret[0].([]byte)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// RetrieveSecret indicates an expected call of RetrieveSecret.
func (mr *MockConjurClientMockRecorder) RetrieveSecret(variableId interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RetrieveSecret", reflect.TypeOf((*MockConjurClient)(nil).RetrieveSecret), variableId)
}

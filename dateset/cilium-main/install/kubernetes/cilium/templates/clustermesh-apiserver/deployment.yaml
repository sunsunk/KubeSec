apiVersion: apps/v1
kind: Deployment
metadata:
  name: clustermesh-apiserver
  namespace: dynamic_parameters
  annotations:
  labels:
    k8s-app: clustermesh-apiserver
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: clustermesh-apiserver
spec:
  replicas: dynamic_parameters
  selector:
    matchLabels:
      k8s-app: clustermesh-apiserver
  strategy:
  template:
    metadata:
      annotations:
      labels:
        app.kubernetes.io/part-of: cilium
        app.kubernetes.io/name: clustermesh-apiserver
        k8s-app: clustermesh-apiserver
    spec:
      imagePullSecrets:
      securityContext:
      initContainers:
      - name: etcd-init
        image: dynamic_parameters
        imagePullPolicy: dynamic_parameters
        command:
        - /usr/bin/clustermesh-apiserver
        args:
        - etcdinit
        - --debug
        # These need to match the equivalent arguments to etcd in the main container.
        - --etcd-cluster-name=clustermesh-apiserver
        - --etcd-initial-cluster-token=clustermesh-apiserver
        - --etcd-data-dir=/var/run/etcd
        env:
          # The Cilium cluster name (specified via the `CILIUM_CLUSTER_NAME` environment variable) and the etcd cluster
          # name (specified via the `--etcd-cluster-name` argument) are very different concepts. The Cilium cluster name
          # is the name of the overall Cilium cluster, and is used to set the admin account username. The etcd cluster
          # name is a concept that's only relevant for etcd itself. The etcd cluster name must be the same for both this
          # command and the actual invocation of etcd in the main containers of this Pod, but it's otherwise not
          # relevant to Cilium.
        - name: CILIUM_CLUSTER_NAME
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: cluster-name
        volumeMounts:
        - name: etcd-data-dir
          mountPath: /var/run/etcd
        terminationMessagePolicy: FallbackToLogsOnError
        resources:
      containers:
      - name: etcd
        # The clustermesh-apiserver container image includes an etcd binary.
        image: dynamic_parameters
        imagePullPolicy: dynamic_parameters
        command:
        - /usr/bin/etcd
        args:
        - --data-dir=/var/run/etcd
        - --name=clustermesh-apiserver
        - --client-cert-auth
        - --trusted-ca-file=/var/lib/etcd-secrets/ca.crt
        - --cert-file=/var/lib/etcd-secrets/tls.crt
        - --key-file=/var/lib/etcd-secrets/tls.key
        # Surrounding the IPv4 address with brackets works in this case, since etcd
        # uses net.SplitHostPort() internally and it accepts the that format.
        - --listen-client-urls=https://127.0.0.1:2379,https://[$(HOSTNAME_IP)]:2379
        - --advertise-client-urls=https://[$(HOSTNAME_IP)]:2379
        - --initial-cluster-token=clustermesh-apiserver
        - --auto-compaction-retention=1
        - --listen-metrics-urls=http://[$(HOSTNAME_IP)]:dynamic_parameters
        - --metrics=dynamic_parameters
        env:
        - name: ETCDCTL_API
          value: "3"
        - name: HOSTNAME_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        ports:
        - name: etcd
          containerPort: 2379
          protocol: TCP
        - name: etcd-metrics
          containerPort: dynamic_parameters
          protocol: TCP
        volumeMounts:
        - name: etcd-server-secrets
          mountPath: /var/lib/etcd-secrets
          readOnly: true
        - name: etcd-data-dir
          mountPath: /var/run/etcd
        terminationMessagePolicy: FallbackToLogsOnError
        resources:
        securityContext:
        lifecycle:
      - name: apiserver
        image: dynamic_parameters
        imagePullPolicy: dynamic_parameters
        command:
        - /usr/bin/clustermesh-apiserver
        args:
        - clustermesh
        - --debug
        - --cluster-name=$(CLUSTER_NAME)
        - --cluster-id=$(CLUSTER_ID)
        - --kvstore-opt=etcd.config=/var/lib/cilium/etcd-config.yaml
        - --kvstore-opt=etcd.qps=20
        - --kvstore-opt=etcd.bootstrapQps=10000
        - --max-connected-clusters=dynamic_parameters
        - --health-port=dynamic_parameters
        - --cluster-users-enabled
        - --cluster-users-config-path=/var/lib/cilium/etcd-config/users.yaml
        - --enable-external-workloads=dynamic_parameters
        - --prometheus-serve-addr=:dynamic_parameters
        - --controller-group-metrics=all
        env:
        - name: CLUSTER_NAME
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: cluster-name
        - name: CLUSTER_ID
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: cluster-id
              optional: true
        - name: IDENTITY_ALLOCATION_MODE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: identity-allocation-mode
        - name: ENABLE_K8S_ENDPOINT_SLICE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: enable-k8s-endpoint-slice
              optional: true
        readinessProbe:
          httpGet:
            path: /readyz
            port: apiserv-health
        ports:
        - name: apiserv-health
          containerPort: dynamic_parameters
          protocol: TCP
        - name: apiserv-metrics
          containerPort: dynamic_parameters
          protocol: TCP
        resources:
        volumeMounts:
        - name: etcd-admin-client
          mountPath: /var/lib/cilium/etcd-secrets
          readOnly: true
        - name: etcd-users-config
          mountPath: /var/lib/cilium/etcd-config
          readOnly: true
        terminationMessagePolicy: FallbackToLogsOnError
        securityContext:
        lifecycle:
      - name: kvstoremesh
        image: dynamic_parameters
        imagePullPolicy: dynamic_parameters
        command:
        - /usr/bin/clustermesh-apiserver
        args:
        - kvstoremesh
        - --debug
        - --cluster-name=$(CLUSTER_NAME)
        - --cluster-id=$(CLUSTER_ID)
        - --kvstore-opt=etcd.config=/var/lib/cilium/etcd-config.yaml
        - --kvstore-opt=etcd.qps=100
        - --kvstore-opt=etcd.bootstrapQps=10000
        - --kvstore-opt=etcd.maxInflight=10
        - --clustermesh-config=/var/lib/cilium/clustermesh
        - --max-connected-clusters=dynamic_parameters
        - --health-port=dynamic_parameters
        - --prometheus-serve-addr=:dynamic_parameters
        - --controller-group-metrics=all
        readinessProbe:
          httpGet:
            path: /readyz
            port: kvmesh-health
        env:
        - name: CLUSTER_NAME
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: cluster-name
        - name: CLUSTER_ID
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: cluster-id
        ports:
        - name: kvmesh-health
          containerPort: dynamic_parameters
          protocol: TCP
        - name: kvmesh-metrics
          containerPort: dynamic_parameters
          protocol: TCP
        resources:
        volumeMounts:
        - name: etcd-admin-client
          mountPath: /var/lib/cilium/etcd-secrets
          readOnly: true
        - name: kvstoremesh-secrets
          mountPath: /var/lib/cilium/clustermesh
          readOnly: true
        terminationMessagePolicy: FallbackToLogsOnError
        securityContext:
        lifecycle:
      volumes:
      - name: etcd-server-secrets
        projected:
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          sources:
          - secret:
              name: clustermesh-apiserver-server-cert
              items:
              - key: tls.crt
                path: tls.crt
              - key: tls.key
                path: tls.key
              - key: ca.crt
                path: ca.crt
          - dynamic_parameters:
              name: dynamic_parameters
              items:
              - key: dynamic_parameters
                path: ca.crt
      - name: etcd-admin-client
        projected:
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          sources:
          - secret:
              name: clustermesh-apiserver-admin-cert
              items:
              - key: tls.crt
                path: tls.crt
              - key: tls.key
                path: tls.key
              - key: ca.crt
                path: ca.crt
          - dynamic_parameters:
              name: dynamic_parameters
              items:
              - key: dynamic_parameters
                path: ca.crt
      - name: etcd-users-config
        configMap:
          name: clustermesh-remote-users
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
      - name: etcd-data-dir
      - name: kvstoremesh-secrets
        projected:
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          sources:
          - secret:
              name: cilium-kvstoremesh
              optional: true
              # note: items are not explicitly listed here, since the entries of this secret
              # depend on the peers configured, and that would cause a restart of this pod
              # at every addition/removal. Leaving the field empty makes each secret entry
              # to be automatically projected into the volume as a file whose name is the key.
          - secret:
              name: clustermesh-apiserver-remote-cert
              optional: true
              items:
              - key: tls.key
                path: common-etcd-client.key
              - key: tls.crt
                path: common-etcd-client.crt
              - key: ca.crt
                path: common-etcd-client-ca.crt
      restartPolicy: Always
      priorityClassName: dynamic_parameters
      serviceAccount: dynamic_parameters
      serviceAccountName: dynamic_parameters
      terminationGracePeriodSeconds: dynamic_parameters
      automountServiceAccountToken: dynamic_parameters
      affinity:
      topologySpreadConstraints:
      - dynamic_parameters
        labelSelector:
          matchLabels:
            k8s-app: clustermesh-apiserver
      nodeSelector:
      tolerations:
      hostAliases:
      - ip: dynamic_parameters
        hostnames: [ "dynamic_parameters.dynamic_parameters" ]

---

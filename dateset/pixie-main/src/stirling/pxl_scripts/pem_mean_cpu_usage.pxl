# Copyright 2018- The Pixie Authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# SPDX-License-Identifier: Apache-2.0

start_time = '-10m'
namespace = 'pl'
name_substr = 'vizier-pem'
# 5 seconds window
window_ns = 1000 * 1000 * 1000 * 5

df = px.DataFrame(table='process_stats', start_time=start_time)
df = df[df.ctx['namespace'] == namespace]
df.pod = df.ctx['pod_name']
df.node = px.upid_to_node_name(df.upid)
df = df[px.contains(df.pod, name_substr)]
df.timestamp = px.bin(df.time_, window_ns)
df = df.groupby(['upid', 'pod', 'node', 'timestamp']).agg(
    cpu_utime_ns_max=('cpu_utime_ns', px.max),
    cpu_utime_ns_min=('cpu_utime_ns', px.min),
    cpu_ktime_ns_max=('cpu_ktime_ns', px.max),
    cpu_ktime_ns_min=('cpu_ktime_ns', px.min),
)
df.cpu_utime_ns = df.cpu_utime_ns_max - df.cpu_utime_ns_min
df.cpu_ktime_ns = df.cpu_ktime_ns_max - df.cpu_ktime_ns_min
df = df.groupby(['pod', 'node', 'timestamp']).agg(
    cpu_ktime_ns=('cpu_ktime_ns', px.sum),
    cpu_utime_ns=('cpu_utime_ns', px.sum),
)
df.cpu_usage = px.Percent((df.cpu_ktime_ns + df.cpu_utime_ns) / window_ns)
df = df.groupby(['pod']).agg(cpu_mean=('cpu_usage', px.mean))

px.display(df)

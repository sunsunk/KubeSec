// SPDX-License-Identifier: Apache-2.0
// Copyright 2022 Authors of KubeArmor

// Code generated by lister-gen. DO NOT EDIT.

package v1

import (
	v1 "github.com/kubearmor/KubeArmor/pkg/KubeArmorController/api/security.kubearmor.com/v1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// KubeArmorPolicyLister helps list KubeArmorPolicies.
// All objects returned here must be treated as read-only.
type KubeArmorPolicyLister interface {
	// List lists all KubeArmorPolicies in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1.KubeArmorPolicy, err error)
	// KubeArmorPolicies returns an object that can list and get KubeArmorPolicies.
	KubeArmorPolicies(namespace string) KubeArmorPolicyNamespaceLister
	KubeArmorPolicyListerExpansion
}

// kubeArmorPolicyLister implements the KubeArmorPolicyLister interface.
type kubeArmorPolicyLister struct {
	indexer cache.Indexer
}

// NewKubeArmorPolicyLister returns a new KubeArmorPolicyLister.
func NewKubeArmorPolicyLister(indexer cache.Indexer) KubeArmorPolicyLister {
	return &kubeArmorPolicyLister{indexer: indexer}
}

// List lists all KubeArmorPolicies in the indexer.
func (s *kubeArmorPolicyLister) List(selector labels.Selector) (ret []*v1.KubeArmorPolicy, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.KubeArmorPolicy))
	})
	return ret, err
}

// KubeArmorPolicies returns an object that can list and get KubeArmorPolicies.
func (s *kubeArmorPolicyLister) KubeArmorPolicies(namespace string) KubeArmorPolicyNamespaceLister {
	return kubeArmorPolicyNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// KubeArmorPolicyNamespaceLister helps list and get KubeArmorPolicies.
// All objects returned here must be treated as read-only.
type KubeArmorPolicyNamespaceLister interface {
	// List lists all KubeArmorPolicies in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1.KubeArmorPolicy, err error)
	// Get retrieves the KubeArmorPolicy from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1.KubeArmorPolicy, error)
	KubeArmorPolicyNamespaceListerExpansion
}

// kubeArmorPolicyNamespaceLister implements the KubeArmorPolicyNamespaceLister
// interface.
type kubeArmorPolicyNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all KubeArmorPolicies in the indexer for a given namespace.
func (s kubeArmorPolicyNamespaceLister) List(selector labels.Selector) (ret []*v1.KubeArmorPolicy, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.KubeArmorPolicy))
	})
	return ret, err
}

// Get retrieves the KubeArmorPolicy from the indexer for a given namespace and name.
func (s kubeArmorPolicyNamespaceLister) Get(name string) (*v1.KubeArmorPolicy, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1.Resource("kubearmorpolicy"), name)
	}
	return obj.(*v1.KubeArmorPolicy), nil
}

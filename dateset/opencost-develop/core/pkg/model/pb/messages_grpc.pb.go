// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.3.0
// - protoc             v4.25.3
// source: protos/customcost/messages.proto

package pb

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

const (
	CustomCostsSource_GetCustomCosts_FullMethodName = "/customcost.messages.CustomCostsSource/GetCustomCosts"
)

// CustomCostsSourceClient is the client API for CustomCostsSource service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type CustomCostsSourceClient interface {
	GetCustomCosts(ctx context.Context, in *CustomCostRequest, opts ...grpc.CallOption) (*CustomCostResponseSet, error)
}

type customCostsSourceClient struct {
	cc grpc.ClientConnInterface
}

func NewCustomCostsSourceClient(cc grpc.ClientConnInterface) CustomCostsSourceClient {
	return &customCostsSourceClient{cc}
}

func (c *customCostsSourceClient) GetCustomCosts(ctx context.Context, in *CustomCostRequest, opts ...grpc.CallOption) (*CustomCostResponseSet, error) {
	out := new(CustomCostResponseSet)
	err := c.cc.Invoke(ctx, CustomCostsSource_GetCustomCosts_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CustomCostsSourceServer is the server API for CustomCostsSource service.
// All implementations must embed UnimplementedCustomCostsSourceServer
// for forward compatibility
type CustomCostsSourceServer interface {
	GetCustomCosts(context.Context, *CustomCostRequest) (*CustomCostResponseSet, error)
	mustEmbedUnimplementedCustomCostsSourceServer()
}

// UnimplementedCustomCostsSourceServer must be embedded to have forward compatible implementations.
type UnimplementedCustomCostsSourceServer struct {
}

func (UnimplementedCustomCostsSourceServer) GetCustomCosts(context.Context, *CustomCostRequest) (*CustomCostResponseSet, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCustomCosts not implemented")
}
func (UnimplementedCustomCostsSourceServer) mustEmbedUnimplementedCustomCostsSourceServer() {}

// UnsafeCustomCostsSourceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to CustomCostsSourceServer will
// result in compilation errors.
type UnsafeCustomCostsSourceServer interface {
	mustEmbedUnimplementedCustomCostsSourceServer()
}

func RegisterCustomCostsSourceServer(s grpc.ServiceRegistrar, srv CustomCostsSourceServer) {
	s.RegisterService(&CustomCostsSource_ServiceDesc, srv)
}

func _CustomCostsSource_GetCustomCosts_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CustomCostRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CustomCostsSourceServer).GetCustomCosts(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CustomCostsSource_GetCustomCosts_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CustomCostsSourceServer).GetCustomCosts(ctx, req.(*CustomCostRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// CustomCostsSource_ServiceDesc is the grpc.ServiceDesc for CustomCostsSource service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var CustomCostsSource_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "customcost.messages.CustomCostsSource",
	HandlerType: (*CustomCostsSourceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetCustomCosts",
			Handler:    _CustomCostsSource_GetCustomCosts_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "protos/customcost/messages.proto",
}

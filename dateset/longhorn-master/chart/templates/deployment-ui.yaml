# https://github.com/openshift/oauth-proxy/blob/master/contrib/sidecar.yaml
# Create a proxy service account and ensure it will use the route "proxy"
# Create a secure connection to the proxy via a route
apiVersion: route.openshift.io/v1
kind: Route
metadata:
  labels: 
    app: longhorn-ui
  name: dynamic_parameters
  namespace: dynamic_parameters
spec:
  to:
    kind: Service
    name: longhorn-ui
  tls:
    termination: reencrypt
---
apiVersion: v1
kind: Service
metadata:
  labels: 
    app: longhorn-ui
  name: longhorn-ui
  namespace: dynamic_parameters
  annotations:
    service.alpha.openshift.io/serving-cert-secret-name: longhorn-ui-tls
spec:
  ports:
  - name: longhorn-ui
    port: dynamic_parameters
    targetPort: dynamic_parameters
  selector:
    app: longhorn-ui
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels: 
    app: longhorn-ui
  name: longhorn-ui
  namespace: dynamic_parameters
spec:
  replicas: dynamic_parameters
  selector:
    matchLabels:
      app: longhorn-ui
  template:
    metadata:
      labels: 
        app: longhorn-ui
    spec:
      serviceAccountName: longhorn-ui-service-account
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 1
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - longhorn-ui
              topologyKey: kubernetes.io/hostname
      containers:
      - name: oauth-proxy
        image: dynamic_parametersdynamic_parameters:dynamic_parameters
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: dynamic_parameters
          name: public
        args:
        - --https-address=:dynamic_parameters
        - --provider=openshift
        - --openshift-service-account=longhorn-ui-service-account
        - --upstream=http://localhost:8000
        - --tls-cert=/etc/tls/private/tls.crt
        - --tls-key=/etc/tls/private/tls.key
        - --cookie-secret=SECRET
        volumeMounts:
          - mountPath: /etc/tls/private
            name: longhorn-ui-tls
      - name: longhorn-ui
        image: dynamic_parametersdynamic_parameters:dynamic_parameters
        imagePullPolicy: dynamic_parameters
        volumeMounts:
        - name : nginx-cache
          mountPath: /var/cache/nginx/
        - name : nginx-config
          mountPath: /var/config/nginx/
        - name: var-run
          mountPath: /var/run/
        ports:
        - containerPort: 8000
          name: http
        env:
          - name: LONGHORN_MANAGER_IP
            value: "http://longhorn-backend:9500"
          - name: LONGHORN_UI_PORT
            value: "8000"
      volumes:
      - name: longhorn-ui-tls
        secret:
          secretName: longhorn-ui-tls
        name: nginx-cache
        name: nginx-config
        name: var-run
      imagePullSecrets:
      - name: dynamic_parameters
      priorityClassName: dynamic_parameters
      tolerations:
      nodeSelector:
---
kind: Service
apiVersion: v1
metadata:
  labels: 
    app: longhorn-ui
    kubernetes.io/cluster-service: "true"
  name: longhorn-frontend
  namespace: dynamic_parameters
spec:
  type: ClusterIP
  type: dynamic_parameters
  loadBalancerIP: dynamic_parameters
  loadBalancerSourceRanges: dynamic_parameters
  selector:
    app: longhorn-ui
  ports:
  - name: http
    port: 80
    targetPort: http
    nodePort: dynamic_parameters
    nodePort: null

---

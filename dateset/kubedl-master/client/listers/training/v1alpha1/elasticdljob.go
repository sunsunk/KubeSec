/*
Copyright 2021 The Alibaba Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/
// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/alibaba/kubedl/apis/training/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// ElasticDLJobLister helps list ElasticDLJobs.
type ElasticDLJobLister interface {
	// List lists all ElasticDLJobs in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.ElasticDLJob, err error)
	// ElasticDLJobs returns an object that can list and get ElasticDLJobs.
	ElasticDLJobs(namespace string) ElasticDLJobNamespaceLister
	ElasticDLJobListerExpansion
}

// elasticDLJobLister implements the ElasticDLJobLister interface.
type elasticDLJobLister struct {
	indexer cache.Indexer
}

// NewElasticDLJobLister returns a new ElasticDLJobLister.
func NewElasticDLJobLister(indexer cache.Indexer) ElasticDLJobLister {
	return &elasticDLJobLister{indexer: indexer}
}

// List lists all ElasticDLJobs in the indexer.
func (s *elasticDLJobLister) List(selector labels.Selector) (ret []*v1alpha1.ElasticDLJob, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.ElasticDLJob))
	})
	return ret, err
}

// ElasticDLJobs returns an object that can list and get ElasticDLJobs.
func (s *elasticDLJobLister) ElasticDLJobs(namespace string) ElasticDLJobNamespaceLister {
	return elasticDLJobNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// ElasticDLJobNamespaceLister helps list and get ElasticDLJobs.
type ElasticDLJobNamespaceLister interface {
	// List lists all ElasticDLJobs in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.ElasticDLJob, err error)
	// Get retrieves the ElasticDLJob from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.ElasticDLJob, error)
	ElasticDLJobNamespaceListerExpansion
}

// elasticDLJobNamespaceLister implements the ElasticDLJobNamespaceLister
// interface.
type elasticDLJobNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all ElasticDLJobs in the indexer for a given namespace.
func (s elasticDLJobNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.ElasticDLJob, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.ElasticDLJob))
	})
	return ret, err
}

// Get retrieves the ElasticDLJob from the indexer for a given namespace and name.
func (s elasticDLJobNamespaceLister) Get(name string) (*v1alpha1.ElasticDLJob, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("elasticdljob"), name)
	}
	return obj.(*v1alpha1.ElasticDLJob), nil
}

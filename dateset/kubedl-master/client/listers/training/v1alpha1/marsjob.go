/*
Copyright 2021 The Alibaba Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/
// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/alibaba/kubedl/apis/training/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// MarsJobLister helps list MarsJobs.
type MarsJobLister interface {
	// List lists all MarsJobs in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.MarsJob, err error)
	// MarsJobs returns an object that can list and get MarsJobs.
	MarsJobs(namespace string) MarsJobNamespaceLister
	MarsJobListerExpansion
}

// marsJobLister implements the MarsJobLister interface.
type marsJobLister struct {
	indexer cache.Indexer
}

// NewMarsJobLister returns a new MarsJobLister.
func NewMarsJobLister(indexer cache.Indexer) MarsJobLister {
	return &marsJobLister{indexer: indexer}
}

// List lists all MarsJobs in the indexer.
func (s *marsJobLister) List(selector labels.Selector) (ret []*v1alpha1.MarsJob, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.MarsJob))
	})
	return ret, err
}

// MarsJobs returns an object that can list and get MarsJobs.
func (s *marsJobLister) MarsJobs(namespace string) MarsJobNamespaceLister {
	return marsJobNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// MarsJobNamespaceLister helps list and get MarsJobs.
type MarsJobNamespaceLister interface {
	// List lists all MarsJobs in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.MarsJob, err error)
	// Get retrieves the MarsJob from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.MarsJob, error)
	MarsJobNamespaceListerExpansion
}

// marsJobNamespaceLister implements the MarsJobNamespaceLister
// interface.
type marsJobNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all MarsJobs in the indexer for a given namespace.
func (s marsJobNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.MarsJob, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.MarsJob))
	})
	return ret, err
}

// Get retrieves the MarsJob from the indexer for a given namespace and name.
func (s marsJobNamespaceLister) Get(name string) (*v1alpha1.MarsJob, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("marsjob"), name)
	}
	return obj.(*v1alpha1.MarsJob), nil
}

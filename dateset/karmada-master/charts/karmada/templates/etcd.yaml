apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: etcd
  namespace: dynamic_parameters
  labels:
  
spec:
  replicas: dynamic_parameters
  serviceName: etcd
  selector:
    matchLabels:
      
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        
        
    spec:
      automountServiceAccountToken: false
      
      affinity:
      nodeSelector:
      tolerations:
      containers:
        - name: etcd
          image: dynamic_parameters
          imagePullPolicy: dynamic_parameters
          livenessProbe:
            exec:
              command:
                - /bin/sh
                - -ec
                - 'etcdctl get /registry --prefix --keys-only  --endpoints https://127.0.0.1:2379  --cacert /etc/kubernetes/pki/etcd/server-ca.crt --cert /etc/kubernetes/pki/etcd/karmada.crt --key /etc/kubernetes/pki/etcd/karmada.key'
            failureThreshold: 3
            initialDelaySeconds: 600
            periodSeconds: 60
            successThreshold: 1
            timeoutSeconds: 10
          env:
            - name: KARMADA_ETCD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
          ports:
            - containerPort: 2379
              name: client
              protocol: TCP
            - containerPort: 2380
              name: server
              protocol: TCP
          resources:
          volumeMounts:
            - mountPath: /var/lib/etcd
              name: etcd-data
            - name: etcd-cert
              mountPath: /etc/kubernetes/pki/etcd
              readOnly: true
          command:
            - /usr/local/bin/etcd
            - --name
            - $(KARMADA_ETCD_NAME)
            - --listen-peer-urls
            - http://0.0.0.0:2380
            - --listen-client-urls
            - https://0.0.0.0:2379
            - --advertise-client-urls
            - https://etcd-client.dynamic_parameters.svc.dynamic_parameters:2379
            - --initial-cluster
            - dynamic_parameters
            - --initial-cluster-state
            - new
            - --cert-file=/etc/kubernetes/pki/etcd/karmada.crt
            - --client-cert-auth=true
            - --key-file=/etc/kubernetes/pki/etcd/karmada.key
            - --trusted-ca-file=/etc/kubernetes/pki/etcd/server-ca.crt
            - --data-dir=/var/lib/etcd
            # Setting Golang's secure cipher suites as etcd's cipher suites.
            # They are obtained by the return value of the function CipherSuites() under the go/src/crypto/tls/cipher_suites.go package.
            # Consistent with the Preferred values of k8sâ€™s default cipher suites.
            - --cipher-suites=TLS_RSA_WITH_AES_128_CBC_SHA,TLS_RSA_WITH_AES_256_CBC_SHA,TLS_RSA_WITH_AES_128_GCM_SHA256,TLS_RSA_WITH_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256,TLS_AES_256_GCM_SHA384,TLS_CHACHA20_POLY1305_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305
      volumes:
        - name: etcd-cert
          secret:
            secretName: dynamic_parameters-cert
        - hostPath:
            path: /var/lib/dynamic_parameters/karmada-etcd
            type: DirectoryOrCreate
          name: etcd-data
  volumeClaimTemplates:
    - metadata:
        name: etcd-data
      spec:
        accessModes: [ "ReadWriteOnce" ]
        storageClassName: dynamic_parameters
        resources:
          requests:
            storage: dynamic_parameters
---
apiVersion: v1
kind: Service
metadata:
  labels:
  
  name: etcd-client
  namespace: dynamic_parameters
spec:
  ports:
    - name: etcd-client-port
      port: 2379
      protocol: TCP
      targetPort: 2379
  selector:
  
---
apiVersion: v1
kind: Service
metadata:
  labels:
  
  name: etcd
  namespace: dynamic_parameters
spec:
  ports:
    - name: client
      port: 2379
      protocol: TCP
      targetPort: 2379
    - name: server
      port: 2380
      protocol: TCP
      targetPort: 2380
  clusterIP: None
  selector:
  

---

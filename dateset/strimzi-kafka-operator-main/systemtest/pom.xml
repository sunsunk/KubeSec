<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>strimzi</artifactId>
        <groupId>io.strimzi</groupId>
        <version>0.41.0-SNAPSHOT</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>
    <artifactId>systemtest</artifactId>

    <properties>
        <skipTests>true</skipTests>
        <failsafe.forkCount>0</failsafe.forkCount>

        <!-- Points to the root directory of the Strimzi project directory and can be used for fixed location to configuration files -->
        <strimziRootDirectory>${basedir}${file.separator}..</strimziRootDirectory>
    </properties>

    <dependencies>
        <dependency>
            <groupId>io.strimzi</groupId>
            <artifactId>api</artifactId>
        </dependency>
        <dependency>
            <groupId>io.strimzi</groupId>
            <artifactId>operator-common</artifactId>
        </dependency>
        <dependency>
            <groupId>org.valid4j</groupId>
            <artifactId>json-path-matchers</artifactId>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>org.hamcrest</groupId>
                    <artifactId>hamcrest-library</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-api</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-core</artifactId>
        </dependency>
        <dependency>
            <groupId>io.strimzi</groupId>
            <artifactId>test</artifactId>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>io.fabric8</groupId>
            <artifactId>kubernetes-client</artifactId>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>io.fabric8</groupId>
            <artifactId>kubernetes-httpclient-jdk</artifactId>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>io.fabric8</groupId>
            <artifactId>kubernetes-client-api</artifactId>
        </dependency>
        <dependency>
            <groupId>io.fabric8</groupId>
            <artifactId>kubernetes-model-apps</artifactId>
        </dependency>
        <dependency>
            <groupId>io.fabric8</groupId>
            <artifactId>kubernetes-model-storageclass</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.fabric8</groupId>
            <artifactId>kubernetes-model-core</artifactId>
        </dependency>
        <dependency>
            <groupId>io.fabric8</groupId>
            <artifactId>kubernetes-model-rbac</artifactId>
        </dependency>
        <dependency>
            <groupId>io.fabric8</groupId>
            <artifactId>kubernetes-model-apiextensions</artifactId>
        </dependency>
        <dependency>
            <groupId>io.fabric8</groupId>
            <artifactId>kubernetes-model-networking</artifactId>
        </dependency>
        <dependency>
            <groupId>io.fabric8</groupId>
            <artifactId>kubernetes-model-batch</artifactId>
        </dependency>
        <dependency>
            <groupId>io.fabric8</groupId>
            <artifactId>openshift-model</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.fabric8</groupId>
            <artifactId>openshift-client</artifactId>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>io.fabric8</groupId>
            <artifactId>openshift-client-api</artifactId>
        </dependency>
        <dependency>
            <groupId>io.fabric8</groupId>
            <artifactId>kubernetes-model-admissionregistration</artifactId>
            <version>${fabric8.kubernetes-model.version}</version>
        </dependency>
        <dependency>
            <groupId>com.jayway.jsonpath</groupId>
            <artifactId>json-path</artifactId>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-core</artifactId>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-annotations</artifactId>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.dataformat</groupId>
            <artifactId>jackson-dataformat-yaml</artifactId>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.platform</groupId>
            <artifactId>junit-platform-launcher</artifactId>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.platform</groupId>
            <artifactId>junit-platform-engine</artifactId>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.platform</groupId>
            <artifactId>junit-platform-commons</artifactId>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-params</artifactId>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>org.opentest4j</groupId>
            <artifactId>opentest4j</artifactId>
            <version>${opentest4j.version}</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>org.glassfish</groupId>
            <artifactId>javax.json</artifactId>
            <version>${javax.json.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.kafka</groupId>
            <artifactId>kafka-clients</artifactId>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.kafka</groupId>
            <artifactId>kafka_2.13</artifactId>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>io.rest-assured</groupId>
            <artifactId>rest-assured</artifactId>
            <version>${rest-assured.version}</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>io.rest-assured</groupId>
            <artifactId>json-path</artifactId>
            <version>${rest-assured-json-path.version}</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>io.vertx</groupId>
            <artifactId>vertx-core</artifactId>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>com.github.spotbugs</groupId>
            <artifactId>spotbugs-annotations</artifactId>
        </dependency>
        <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest</artifactId>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
        </dependency>
        <dependency>
            <groupId>io.strimzi</groupId>
            <artifactId>config-model</artifactId>
        </dependency>
        <dependency>
            <groupId>org.bouncycastle</groupId>
            <artifactId>bcpkix-jdk18on</artifactId>
            <version>${bouncycastle.version}</version>
        </dependency>
        <dependency>
            <groupId>org.bouncycastle</groupId>
            <artifactId>bcprov-jdk18on</artifactId>
            <version>${bouncycastle.version}</version>
        </dependency>
        <dependency>
            <groupId>io.sundr</groupId>
            <artifactId>builder-annotations</artifactId>
            <scope>provided</scope>
        </dependency>
        <!-- These are needed for builders and fluents, in api we are using fabric8 imports instead of sundrio's. -->
        <dependency>
            <groupId>io.sundr</groupId>
            <artifactId>sundr-core</artifactId>
            <version>${sundrio.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>io.fabric8</groupId>
            <artifactId>kubernetes-model-coordination</artifactId>
        </dependency>
        <dependency>
            <groupId>io.fabric8</groupId>
            <artifactId>openshift-model-operatorhub</artifactId>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven.compiler.version}</version>
                <executions>
                    <execution>
                        <id>default-compile</id>
                        <phase>compile</phase>
                        <goals>
                            <goal>compile</goal>
                        </goals>
                        <configuration>
                            <useIncrementalCompilation>false</useIncrementalCompilation>
                            <compilerArgs combine.self="override">
                                <arg>-Xlint:deprecation</arg>
                            </compilerArgs>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
                <version>${maven.javadoc.version}</version>
                <configuration>
                    <doclint>none</doclint>
                </configuration>
            </plugin>
        </plugins>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
            </resource>
            <resource>
                <directory>..</directory>
                <includes>
                    <include>kafka-versions.yaml</include>
                    <include>bridge.version</include>
                </includes>
            </resource>
        </resources>
    </build>

    <profiles>

        <profile>
            <id>none</id>
            <properties>
                <skipITs>true</skipITs>
            </properties>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
        </profile>

        <profile>
            <id>all</id>
            <properties>
                <skipTests>false</skipTests>
            </properties>
        </profile>

        <profile>
            <id>acceptance</id>
            <properties>
                <skipTests>false</skipTests>
                <groups>acceptance</groups>
            </properties>
        </profile>

        <profile>
            <id>regression</id>
            <properties>
                <skipTests>false</skipTests>
                <groups>regression</groups>
            </properties>
        </profile>

        <profile>
            <id>smoke</id>
            <properties>
                <skipTests>false</skipTests>
                <groups>smoke</groups>
            </properties>
        </profile>

        <profile>
            <id>sanity</id>
            <properties>
                <skipTests>false</skipTests>
                <groups>sanity</groups>
            </properties>
        </profile>

        <profile>
            <id>bridge</id>
            <properties>
                <skipTests>false</skipTests>
                <groups>bridge</groups>
            </properties>
        </profile>

        <profile>
            <id>upgrade</id>
            <properties>
                <skipTests>false</skipTests>
                <groups>upgrade</groups>
            </properties>
        </profile>

        <profile>
            <id>kraft_upgrade</id>
            <properties>
                <skipTests>false</skipTests>
                <groups>kraftupgrade</groups>
            </properties>
        </profile>

        <profile>
            <id>operators</id>
            <properties>
                <skipTests>false</skipTests>
                <groups>regression</groups>
                <it.test>
                    !kafka/**/*ST,
                    !bridge/**/*ST,
                    !cruisecontrol/**/*ST,
                    !mirrormaker/**/*ST,
                    !connect/**/*ST,
                    !security/**/*ST,
                    !rollingupdate/**/*ST,
                    !watcher/**/*ST,
                    !rollingupdate/**/*ST,
                    !tracing/**/*ST
                </it.test>
            </properties>
        </profile>

        <profile>
            <id>components</id>
            <properties>
                <skipTests>false</skipTests>
                <groups>regression</groups>
                <it.test>
                    kafka/**/*ST,
                    bridge/**/*ST,
                    cruisecontrol/**/*ST,
                    mirrormaker/**/*ST,
                    connect/**/*ST,
                    security/**/*ST,
                    rollingupdate/**/*ST,
                    watcher/**/*ST,
                    rollingupdate/**/*ST,
                    tracing/**/*ST
                </it.test>
            </properties>
        </profile>

        <profile>
            <id>azp_kafka_oauth</id>
            <properties>
                <skipTests>false</skipTests>
                <groups>regression,kafkasmoke</groups>
                <it.test>
                    kafka/**/*ST,
                    !kafka/listeners/*ST,
                    !kafka/dynamicconfiguration/**/*ST,
                    !kafka/ConfigProviderST,
                    security/oauth/**/*ST,
                    security/custom/*ST,
                    security/OpaIntegrationST
                </it.test>
            </properties>
        </profile>

        <profile>
            <id>azp_security</id>
            <properties>
                <skipTests>false</skipTests>
                <groups>regression</groups>
                <it.test>
                    security/**/*ST,
                    !security/oauth/**/*ST,
                    !security/custom/*ST,
                    !security/OpaIntegrationST
                </it.test>
            </properties>
        </profile>

        <profile>
            <id>azp_dynconfig_listeners_tracing_watcher</id>
            <properties>
                <skipTests>false</skipTests>
                <groups>regression</groups>
                <it.test>
                    kafka/dynamicconfiguration/**/*ST,
                    kafka/listeners/*ST,
                    kafka/ConfigProviderST,
                    operators/topic/ThrottlingQuotaST,
                    tracing/**/*ST,
                    watcher/**/*ST
                </it.test>
            </properties>
        </profile>

        <profile>
            <id>azp_rolling_update_bridge</id>
            <properties>
                <skipTests>false</skipTests>
                <groups>regression</groups>
                <it.test>
                    rollingupdate/**/*ST,
                    bridge/**/*ST
                </it.test>
            </properties>
        </profile>

        <profile>
            <id>azp_connect_mirrormaker</id>
            <properties>
                <skipTests>false</skipTests>
                <groups>regression</groups>
                <it.test>
                    connect/**/*ST,
                    mirrormaker/**/*ST
                </it.test>
            </properties>
        </profile>

        <profile>
            <id>azp_operators</id>
            <properties>
                <skipTests>false</skipTests>
                <groups>regression</groups>
                <it.test>
                    operators/**/*ST,
                    !operators/topic/ThrottlingQuotaST
                </it.test>
            </properties>
        </profile>

        <profile>
            <id>azp_remaining</id>
            <properties>
                <skipTests>false</skipTests>
                <groups>regression</groups>
                <it.test>
                    !kafka/**/*ST,
                    !mirrormaker/**/*ST,
                    !connect/**/*ST,
                    !security/**/*ST,
                    !operators/**/*ST,
                    !rollingupdate/**/*ST,
                    !watcher/**/*ST,
                    !tracing/**/*ST,
                    !bridge/**/*ST
                </it.test>
            </properties>
        </profile>

        <profile>
            <id>azp_rbac_remaining</id>
            <properties>
                <skipTests>false</skipTests>
                <groups>regression</groups>
                <it.test>
                    !kafka/**/*ST,
                    !mirrormaker/**/*ST,
                    !connect/**/*ST,
                    !security/**/*ST,
                    !operators/**/*ST,
                    !rollingupdate/**/*ST,
                    !watcher/**/*ST,
                    !tracing/**/*ST,
                    !LoggingChangeST
                </it.test>
            </properties>
        </profile>

        <profile>
            <id>azp_upgrade</id>
            <properties>
                <skipTests>false</skipTests>
                <groups>upgrade</groups>
                <it.test>
                    !KafkaUpgradeDowngradeST
                </it.test>
            </properties>
        </profile>

        <profile>
            <id>azp_kraft_upgrade</id>
            <properties>
                <skipTests>false</skipTests>
                <groups>kraftupgrade</groups>
                <it.test>
                    !KRaftKafkaUpgradeDowngradeST
                </it.test>
            </properties>
        </profile>

        <profile>
            <id>azp_kafka_upgrade</id>
            <properties>
                <skipTests>false</skipTests>
                <groups>upgrade,kraftupgrade</groups>
                <it.test>
                    KafkaUpgradeDowngradeST,
                    KRaftKafkaUpgradeDowngradeST
                </it.test>
            </properties>
        </profile>

        <profile>
            <id>azp_bridge</id>
            <properties>
                <skipTests>false</skipTests>
                <groups>bridge</groups>
                <it.test>
                    !olm/**/*ST,
                </it.test>
            </properties>
        </profile>

        <profile>
            <id>azp_migration</id>
            <properties>
                <skipTests>false</skipTests>
                <groups>migration</groups>
            </properties>
        </profile>

        <profile>
            <id>scalability</id>
            <properties>
                <skipTests>false</skipTests>
                <groups>
                    all,scalability
                </groups>
            </properties>
        </profile>

        <profile>
            <id>olm_acceptance_upgrade</id>
            <properties>
                <skipTests>false</skipTests>
                <groups>
                    acceptance,
                    olm,
                    olmupgrade
                </groups>
            </properties>
        </profile>

    </profiles>
</project>

# Source: k8up/templates/cleanup-hook.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: cleanup-service-account
  annotations:
    "helm.sh/hook": post-install,post-upgrade,post-delete
    "helm.sh/hook-weight": "1"
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
  labels:
    helm.sh/chart: k8up-4.5.1
    app.kubernetes.io/name: k8up
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm

---
# Source: k8up/templates/cleanup-hook.yaml
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: k8up-cleanup-roles
  namespace: default
  annotations:
    "helm.sh/hook": post-install,post-upgrade,post-delete
    "helm.sh/hook-weight": "2"
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
  labels:
    helm.sh/chart: k8up-4.5.1
    app.kubernetes.io/name: k8up
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups:
      - ""
    resources:
      - namespaces
    verbs:
      - get
      - list
  - apiGroups:
      - "rbac.authorization.k8s.io"
    resources:
      - rolebindings
      - roles
    verbs:
      - delete

---
# Source: k8up/templates/cleanup-hook.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cleanup-rolebinding
  annotations:
    "helm.sh/hook": post-install,post-upgrade,post-delete
    "helm.sh/hook-weight": "3"
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
  labels:
    helm.sh/chart: k8up-4.5.1
    app.kubernetes.io/name: k8up
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: k8up-cleanup-roles
subjects:
- kind: ServiceAccount
  name: cleanup-service-account
  namespace: default

---
# Source: k8up/templates/cleanup-hook.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: "my-release-cleanup"
  labels:
    helm.sh/chart: k8up-4.5.1
    app.kubernetes.io/name: k8up
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": post-install,post-upgrade,post-delete
    "helm.sh/hook-weight": "4"
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
spec:
  template:
    metadata:
      name: "my-release"
      labels:
        app.kubernetes.io/name: k8up
        app.kubernetes.io/instance: my-release
    spec:
      restartPolicy: Never
      serviceAccountName: cleanup-service-account
      containers:
      - name: "my-release-cleanup"
        image: "docker.io/bitnami/kubectl:latest"
        imagePullPolicy: IfNotPresent
        command:
          - sh
          - -c
        args:
          - |
            #!/bin/bash

            NAMESPACES=$(kubectl get namespace -ojson | jq -r '.items[].metadata.name')

            for ns in $NAMESPACES
            do
              kubectl -n "$ns" delete rolebinding pod-executor-namespaced --ignore-not-found=true
              kubectl -n "$ns" delete role pod-executor --ignore-not-found=true
            done

---

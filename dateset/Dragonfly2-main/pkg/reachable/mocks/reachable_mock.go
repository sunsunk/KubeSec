// Code generated by MockGen. DO NOT EDIT.
// Source: reachable.go
//
// Generated by this command:
//
//	mockgen -destination mocks/reachable_mock.go -source reachable.go -package mocks
//
// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockReachable is a mock of Reachable interface.
type MockReachable struct {
	ctrl     *gomock.Controller
	recorder *MockReachableMockRecorder
}

// MockReachableMockRecorder is the mock recorder for MockReachable.
type MockReachableMockRecorder struct {
	mock *MockReachable
}

// NewMockReachable creates a new mock instance.
func NewMockReachable(ctrl *gomock.Controller) *MockReachable {
	mock := &MockReachable{ctrl: ctrl}
	mock.recorder = &MockReachableMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockReachable) EXPECT() *MockReachableMockRecorder {
	return m.recorder
}

// Check mocks base method.
func (m *MockReachable) Check() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Check")
	ret0, _ := ret[0].(error)
	return ret0
}

// Check indicates an expected call of Check.
func (mr *MockReachableMockRecorder) Check() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Check", reflect.TypeOf((*MockReachable)(nil).Check))
}

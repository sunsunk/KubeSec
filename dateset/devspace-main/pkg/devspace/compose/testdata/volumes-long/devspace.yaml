version: v2beta1

name: docker-compose

deployments:
  db:
    helm:
      values:
        containers:
        - name: db-container
          image: alpine
          command:
          - sh
          - -c
          - 'cat /tmp/cache/hi && tail -f /dev/null'
          volumeMounts:
          - containerPath: /var/lib/mydata
            volume:
              name: db-1
              shared: true
          - containerPath: /var/lib/ro
            volume:
              name: db-2
              shared: true
              readOnly: true
          - containerPath: /var/lib/mysql
            volume:
              name: datavolume
              shared: true
          - containerPath: /var/lib/readonly
            volume:
              name: datavolume
              shared: true
              readOnly: true
          - containerPath: /var/lib/tmpfs
            volume:
              name: db-3
              readOnly: false
          - containerPath: /var/lib/tmpfs-1000
            volume:
              name: db-4
              readOnly: false
          - containerPath: /var/lib/data
            volume:
              name: volume-1
              readOnly: false
          - containerPath: /tmp/cache
            volume:
              name: volume-2
              readOnly: false
          - containerPath: /etc/configs
            volume:
              name: volume-3
              readOnly: false
        volumes:
        - name: db-1
          size: 5Gi
        - name: db-2
          size: 5Gi
        - name: datavolume
          size: 5Gi
        - name: db-3
          emptyDir: {}
        - name: db-4
          emptyDir:
            sizeLimit: "1000"
        - name: volume-1
          emptyDir: {}
        - name: volume-2
          emptyDir: {}
        - name: volume-3
          emptyDir: {}
  backend-1-2:
    helm:
      values:
        containers:
        - name: backend-1-2-container
          image: alpine
          command:
          - sh
          - -c
          - 'cat /tmp/cache/hi && tail -f /dev/null'
          volumeMounts:
          - containerPath: /var/lib/mydata
            volume:
              name: backend-1-2-1
              shared: true
        volumes:
        - name: backend-1-2-1
          size: 5Gi

dev:
  db:
    labelSelector:
      app.kubernetes.io/component: db
    command:
      - sh
      - -c
      - 'cat /tmp/cache/hi && tail -f /dev/null'
    sync:
      - path: /opt/data:/var/lib/data
        startContainer: true
      - path: ./cache:/tmp/cache
        startContainer: true
      - path: ${devspace.userHome}/configs:/etc/configs
        startContainer: true


# dev:
#   sync:
#   - containerName: db-container
#     labelSelector:
#       app.kubernetes.io/component: db
#     localSubPath: /opt/data
#     containerPath: /var/lib/data
#   - containerName: db-container
#     labelSelector:
#       app.kubernetes.io/component: db
#     localSubPath: ./cache
#     containerPath: /tmp/cache
#   - containerName: db-container
#     labelSelector:
#       app.kubernetes.io/component: db
#     localSubPath: $!(echo "$HOME/configs")
#     containerPath: /etc/configs/

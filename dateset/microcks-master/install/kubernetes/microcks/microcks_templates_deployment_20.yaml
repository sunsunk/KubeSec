# Source: microcks/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: "microcks-keycloak-postgresql"
  labels:
    app: "microcks"
    container: keycloak-postgresql
    group: microcks
    
  annotations:
    
spec:
  strategy:
    type: Recreate
  replicas: 1
  selector:
    matchLabels:
      app: "microcks"
      deploymentconfig: keycloak-postgresql
      container: keycloak-postgresql
      group: microcks
  template:
    metadata:
      labels:
        app: "microcks"
        deploymentconfig: keycloak-postgresql
        container: keycloak-postgresql
        group: microcks
        
      annotations:
        
    spec:
      securityContext:
        runAsUser: 26
        runAsGroup: 26
        fsGroup: 26
      terminationGracePeriodSeconds: 60
      containers:
      - name: keycloak-postgresql
        image: centos/postgresql-95-centos7:latest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 5432
          protocol: TCP
        readinessProbe:
          timeoutSeconds: 1
          initialDelaySeconds: 5
          exec:
            command:
            - "/bin/sh"
            - "-i"
            - "-c"
            - psql 127.0.0.1 -U ${POSTGRESQL_USER} -q -d ${POSTGRESQL_DATABASE}
              -c 'SELECT 1'
        livenessProbe:
          timeoutSeconds: 1
          initialDelaySeconds: 30
          tcpSocket:
            port: 5432
        env:
        - name: POSTGRESQL_USER
          valueFrom:
            secretKeyRef:
              key: postgresUsername
              name: "microcks-keycloak-admin"
        - name: POSTGRESQL_PASSWORD
          valueFrom:
            secretKeyRef:
              key: postgresPassword
              name: "microcks-keycloak-admin"
        - name: POSTGRESQL_DATABASE
          value: root
        - name: POSTGRESQL_MAX_CONNECTIONS
          value: '100'
        - name: POSTGRESQL_SHARED_BUFFERS
          value: 12MB
        volumeMounts:
          - name: "microcks-keycloak-postgresql-data"
            mountPath: "/var/lib/pgsql/data"
      volumes:
      - name: "microcks-keycloak-postgresql-data"
        persistentVolumeClaim:
          claimName: "microcks-keycloak-postgresql"

<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project activeEnvironment="Default" name="RefTest-script" resourceRoot="" soapui-version="4.5.1" xmlns:con="http://eviware.com/soapui/config"><con:settings/><con:interface xsi:type="con:WsdlInterface" wsaVersion="NONE" name="HelloServiceSoapBinding" type="wsdl" bindingName="{http://lbroudoux.github.com/test/service}HelloServiceSoapBinding" soapVersion="1_1" anonymous="optional" definition="http://localhost:8181/RefTest/services/HelloService?wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="http://localhost:8181/RefTest/services/HelloService?wsdl"><con:part><con:url>http://localhost:8181/RefTest/services/HelloService?wsdl</con:url><con:content><![CDATA[<wsdl:definitions name="HelloService" targetNamespace="http://lbroudoux.github.com/test/service" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:tns="http://lbroudoux.github.com/test/service" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:ns1="http://schemas.xmlsoap.org/soap/http">
  <wsdl:types>
    <xs:schema attributeFormDefault="unqualified" elementFormDefault="unqualified" targetNamespace="http://lbroudoux.github.com/test/service" xmlns:xs="http://www.w3.org/2001/XMLSchema">
      <xs:element name="sayHello" type="tns:sayHello"/>
      <xs:element name="sayHelloResponse" type="tns:sayHelloResponse"/>
      <xs:complexType name="sayHello">
        <xs:sequence>
          <xs:element minOccurs="0" name="name" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="sayHelloResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="sayHello" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="HelloException" type="tns:HelloException"/>
      <xs:complexType name="HelloException">
        <xs:sequence>
          <xs:element name="code" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="HelloException">
    <wsdl:part element="tns:HelloException" name="HelloException"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="sayHelloResponse">
    <wsdl:part element="tns:sayHelloResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="sayHello">
    <wsdl:part element="tns:sayHello" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:portType name="HelloService">
    <wsdl:operation name="sayHello">
      <wsdl:input message="tns:sayHello" name="sayHello"></wsdl:input>
      <wsdl:output message="tns:sayHelloResponse" name="sayHelloResponse"></wsdl:output>
      <wsdl:fault message="tns:HelloException" name="HelloException"></wsdl:fault>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="HelloServiceSoapBinding" type="tns:HelloService">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="sayHello">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="sayHello">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="sayHelloResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="HelloException">
        <soap:fault name="HelloException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="HelloService">
    <wsdl:port binding="tns:HelloServiceSoapBinding" name="HelloServiceEndpointPort">
      <soap:address location="http://localhost:8181/RefTest/services/HelloService"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>http://localhost:8181/RefTest/services/HelloService</con:endpoint><con:endpoint>http://snl09705:8088/mockHelloServiceSoapBinding</con:endpoint></con:endpoints><con:operation isOneWay="false" action="" name="sayHello" bindingOperationName="sayHello" type="Request-Response" outputName="sayHelloResponse" inputName="sayHello" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8181/RefTest/services/HelloService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ser="http://lbroudoux.github.com/test/service">
   <soapenv:Header/>
   <soapenv:Body>
      <ser:sayHello>
         <!--Optional:-->
         <name>?</name>
      </ser:sayHello>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://lbroudoux.github.com/test/service/HelloService/sayHello"/></con:call></con:operation></con:interface><con:testSuite name="TestSuite from Request"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TestCase 1" searchProperties="true"><con:settings/><con:testStep type="request" name="Anne Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>HelloServiceSoapBinding</con:interface><con:operation>sayHello</con:operation><con:request name="Anne Request"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://snl09705:8088/mockHelloServiceSoapBinding</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ser="http://lbroudoux.github.com/test/service">
   <soapenv:Header/>
   <soapenv:Body>
      <ser:sayHello>
         <!--Optional:-->
         <name>Anne</name>
      </ser:sayHello>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="Laurent Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>HelloServiceSoapBinding</con:interface><con:operation>sayHello</con:operation><con:request name="Laurent Request"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8181/RefTest/services/HelloService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ser="http://lbroudoux.github.com/test/service">
   <soapenv:Header/>
   <soapenv:Body>
      <ser:sayHello>
         <!--Optional:-->
         <name>Laurent</name>
      </ser:sayHello>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/></con:testCase><con:properties/></con:testSuite><con:mockService port="8088" path="/mockHelloServiceSoapBinding" host="snl09705" name="HelloServiceScriptBinding"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.mock.WsdlMockService@require-soap-action">false</con:setting></con:settings><con:mockOperation name="sayHello" interface="HelloServiceSoapBinding" operation="sayHello"><con:settings/><con:dispatchPath>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder( mockRequest.requestContent )

def name = holder["//name"]
 
if (name == "Anne"){
    return "Anne Response"
} else if (name == "Laurent"){
    return "Laurent Response"
} else {
    return "Laurent Response"
}</con:dispatchPath><con:dispatchStyle>SCRIPT</con:dispatchStyle><con:defaultResponse>Response 1</con:defaultResponse><con:response name="Laurent Response" encoding="UTF-8"><con:settings/><con:responseContent><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ser="http://lbroudoux.github.com/test/service">
   <soapenv:Header/>
   <soapenv:Body>
      <ser:sayHelloResponse>
         <!--Optional:-->
         <sayHello>Hello Laurent Broudoux !</sayHello>
      </ser:sayHelloResponse>
   </soapenv:Body>
</soapenv:Envelope>]]></con:responseContent><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://lbroudoux.github.com/test/service/HelloService/sayHelloResponse"/></con:response><con:response name="Anne Response" encoding="UTF-8"><con:settings/><con:responseContent><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ser="http://lbroudoux.github.com/test/service">
   <soapenv:Header/>
   <soapenv:Body>
      <ser:sayHelloResponse>
         <!--Optional:-->
         <sayHello>Hello Anne Broudoux !</sayHello>
      </ser:sayHelloResponse>
   </soapenv:Body>
</soapenv:Envelope>]]></con:responseContent><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://lbroudoux.github.com/test/service/HelloService/sayHelloResponse"/></con:response><con:dispatchConfig/></con:mockOperation><con:properties><con:property><con:name>version</con:name><con:value>1.0</con:value></con:property></con:properties></con:mockService><con:properties/><con:wssContainer/></con:soapui-project>
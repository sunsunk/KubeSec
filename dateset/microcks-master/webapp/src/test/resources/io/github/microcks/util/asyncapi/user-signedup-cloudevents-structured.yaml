asyncapi: '2.0.0'
id: 'urn:io.microcks.example.user-signedup'
info:
  title: User signed-up CloudEvents API
  version: 0.1.4
  description: Sample AsyncAPI for user signedup events defined using CloudEvents structured
  contact:
    name: Laurent Broudoux
    url: https://github.com/lbroudoux
    email: laurent.broudoux@gmail.com
  license:
    name: MIT License
    url: https://opensource.org/licenses/MIT
defaultContentType: application/json
channels:
  user/signedup:
    description: The topic on which user signed up events may be consumed
    subscribe:
      summary: Receive informations about user signed up
      operationId: receivedUserSIgnedUp
      message:
        description: An event describing that a user just signed up.
        bindings:
          kafka:
            key:
              type: string
              description: Timestamp of event as milliseconds since 1st Jan 1970
        headers:
          type: object
          properties:
            sentAt:
              type: string
              format: date-time
              description: Date and time when the event was sent
            content-type:
              type: string
              enum:
                - 'application/cloudevents+json; charset=UTF-8'
        payload:
          $ref: '#/components/schemas/userSignedUpPayload'
        examples:
          - laurent:
              summary: Example for Laurent user
              headers: |-
                {
                  "sentAt": "2020-03-11T08:03:28Z",
                  "content-type": "application/cloudevents+json; charset=UTF-8"
                }
              payload: |-
                {
                  "specversion": "1.0",
                  "type": "com.example.someevent",
                  "source": "/mycontext/subcontext",
                  "id": "1234-1234-1234",
                  "time": "2020-03-11T08:03:28Z",
                  "datacontenttype" : "application/json",
                  "data": {
                    "fullName": "Laurent Broudoux",
                    "email": "laurent@microcks.io",
                    "age": 41
                  }
                }
          - john:
              summary: Example for John Doe user
              headers:
                sentAt: "2020-03-11T08:03:38Z"
                content-type: "application/cloudevents+json; charset=UTF-8"
              payload:
                specversion: "1.0"
                type: "io.microcks.example.user-signedup"
                source: "/mycontext/subcontext"
                id: "{{uuid()}}"
                time: "{{now(yyyy-MM-dd'T'HH:mm:SS'Z')}}"
                datacontenttype : "application/json"
                data:
                  fullName: John Doe
                  email: john@microcks.io
                  age: 36
components:
  schemas:
    userSignedUpPayload:
      type: object
      allOf:
        - $ref: 'https://raw.githubusercontent.com/cloudevents/spec/v1.0.1/spec.json'
      properties:
        data:
          $ref: '#/components/schemas/userSignedUpData'
    userSignedUpData:
      type: object
      properties:
        fullName:
          type: string
        email:
          type: string
          format: email
        age:
          type: integer
          minimum: 18

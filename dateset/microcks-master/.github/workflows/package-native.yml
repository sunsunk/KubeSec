name: package-native
on:
  workflow_call:
    inputs:
      image-tag:
        description: 'The tag to use for the images'
        type: string
        required: true

jobs:
  build-native-images:
    runs-on: ubuntu-latest-4-cores
    environment: Build
    strategy:
      matrix:
        arch:
          - amd64
          - arm64
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Build Java components
        run: mvn -B -DskipTests -Pprod install

      - name: Set IMAGE_TAG environment from input
        run: |
          set -x
          echo "IMAGE_TAG=${{ inputs.image-tag }}-native" >> "$GITHUB_ENV"

      - name: Set up QEMU
        if: matrix.arch == 'arm64'
        uses: docker/setup-qemu-action@v3
        with:
          platforms: ${{ matrix.arch }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          install: true

      - name: Set builder image for amd64
        if: matrix.arch == 'amd64'
        run: |
          echo "BUILDER_IMAGE=paketobuildpacks/builder-jammy-base:latest" >> "$GITHUB_ENV"
          echo "RUNNER_IMAGE=paketobuildpacks/run-jammy-base:latest" >> "$GITHUB_ENV"

      - name: Set builder image for arm64
        if: matrix.arch == 'arm64'
        run: |
          echo "BUILDER_IMAGE=dashaun/builder@sha256:378bdc9fd7bdba105d64f294a8a7ca168dce5e496cad22307ccabb66fb571f9a" >> "$GITHUB_ENV"
          echo "RUNNER_IMAGE=dmikusa/run-jammy-base@sha256:01d2f750569d14b0374dfa3f9f106ada23ff3dfa68f2ac33fb95d3d8e058b5e9" >> "$GITHUB_ENV"

      - name: Build native image for ${{ matrix.arch }}
        run: |
          cd ${{github.workspace}}/distro/uber
          mvn -Pnative spring-boot:build-image -Dspring-boot.build-image.imageName=microcks/microcks-uber:$IMAGE_TAG-${{ matrix.arch }} \
              -Dspring-boot.build-image.builder=$BUILDER_IMAGE \
              -Dspring-boot.build-image.runImage=$RUNNER_IMAGE

      - name: Save native image for ${{ matrix.arch }}
        uses: ishworkh/docker-image-artifact-upload@v1
        with:
          image: "microcks/microcks-uber:${{ env.IMAGE_TAG }}-${{ matrix.arch }}"

  push-app-images:
    runs-on: ubuntu-latest
    environment: Build
    needs: build-native-images
    strategy:
      matrix:
        arch:
          - amd64
          - arm64
    steps:
      - name: Set IMAGE_TAG environment from input
        run: |
          echo "IMAGE_TAG=${{inputs.image-tag}}-native" >> "$GITHUB_ENV"

      - name: Get saved images for ${{ matrix.arch }}
        uses: ishworkh/docker-image-artifact-download@v1
        with:
          image: "microcks/microcks-uber:${{ env.IMAGE_TAG }}-${{ matrix.arch }}"

      - name: Login to Quay.io and Docker Hub registries
        run: |
          echo ${{ secrets.QUAY_PASSWORD }} | docker login -u ${{ secrets.QUAY_USERNAME }} --password-stdin quay.io
          echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin docker.io

      - name: Tag image
        run: |
          docker tag microcks/microcks-uber:${{ env.IMAGE_TAG }}-${{ matrix.arch }} quay.io/microcks/microcks-uber:${{ env.IMAGE_TAG }}-${{ matrix.arch }}
          docker tag microcks/microcks-uber:${{ env.IMAGE_TAG }}-${{ matrix.arch }} docker.io/microcks/microcks-uber:${{ env.IMAGE_TAG }}-${{ matrix.arch }}

      - name: Push image
        run: |
          docker push quay.io/microcks/microcks-uber:${{ env.IMAGE_TAG }}-${{ matrix.arch }}
          docker push docker.io/microcks/microcks-uber:${{ env.IMAGE_TAG }}-${{ matrix.arch }}

  create-app-multiarch-manifests:
    needs: push-app-images
    environment: Build
    runs-on: ubuntu-latest
    steps:
      - name: Set IMAGE_TAG environment from input
        run: |
          echo "IMAGE_TAG=${{inputs.image-tag}}-native" >> "$GITHUB_ENV"

      - name: Login to Quay.io and Docker Hub registries
        run: |
          echo ${{ secrets.QUAY_PASSWORD }} | docker login -u ${{ secrets.QUAY_USERNAME }} --password-stdin quay.io
          echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin docker.io

      - name: Create and push multi-arch manifests
        shell: bash
        run: |
          docker manifest create quay.io/microcks/microcks-uber:${{ env.IMAGE_TAG }} \
            -a quay.io/microcks/microcks-uber:${{ env.IMAGE_TAG }}-amd64 \
            -a quay.io/microcks/microcks-uber:${{ env.IMAGE_TAG }}-arm64
          docker manifest push quay.io/microcks/microcks-uber:${{ env.IMAGE_TAG }}
          docker manifest create docker.io/microcks/microcks-uber:${{ env.IMAGE_TAG }} \
            -a docker.io/microcks/microcks-uber:${{ env.IMAGE_TAG }}-amd64 \
            -a docker.io/microcks/microcks-uber:${{ env.IMAGE_TAG }}-arm64
          docker manifest push docker.io/microcks/microcks-uber:${{ env.IMAGE_TAG }}

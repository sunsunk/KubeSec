# Source: metallb/templates/speaker.yaml
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: my-release-metallb-speaker
  namespace: "default"
  labels:
    helm.sh/chart: metallb-0.0.0
    app.kubernetes.io/name: metallb
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.0.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: speaker
spec:
  updateStrategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: metallb
      app.kubernetes.io/instance: my-release
      app.kubernetes.io/component: speaker
  template:
    metadata:
      labels:
        app.kubernetes.io/name: metallb
        app.kubernetes.io/instance: my-release
        app.kubernetes.io/component: speaker
    spec:
      serviceAccountName: my-release-metallb-speaker
      terminationGracePeriodSeconds: 0
      hostNetwork: true
      volumes:
        - name: memberlist
          secret:
            secretName: my-release-metallb-memberlist
            defaultMode: 420
        - name: metallb-excludel2
          configMap:
            defaultMode: 256
            name: metallb-excludel2
        - name: frr-sockets
          emptyDir: {}
        - name: frr-startup
          configMap:
            name: my-release-metallb-frr-startup
        - name: frr-conf
          emptyDir: {}
        - name: reloader
          emptyDir: {}
        - name: metrics
          emptyDir: {}
      initContainers:
        # Copies the initial config files with the right permissions to the shared volume.
        - name: cp-frr-files
          image: quay.io/frrouting/frr:9.0.2
          securityContext:
            runAsUser: 100
            runAsGroup: 101
          command: ["/bin/sh", "-c", "cp -rLf /tmp/frr/* /etc/frr/"]
          volumeMounts:
            - name: frr-startup
              mountPath: /tmp/frr
            - name: frr-conf
              mountPath: /etc/frr
        # Copies the reloader to the shared volume between the speaker and reloader.
        - name: cp-reloader
          image: quay.io/metallb/speaker:v0.0.0
          command: ["/bin/sh", "-c", "cp -f /frr-reloader.sh /etc/frr_reloader/"]
          volumeMounts:
            - name: reloader
              mountPath: /etc/frr_reloader
        # Copies the metrics exporter
        - name: cp-metrics
          image: quay.io/metallb/speaker:v0.0.0
          command: ["/bin/sh", "-c", "cp -f /frr-metrics /etc/frr_metrics/"]
          volumeMounts:
            - name: metrics
              mountPath: /etc/frr_metrics
      shareProcessNamespace: true
      containers:
      - name: speaker
        image: quay.io/metallb/speaker:v0.0.0
        args:
        - --port=7472
        - --log-level=info
        env:
        - name: METALLB_NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: METALLB_HOST
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        - name: METALLB_ML_BIND_ADDR
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        
        - name: METALLB_ML_LABELS
          value: "app.kubernetes.io/name=metallb,app.kubernetes.io/component=speaker"
        - name: METALLB_ML_BIND_PORT
          value: "7946"
        - name: METALLB_ML_SECRET_KEY_PATH
          value: "/etc/ml_secret_key"
        - name: FRR_CONFIG_FILE
          value: /etc/frr_reloader/frr.conf
        - name: FRR_RELOADER_PID_FILE
          value: /etc/frr_reloader/reloader.pid
        - name: METALLB_BGP_TYPE
          value: frr
        ports:
        - name: monitoring
          containerPort: 7472
        - name: memberlist-tcp
          containerPort: 7946
          protocol: TCP
        - name: memberlist-udp
          containerPort: 7946
          protocol: UDP
        livenessProbe:
          httpGet:
            path: /metrics
            port: monitoring
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 1
          successThreshold: 1
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /metrics
            port: monitoring
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 1
          successThreshold: 1
          failureThreshold: 3
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
            add:
            - NET_RAW
        volumeMounts:
          - name: memberlist
            mountPath: /etc/ml_secret_key
          - name: reloader
            mountPath: /etc/frr_reloader
          - name: metallb-excludel2
            mountPath: /etc/metallb
      - name: frr
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
            - NET_RAW
            - SYS_ADMIN
            - NET_BIND_SERVICE
        image: quay.io/frrouting/frr:9.0.2
        env:
          - name: TINI_SUBREAPER
            value: "true"
        volumeMounts:
          - name: frr-sockets
            mountPath: /var/run/frr
          - name: frr-conf
            mountPath: /etc/frr
        # The command is FRR's default entrypoint & waiting for the log file to appear and tailing it.
        # If the log file isn't created in 60 seconds the tail fails and the container is restarted.
        # This workaround is needed to have the frr logs as part of kubectl logs -c frr < speaker_pod_name >.
        command:
          - /bin/sh
          - -c
          - |
            /sbin/tini -- /usr/lib/frr/docker-start &
            attempts=0
            until [[ -f /etc/frr/frr.log || $attempts -eq 60 ]]; do
              sleep 1
              attempts=$(( $attempts + 1 ))
            done
            tail -f /etc/frr/frr.log
        livenessProbe:
          httpGet:
            path: livez
            port: 7473
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 1
          successThreshold: 1
          failureThreshold: 3
        startupProbe:
          httpGet:
            path: /livez
            port: 7473
          failureThreshold: 30
          periodSeconds: 5
      - name: reloader
        image: quay.io/frrouting/frr:9.0.2
        command: ["/etc/frr_reloader/frr-reloader.sh"]
        volumeMounts:
          - name: frr-sockets
            mountPath: /var/run/frr
          - name: frr-conf
            mountPath: /etc/frr
          - name: reloader
            mountPath: /etc/frr_reloader
      - name: frr-metrics
        image: quay.io/frrouting/frr:9.0.2
        command: ["/etc/frr_metrics/frr-metrics"]
        args:
          - --metrics-port=7473
        ports:
          - containerPort: 7473
            name: monitoring
        volumeMounts:
          - name: frr-sockets
            mountPath: /var/run/frr
          - name: frr-conf
            mountPath: /etc/frr
          - name: metrics
            mountPath: /etc/frr_metrics
      nodeSelector:
        "kubernetes.io/os": linux
      tolerations:
      - key: node-role.kubernetes.io/master
        effect: NoSchedule
        operator: Exists
      - key: node-role.kubernetes.io/control-plane
        effect: NoSchedule
        operator: Exists

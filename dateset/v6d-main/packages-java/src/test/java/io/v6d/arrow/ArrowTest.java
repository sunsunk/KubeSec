// Copyright 2020-2023 Alibaba Group Holding Limited.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//   http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// Code generated by alibaba/fastffi. DO NOT EDIT.
//
package io.v6d.arrow;

import io.v6d.std.string;
import io.v6d.std.vector;
import lombok.val;
import org.junit.Before;
import org.junit.Test;

/** Unit test for buffer and blob APIs. */
public class ArrowTest {
    @Before
    public void prepareResolvers() {}

    @Test
    public void testInt32Array() {
        //        val array = Int32
        //        Client client = Client.create();
        //        assertEquals(40, 40);

        val str = string.create("java string");
        System.out.println(str.toJavaString());
        vector<Integer> vec = vector.create(Integer.class);
        //        System.out.println(size_t.cast(vec.size()).get());
        //        vec.delete();
        //
        //        size_t.Factory factory = FFITypeFactory.getFactory(size_t.class);
        //        val sz = factory.create(1000);
        //        System.out.println(sz.get());

        //        CXXStdString.Factory factory = FFITypeFactory.getFactory(CXXStdString.class);
    }
}

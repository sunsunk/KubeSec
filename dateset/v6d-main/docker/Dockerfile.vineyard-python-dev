# Copyright 2020-2023 Alibaba Group Holding Limited.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# build vineyard-python-dev
FROM ghcr.io/v6d-io/v6d/vineyard-manylinux2014:20240218 as wheel

ENV python=cp310-cp310

RUN for pylibs in /opt/_internal/tools/lib/*; do\
        sed -i 's/p.error/logger.warning/g' $pylibs/site-packages/auditwheel/main_repair.py || true; \
    done

COPY thirdparty /work/v6d/thirdparty

COPY cmake /work/v6d/cmake
COPY python/vineyard/version.py.in /work/v6d/python/vineyard/version.py.in

COPY CMakeLists.txt /work/v6d/CMakeLists.txt
COPY setup.cfg.in /work/v6d/setup.cfg.in
COPY vineyard-config-version.in.cmake /work/v6d/vineyard-config-version.in.cmake
COPY vineyard-config.in.cmake /work/v6d/vineyard-config.in.cmake

COPY src/common /work/v6d/src/common
COPY src/client /work/v6d/src/client

COPY python/client.cc /work/v6d/python/client.cc
COPY python/core.cc /work/v6d/python/core.cc
COPY python/error.cc /work/v6d/python/error.cc
COPY python/pybind11_docs.cc /work/v6d/python/pybind11_docs.cc
COPY python/pybind11_docs.h /work/v6d/python/pybind11_docs.h
COPY python/pybind11_utils.cc /work/v6d/python/pybind11_utils.cc
COPY python/pybind11_utils.h /work/v6d/python/pybind11_utils.h
COPY python/vineyard.cc /work/v6d/python/vineyard.cc

RUN cd /work/v6d && \
    mkdir build && \
    cd build && \
    export PATH=$PATH:/opt/python/$python/bin && \
    pip3 install -U pip setuptools wheel && \
    cmake .. -DBUILD_SHARED_LIBS=OFF \
             -DBUILD_VINEYARD_SERVER=OFF \
             -DBUILD_VINEYARD_CLIENT=ON \
             -DBUILD_VINEYARD_PYTHON_BINDINGS=ON \
             -DBUILD_VINEYARD_PYPI_PACKAGES=ON \
             -DBUILD_VINEYARD_LLM_CACHE=OFF \
             -DBUILD_VINEYARD_BASIC=OFF \
             -DBUILD_VINEYARD_IO=OFF \
             -DBUILD_VINEYARD_GRAPH=OFF \
             -DBUILD_VINEYARD_MALLOC=OFF \
             -DBUILD_VINEYARD_MIGRATION=ON \
             -DBUILD_VINEYARD_HOSSEINMOEIN_DATAFRAME=OFF \
             -DBUILD_VINEYARD_TESTS=OFF \
             -DBUILD_VINEYARD_TESTS_ALL=OFF \
             -DBUILD_VINEYARD_BENCHMARKS=OFF \
             -DBUILD_VINEYARD_BENCHMARKS_ALL=OFF \
             -DBUILD_VINEYARD_COVERAGE=OFF \
             -DBUILD_VINEYARD_PROFILING=OFF \
             -DCMAKE_BUILD_TYPE=Release \
             -DPYTHON_EXECUTABLE=/opt/python/$python/bin/python && \
    make vineyard_client_python -j$(nproc)

COPY README.rst /work/v6d/README.rst
COPY setup.py /work/v6d/setup.py
COPY setup_bdist.py /work/v6d/setup_bdist.py
COPY setup_io.py /work/v6d/setup_io.py
COPY requirements.txt /work/v6d/requirements.txt
COPY requirements-dev.txt /work/v6d/requirements-dev.txt
COPY requirements-extra.txt /work/v6d/requirements-extra.txt
COPY requirements-kubernetes.txt /work/v6d/requirements-kubernetes.txt
COPY requirements-setup.txt /work/v6d/requirements-setup.txt
COPY modules/io /work/v6d/modules/io

COPY python/vineyard /work/v6d/python/vineyard

# make sure the library been copied
RUN cd /work/v6d/build && \
    make vineyard_client_python -j$(nproc) && \
    cd /work && \
    export LD_LIBRARY_PATH=/work/v6d/build/lib:$LD_LIBRARY_PATH && \
    mkdir -p fixed_wheels/ && \
    cd /work/v6d && \
    rm -rf dist build/lib* && \
    /opt/python/$python/bin/python setup.py bdist_wheel && \
    for wheel in `ls dist/*`; do \
        auditwheel repair -w fixed_wheels $wheel; \
    done && \
    mv /work/v6d/fixed_wheels/* /work/fixed_wheels/ && \
    cd /work/v6d && \
    rm -rf dist build/lib* && \
    /opt/python/$python/bin/python setup_bdist.py bdist_wheel && \
    mv /work/v6d/dist/*.whl /work/fixed_wheels/ && \
    cd /work/v6d && \
    rm -rf dist build/lib* && \
    /opt/python/$python/bin/python setup_io.py bdist_wheel && \
    mv /work/v6d/dist/*.whl /work/fixed_wheels/ && \
    rm -rf /work/v6d

# generate final image
FROM python:3.10-slim-buster

SHELL ["/bin/bash", "-l", "-c"]
COPY --from=wheel /work/fixed_wheels/*.whl /tmp/

RUN cd /tmp &&\
    pip3 install --no-cache-dir *.whl ipython

ENTRYPOINT ["/bin/bash", "-l", "-c" ]

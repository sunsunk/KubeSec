# Copyright 2020-2023 Alibaba Group Holding Limited.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

setup:
  env: kind
  kubeconfig: /tmp/e2e-k8s.config
  steps:
    - name: download dask image for syncing the dask worker and scheduler.
      command: |
        docker pull ghcr.io/dask/dask:2022.8.1
        docker tag ghcr.io/dask/dask:2022.8.1 localhost:5001/dask:2022.8.1
        docker push localhost:5001/dask:2022.8.1
    - name: download all dask repartition images into kind cluster
      command: |
        make -C k8s/test/e2e publish-repartition-images REGISTRY=localhost:5001
    - name: install dask-scheduler and dask-worker
      command: |
        helm repo add dask https://helm.dask.org/
        helm repo update
        helm install my-release dask/dask -f k8s/test/e2e/repartition-demo/repartition-dask-helm-values.yaml \
            --version 2022.8.1
      wait:
        - namespace: default
          resource: deployment/my-release-dask-scheduler
          for: condition=Available
        - namespace: default
          resource: deployment/my-release-dask-worker
          for: condition=Available
    - name: install job1
      command: |
        kubectl create namespace vineyard-job
        kubectl label namespace vineyard-job operation-injection=enabled
        sed 's/$job/daskRepartitionJob1/' k8s/test/e2e/repartition-demo/repartition-job.yaml | \
          gomplate -d config=k8s/test/e2e/repartition-demo/repartition-job-config.yaml | \
          kubectl apply -f -
      wait:
        - namespace: vineyard-job
          resource: deployment/dask-repartition-job1
          for: condition=Available
    - name: install job2
      command: |
        sed 's/$job/daskRepartitionJob2/' k8s/test/e2e/repartition-demo/repartition-job.yaml | \
          gomplate -d config=k8s/test/e2e/repartition-demo/repartition-job-config.yaml | \
          kubectl apply -f -
      wait:
        - namespace: vineyard-job
          resource: deployment/dask-repartition-job2
          for: condition=Available
  timeout: 40m

cleanup:
  # always never success failure
  on: success

verify:
  # verify with retry strategy
  retry:
    # max retry count
    count: 10
    # the interval between two attempts, e.g. 10s, 1m.
    interval: 10s
  cases:
    - query: |
        kubectl get pod -l app=dask-repartition-job2 -n vineyard-job -o name | \
          awk -F '/' '{print $2}' | \
          xargs kubectl logs -n vineyard-job | \
          tail -n 1 | \
          yq e '{"partition": .}' - | \
          yq e 'to_entries' -
      expected: ../verify/partition.yaml

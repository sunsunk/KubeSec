# Copyright 2020-2023 Alibaba Group Holding Limited.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

# Test assembly operation in the same node
setup:
  env: kind
  kubeconfig: /tmp/e2e-k8s.config
  steps:
    - name: download all sidecar images into kind cluster
      command: |
        make -C k8s/test/e2e publish-sidecar-images REGISTRY=localhost:5001
    - name: install app with default sidecar via vineyardctl
      command: |
        kubectl create namespace vineyard-job
        go run k8s/cmd/main.go inject -f k8s/test/e2e/sidecar-demo/sidecar-with-default-sidecar.yaml --apply-resources\
            --sidecar.image="localhost:5001/vineyardd:latest"| kubectl apply -f -
      wait:
        - namespace: vineyard-job
          resource: deployment/job-with-default-sidecar
          for: condition=Available
    - name: install app with default sidecar via kubectl
      command: |
        kubectl create namespace vineyard-job1
        kubectl label namespace vineyard-job1 sidecar-injection=enabled
        docker tag localhost:5001/vineyardd:latest vineyardcloudnative/vineyardd:latest
        kind load docker-image vineyardcloudnative/vineyardd:latest
        sed -e 's/vineyard-job/vineyard-job1/g' k8s/test/e2e/sidecar-demo/sidecar-with-default-sidecar.yaml | \
          kubectl apply -f -
      wait:
        - namespace: vineyard-job1
          resource: deployment/job-with-default-sidecar
          for: condition=Available
    - name: install app with custom sidecar
      command: |
        kubectl label namespace vineyard-job sidecar-injection=enabled
        kubectl apply -f k8s/test/e2e/sidecar-demo/sidecar-with-custom-sidecar.yaml
      wait:
        - namespace: vineyard-job
          resource: deployment/job-with-custom-sidecar
          for: condition=Available
  timeout: 20m

cleanup:
  # always never success failure
  on: success

verify:
  # verify with retry strategy
  retry:
    # max retry count
    count: 10
    # the interval between two attempts, e.g. 10s, 1m.
    interval: 10s
  cases:
    - query: |
        kubectl get pod -l app=job-with-default-sidecar -n vineyard-job -oname | \
          awk -F '/' '{print $2}' | \
          head -n 1 | \
          xargs kubectl logs -c job -n vineyard-job | \
          yq e '{"sum": .}' - | \
          yq e 'to_entries' -
      expected: ../verify/values.yaml
    - query: |
        kubectl get pod -l app=job-with-default-sidecar -n vineyard-job1 -oname | \
          awk -F '/' '{print $2}' | \
          head -n 1 | \
          xargs kubectl logs -c job -n vineyard-job1 | \
          yq e '{"sum": .}' - | \
          yq e 'to_entries' -
      expected: ../verify/values.yaml
    - query: |
        kubectl get pod -l app=job-with-custom-sidecar -n vineyard-job -oname | \
          awk -F '/' '{print $2}' | \
          head -n 1 | \
          xargs kubectl logs -c job -n vineyard-job | \
          yq e '{"sum": .}' - | \
          yq e 'to_entries' -
      expected: ../verify/values.yaml

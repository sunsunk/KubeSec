apiVersion: cluster.paralus.dev/v2
kind: Namespace
metadata:
  annotations:
    paralus.dev/object-hash: avinash-test
    label-1: test
    paralus.dev/pruned: "null"
    paralus.dev/random: jcoVQsZEXH
    paralus.dev/resource-hash: 4fc5c12346ea0fb4ac19cca416fbaffb3c77a0ace763c2ad37510c0cca274af1
    rep-drift-action: deny
  creationTimestamp: "2021-09-15T05:00:18Z"
  finalizers:
  - cluster.paralus.dev.v2.predelete
  generation: 1
  labels:
    paralus.dev/global: "true"
    paralus.dev/modified-sa: "true"
    paralus.dev/psp: paralus-privileged-psp
    paralus.dev/system: "true"
    rep-drift-reconcillation: enabled
  managedFields:
  - apiVersion: cluster.paralus.dev/v2
    fieldsType: FieldsV1
    fieldsV1:
      f:spec:
        f:init: {}
        f:namespaceMeta: {}
      f:status:
        .: {}
        f:conditions: {}
        f:init: {}
        f:namespaceRef: {}
        f:observedGeneration: {}
        f:postCreate: {}
    manager: manager
    operation: Update
    time: "2021-09-15T05:00:18Z"
  - apiVersion: cluster.paralus.dev/v2
    fieldsType: FieldsV1
    fieldsV1:
      f:metadata:
        f:annotations:
          .: {}
          f:paralus.dev/object-hash: {}
          f:paralus.dev/pruned: {}
          f:paralus.dev/random: {}
          f:paralus.dev/resource-hash: {}
          f:rep-drift-action: {}
        f:finalizers:
          .: {}
          v:"cluster.paralus.dev.v2.predelete": {}
        f:labels:
          .: {}
          f:paralus.dev/global: {}
          f:paralus.dev/modified-sa: {}
          f:paralus.dev/psp: {}
          f:paralus.dev/system: {}
          f:rep-drift-reconcillation: {}
      f:spec:
        .: {}
        f:postCreate: {}
    manager: paralus-connector
    operation: Update
    time: "2021-09-15T05:00:18Z"
  name: paralus-system
  namespace: default
  resourceVersion: "1272"
  uid: e4550a5c-a2ef-4277-8283-0f4e3478970c
spec:
  init:
  - name: create-manager-cluster-role
    object:
      apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRole
      metadata:
        annotations:
          paralus.dev/original: '{"kind":"ClusterRole","rules":[{"verbs":["*"],"apiGroups":["*"],"resources":["*"]},{"verbs":["*"],"nonResourceURLs":["*"]},{"verbs":["create","delete","get","list","patch","update","watch"],"apiGroups":["cluster.paralus.dev"],"resources":["namespaces"]},{"verbs":["get","patch","update"],"apiGroups":["cluster.paralus.dev"],"resources":["namespaces/status"]},{"verbs":["create","delete","get","list","patch","update","watch"],"apiGroups":["cluster.paralus.dev"],"resources":["tasklets"]},{"verbs":["get","patch","update"],"apiGroups":["cluster.paralus.dev"],"resources":["tasklets/status"]},{"verbs":["create","delete","get","list","patch","update","watch"],"apiGroups":["cluster.paralus.dev"],"resources":["tasks"]},{"verbs":["get","patch","update"],"apiGroups":["cluster.paralus.dev"],"resources":["tasks/status"]}],"metadata":{"name":"paralus:manager","creationTimestamp":null,"labels":{"rep-drift-reconcillation":"enabled"},"annotations":{"rep-drift-action":"deny"}},"apiVersion":"rbac.authorization.k8s.io/v1"}'
          rep-drift-action: deny
        creationTimestamp: null
        labels:
          rep-drift-reconcillation: enabled
        name: paralus:manager
      rules:
      - apiGroups:
        - '*'
        resources:
        - '*'
        verbs:
        - '*'
      - nonResourceURLs:
        - '*'
        verbs:
        - '*'
      - apiGroups:
        - cluster.paralus.dev
        resources:
        - namespaces
        verbs:
        - create
        - delete
        - get
        - list
        - patch
        - update
        - watch
      - apiGroups:
        - cluster.paralus.dev
        resources:
        - namespaces/status
        verbs:
        - get
        - patch
        - update
      - apiGroups:
        - cluster.paralus.dev
        resources:
        - tasklets
        verbs:
        - create
        - delete
        - get
        - list
        - patch
        - update
        - watch
      - apiGroups:
        - cluster.paralus.dev
        resources:
        - tasklets/status
        verbs:
        - get
        - patch
        - update
      - apiGroups:
        - cluster.paralus.dev
        resources:
        - tasks
        verbs:
        - create
        - delete
        - get
        - list
        - patch
        - update
        - watch
      - apiGroups:
        - cluster.paralus.dev
        resources:
        - tasks/status
        verbs:
        - get
        - patch
        - update
  - name: create-proxy-cluster-role
    object:
      apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRole
      metadata:
        annotations:
          paralus.dev/original: '{"kind":"ClusterRole","rules":[{"verbs":["create"],"apiGroups":["authentication.k8s.io"],"resources":["tokenreviews"]},{"verbs":["create"],"apiGroups":["authorization.k8s.io"],"resources":["subjectaccessreviews"]}],"metadata":{"name":"paralus:proxy-role","labels":{"rep-drift-reconcillation":"enabled"},"annotations":{"rep-drift-action":"deny"}},"apiVersion":"rbac.authorization.k8s.io/v1"}'
          rep-drift-action: deny
        labels:
          rep-drift-reconcillation: enabled
        name: paralus:proxy-role
      rules:
      - apiGroups:
        - authentication.k8s.io
        resources:
        - tokenreviews
        verbs:
        - create
      - apiGroups:
        - authorization.k8s.io
        resources:
        - subjectaccessreviews
        verbs:
        - create
  namespaceMeta:
    annotations:
      rep-drift-action: deny
      role: paralus-system
    creationTimestamp: null
    labels:
      control-plane: controller-manager
      paralus.dev/global: "true"
      paralus.dev/modified-sa: "true"
      paralus.dev/psp: paralus-privileged-psp
      paralus.dev/system: "true"
      rep-drift-reconcillation: enabled
      role: paralus-system
    name: paralus-system
  postCreate:
  - name: create-system-sa-serviceaccount
    object:
      apiVersion: v1
      kind: ServiceAccount
      metadata:
        annotations:
          paralus.dev/original: '{"kind":"ServiceAccount","metadata":{"name":"system-sa","namespace":"paralus-system","labels":{"rep-drift-reconcillation":"enabled"},"annotations":{"rep-drift-action":"deny"}},"apiVersion":"v1"}'
          rep-drift-action: deny
        labels:
          rep-drift-reconcillation: enabled
        name: system-sa
        namespace: paralus-system
  - name: create-leader-election-role
    object:
      apiVersion: rbac.authorization.k8s.io/v1
      kind: Role
      metadata:
        annotations:
          paralus.dev/original: '{"kind":"Role","rules":[{"verbs":["get","list","watch","create","update","patch","delete"],"apiGroups":[""],"resources":["configmaps"]},{"verbs":["get","update","patch"],"apiGroups":[""],"resources":["configmaps/status"]},{"verbs":["create"],"apiGroups":[""],"resources":["events"]}],"metadata":{"name":"paralus:leader-election-role","namespace":"paralus-system","labels":{"rep-drift-reconcillation":"enabled"},"annotations":{"rep-drift-action":"deny"}},"apiVersion":"rbac.authorization.k8s.io/v1"}'
          rep-drift-action: deny
        labels:
          rep-drift-reconcillation: enabled
        name: paralus:leader-election-role
        namespace: paralus-system
      rules:
      - apiGroups:
        - ""
        resources:
        - configmaps
        verbs:
        - get
        - list
        - watch
        - create
        - update
        - patch
        - delete
      - apiGroups:
        - ""
        resources:
        - configmaps/status
        verbs:
        - get
        - update
        - patch
      - apiGroups:
        - ""
        resources:
        - events
        verbs:
        - create
  - name: create-leaderelection-role-binding
    object:
      apiVersion: rbac.authorization.k8s.io/v1
      kind: RoleBinding
      metadata:
        annotations:
          paralus.dev/original: '{"kind":"RoleBinding","roleRef":{"kind":"Role","name":"paralus:leader-election-role","apiGroup":"rbac.authorization.k8s.io"},"metadata":{"name":"paralus:leader-election-rolebinding","namespace":"paralus-system","labels":{"rep-drift-reconcillation":"enabled"},"annotations":{"rep-drift-action":"deny"}},"subjects":[{"kind":"ServiceAccount","name":"system-sa","namespace":"paralus-system"},{"kind":"ServiceAccount","name":"default","namespace":"paralus-system"}],"apiVersion":"rbac.authorization.k8s.io/v1"}'
          rep-drift-action: deny
        labels:
          rep-drift-reconcillation: enabled
        name: paralus:leader-election-rolebinding
        namespace: paralus-system
      roleRef:
        apiGroup: rbac.authorization.k8s.io
        kind: Role
        name: paralus:leader-election-role
      subjects:
      - kind: ServiceAccount
        name: system-sa
        namespace: paralus-system
      - kind: ServiceAccount
        name: default
        namespace: paralus-system
  - name: create-manager-role-binding
    object:
      apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRoleBinding
      metadata:
        annotations:
          paralus.dev/original: '{"kind":"ClusterRoleBinding","roleRef":{"kind":"ClusterRole","name":"paralus:manager","apiGroup":"rbac.authorization.k8s.io"},"metadata":{"name":"paralus:paralus-system:manager-rolebinding","labels":{"rep-drift-reconcillation":"enabled"},"annotations":{"rep-drift-action":"deny"}},"subjects":[{"kind":"ServiceAccount","name":"system-sa","namespace":"paralus-system"},{"kind":"ServiceAccount","name":"default","namespace":"paralus-system"}],"apiVersion":"rbac.authorization.k8s.io/v1"}'
          rep-drift-action: deny
        labels:
          rep-drift-reconcillation: enabled
        name: paralus:paralus-system:manager-rolebinding
      roleRef:
        apiGroup: rbac.authorization.k8s.io
        kind: ClusterRole
        name: paralus:manager
      subjects:
      - kind: ServiceAccount
        name: system-sa
        namespace: paralus-system
      - kind: ServiceAccount
        name: default
        namespace: paralus-system
  - name: create-proxy-role-binding
    object:
      apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRoleBinding
      metadata:
        annotations:
          paralus.dev/original: '{"kind":"ClusterRoleBinding","roleRef":{"kind":"ClusterRole","name":"paralus:proxy-role","apiGroup":"rbac.authorization.k8s.io"},"metadata":{"name":"paralus:paralus-system:proxy-rolebinding","labels":{"rep-drift-reconcillation":"enabled"},"annotations":{"rep-drift-action":"deny"}},"subjects":[{"kind":"ServiceAccount","name":"system-sa","namespace":"paralus-system"},{"kind":"ServiceAccount","name":"default","namespace":"paralus-system"}],"apiVersion":"rbac.authorization.k8s.io/v1"}'
          rep-drift-action: deny
        labels:
          rep-drift-reconcillation: enabled
        name: paralus:paralus-system:proxy-rolebinding
      roleRef:
        apiGroup: rbac.authorization.k8s.io
        kind: ClusterRole
        name: paralus:proxy-role
      subjects:
      - kind: ServiceAccount
        name: system-sa
        namespace: paralus-system
      - kind: ServiceAccount
        name: default
        namespace: paralus-system
  - name: create-access-log-configmap_v2_1
    object:
      apiVersion: v1
      data:
        fluent.conf: |
          <match kube.paralus-system.ingress-nginx-controller**>
            @type forward
            require_ack_response true
            ack_response_timeout 190
            <buffer>
              @type memory
              flush_mode interval
              retry_type exponential_backoff
              flush_thread_count 2
              flush_interval 60s
              retry_forever false
              retry_max_interval 1h
              retry_timeout 32h
              retry_max_times 17
              retry_randomize true
              chunk_limit_size 5M
              queue_limit_length 8
              overflow_action block
            </buffer>
            <server>
              host log-aggregator.paralus-infra.svc.cluster.local
              port 24224
            </server>
          </match>
      kind: ConfigMap
      metadata:
        annotations:
          paralus.dev/original: '{"data":{"fluent.conf":"<match kube.paralus-system.ingress-nginx-controller**>\n  @type
            forward\n  require_ack_response true\n  ack_response_timeout 190\n  <buffer>\n    @type
            memory\n    flush_mode interval\n    retry_type exponential_backoff\n    flush_thread_count
            2\n    flush_interval 60s\n    retry_forever false\n    retry_max_interval
            1h\n    retry_timeout 32h\n    retry_max_times 17\n    retry_randomize
            true\n    chunk_limit_size 5M\n    queue_limit_length 8\n    overflow_action
            block\n  </buffer>\n  <server>\n    host log-aggregator.paralus-infra.svc.cluster.local\n    port
            24224\n  </server>\n</match>\n"},"kind":"ConfigMap","metadata":{"name":"paralus-ingress-log-config","labels":{"logger":"paralus-logger","rep-drift-reconcillation":"enabled"},"namespace":"paralus-system","annotations":{"rep-drift-action":"deny"}},"apiVersion":"v1"}'
          rep-drift-action: deny
        labels:
          logger: paralus-logger
          rep-drift-reconcillation: enabled
        name: paralus-ingress-log-config
        namespace: paralus-system
status:
  conditions:
  - lastUpdateTime: "2021-09-15T05:00:18Z"
    reason: all steps complete
    status: Complete
    type: NamespaceInit
  - lastUpdateTime: "2021-09-15T05:00:18Z"
    reason: namespace created
    status: Complete
    type: NamespaceCreate
  - lastUpdateTime: "2021-09-15T05:00:18Z"
    reason: all steps complete
    status: Complete
    type: NamespacePostCreate
  - lastUpdateTime: "2021-09-15T05:00:18Z"
    reason: all steps complete
    status: Complete
    type: NamespaceReady
  init:
  - jobReason: not configured
    jobState: StepJobComplete
    name: create-manager-cluster-role
    objectReason: object type *v1.ClusterRole not handled
    objectRef:
      apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRole
      name: paralus:manager
      resourceVersion: "1258"
      uid: 855e1d07-8a75-47be-9e98-d03810f634a6
    objectSpecHash: e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
    objectState: StepObjectComplete
    reason: complete
    state: StepComplete
  - jobReason: not configured
    jobState: StepJobComplete
    name: create-proxy-cluster-role
    objectReason: object type *v1.ClusterRole not handled
    objectRef:
      apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRole
      name: paralus:proxy-role
      resourceVersion: "1259"
      uid: abf1cc60-8f9a-4fad-be5d-5551fc6c236a
    objectSpecHash: e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
    objectState: StepObjectComplete
    reason: complete
    state: StepComplete
  namespaceRef:
    apiVersion: v1
    kind: Namespace
    name: paralus-system
    resourceVersion: "1262"
    uid: 574a3611-2ab8-436f-999a-f463360e5d3d
  observedGeneration: 1
  postCreate:
  - jobReason: not configured
    jobState: StepJobComplete
    name: create-system-sa-serviceaccount
    objectReason: object type *v1.ServiceAccount not handled
    objectRef:
      apiVersion: v1
      kind: ServiceAccount
      name: system-sa
      namespace: paralus-system
      resourceVersion: "1265"
      uid: f1981c17-775d-4138-8633-776ad49fb586
    objectSpecHash: e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
    objectState: StepObjectComplete
    reason: complete
    state: StepComplete
  - jobReason: not configured
    jobState: StepJobComplete
    name: create-leader-election-role
    objectReason: object type *v1.Role not handled
    objectRef:
      apiVersion: rbac.authorization.k8s.io/v1
      kind: Role
      name: paralus:leader-election-role
      namespace: paralus-system
      resourceVersion: "1266"
      uid: 3afaf464-0b94-4116-9bcc-93a4978174c6
    objectSpecHash: e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
    objectState: StepObjectComplete
    reason: complete
    state: StepComplete
  - jobReason: not configured
    jobState: StepJobComplete
    name: create-leaderelection-role-binding
    objectReason: object type *v1.RoleBinding not handled
    objectRef:
      apiVersion: rbac.authorization.k8s.io/v1
      kind: RoleBinding
      name: paralus:leader-election-rolebinding
      namespace: paralus-system
      resourceVersion: "1267"
      uid: 12551dfd-7143-4e83-a0a6-0c4ab1e1d4fe
    objectSpecHash: e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
    objectState: StepObjectComplete
    reason: complete
    state: StepComplete
  - jobReason: not configured
    jobState: StepJobComplete
    name: create-manager-role-binding
    objectReason: object type *v1.ClusterRoleBinding not handled
    objectRef:
      apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRoleBinding
      name: paralus:paralus-system:manager-rolebinding
      resourceVersion: "1268"
      uid: 2fe8a87a-d571-4997-b22e-a6da5bdcbe49
    objectSpecHash: e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
    objectState: StepObjectComplete
    reason: complete
    state: StepComplete
  - jobReason: not configured
    jobState: StepJobComplete
    name: create-proxy-role-binding
    objectReason: object type *v1.ClusterRoleBinding not handled
    objectRef:
      apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRoleBinding
      name: paralus:paralus-system:proxy-rolebinding
      resourceVersion: "1269"
      uid: 7f3c4c02-cd90-40c0-8663-5f156c50e6c3
    objectSpecHash: e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
    objectState: StepObjectComplete
    reason: complete
    state: StepComplete
  - jobReason: not configured
    jobState: StepJobComplete
    name: create-access-log-configmap_v2_1
    objectReason: object type *v1.ConfigMap not handled
    objectRef:
      apiVersion: v1
      kind: ConfigMap
      name: paralus-ingress-log-config
      namespace: paralus-system
      resourceVersion: "1270"
      uid: e86e3ea0-a3b2-4187-b552-c18e5f6ca30f
    objectSpecHash: d26d566c010b3b8a7dde8ef1a406a961c8839d60951b08cbd8d34c1c885c6cd2
    objectState: StepObjectComplete
    reason: complete
    state: StepComplete

apiVersion: cluster.paralus.dev/v2
kind: Task
metadata:
  annotations:
    paralus.dev/object-hash: 25dc4a1045d581e9cb506c8e8c840c3ea0e68ee1007d2a0e60b2fa109e7088c4
    paralus.dev/resource-hash: 508efe2a19717df6493adfa2dc65b9aef2e3db72316a954689da2c45346ddda6
  finalizers:
  - cluster.paralus.dev.v2.predelete
  labels:
    paralus.dev/component: v1-prometheus
    paralus.dev/global: "true"
    paralus.dev/system: "true"
  name: v1-prometheus
  namespace: default
spec:
  init:
  - name: prometheus-k8s-prometheus-crd
    object:
      apiVersion: apiextensions.k8s.io/v1beta1
      kind: CustomResourceDefinition
      metadata:
        name: prometheuses.monitoring.coreos.com
      spec:
        group: monitoring.coreos.com
        names:
          kind: Prometheus
          plural: prometheuses
        scope: Namespaced
        validation:
          openAPIV3Schema:
            properties:
              apiVersion:
                description: 'APIVersion defines the versioned schema of this representation
                  of an object. Servers should convert recognized schemas to the latest
                  internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
                type: string
              kind:
                description: 'Kind is a string value representing the REST resource
                  this object represents. Servers may infer this from the endpoint
                  the client submits requests to. Cannot be updated. In CamelCase.
                  More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
                type: string
              spec:
                description: 'PrometheusSpec is a specification of the desired behavior
                  of the Prometheus cluster. More info: https://github.com/kubernetes/community/blob/master/contributors/devel/api-conventions.md#spec-and-status'
                properties:
                  additionalAlertManagerConfigs:
                    description: SecretKeySelector selects a key of a Secret.
                    properties:
                      key:
                        description: The key of the secret to select from.  Must be
                          a valid secret key.
                        type: string
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                        type: string
                      optional:
                        description: Specify whether the Secret or it's key must be
                          defined
                        type: boolean
                    required:
                    - key
                  additionalAlertRelabelConfigs:
                    description: SecretKeySelector selects a key of a Secret.
                    properties:
                      key:
                        description: The key of the secret to select from.  Must be
                          a valid secret key.
                        type: string
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                        type: string
                      optional:
                        description: Specify whether the Secret or it's key must be
                          defined
                        type: boolean
                    required:
                    - key
                  additionalScrapeConfigs:
                    description: SecretKeySelector selects a key of a Secret.
                    properties:
                      key:
                        description: The key of the secret to select from.  Must be
                          a valid secret key.
                        type: string
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                        type: string
                      optional:
                        description: Specify whether the Secret or it's key must be
                          defined
                        type: boolean
                    required:
                    - key
                  affinity:
                    description: Affinity is a group of affinity scheduling rules.
                    properties:
                      nodeAffinity:
                        description: Node affinity is a group of node affinity scheduling
                          rules.
                        properties:
                          preferredDuringSchedulingIgnoredDuringExecution:
                            description: The scheduler will prefer to schedule pods
                              to nodes that satisfy the affinity expressions specified
                              by this field, but it may choose a node that violates
                              one or more of the expressions. The node that is most
                              preferred is the one with the greatest sum of weights,
                              i.e. for each node that meets all of the scheduling
                              requirements (resource request, requiredDuringScheduling
                              affinity expressions, etc.), compute a sum by iterating
                              through the elements of this field and adding "weight"
                              to the sum if the node matches the corresponding matchExpressions;
                              the node(s) with the highest sum are the most preferred.
                            items:
                              description: An empty preferred scheduling term matches
                                all objects with implicit weight 0 (i.e. it's a no-op).
                                A null preferred scheduling term matches no objects
                                (i.e. is also a no-op).
                              properties:
                                preference:
                                  description: A null or empty node selector term
                                    matches no objects. The requirements of them are
                                    ANDed. The TopologySelectorTerm type implements
                                    a subset of the NodeSelectorTerm.
                                  properties:
                                    matchExpressions:
                                      description: A list of node selector requirements
                                        by node's labels.
                                      items:
                                        description: A node selector requirement is
                                          a selector that contains values, a key,
                                          and an operator that relates the key and
                                          values.
                                        properties:
                                          key:
                                            description: The label key that the selector
                                              applies to.
                                            type: string
                                          operator:
                                            description: Represents a key's relationship
                                              to a set of values. Valid operators
                                              are In, NotIn, Exists, DoesNotExist.
                                              Gt, and Lt.
                                            type: string
                                          values:
                                            description: An array of string values.
                                              If the operator is In or NotIn, the
                                              values array must be non-empty. If the
                                              operator is Exists or DoesNotExist,
                                              the values array must be empty. If the
                                              operator is Gt or Lt, the values array
                                              must have a single element, which will
                                              be interpreted as an integer. This array
                                              is replaced during a strategic merge
                                              patch.
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                      type: array
                                    matchFields:
                                      description: A list of node selector requirements
                                        by node's fields.
                                      items:
                                        description: A node selector requirement is
                                          a selector that contains values, a key,
                                          and an operator that relates the key and
                                          values.
                                        properties:
                                          key:
                                            description: The label key that the selector
                                              applies to.
                                            type: string
                                          operator:
                                            description: Represents a key's relationship
                                              to a set of values. Valid operators
                                              are In, NotIn, Exists, DoesNotExist.
                                              Gt, and Lt.
                                            type: string
                                          values:
                                            description: An array of string values.
                                              If the operator is In or NotIn, the
                                              values array must be non-empty. If the
                                              operator is Exists or DoesNotExist,
                                              the values array must be empty. If the
                                              operator is Gt or Lt, the values array
                                              must have a single element, which will
                                              be interpreted as an integer. This array
                                              is replaced during a strategic merge
                                              patch.
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                      type: array
                                weight:
                                  description: Weight associated with matching the
                                    corresponding nodeSelectorTerm, in the range 1-100.
                                  format: int32
                                  type: integer
                              required:
                              - weight
                              - preference
                            type: array
                          requiredDuringSchedulingIgnoredDuringExecution:
                            description: A node selector represents the union of the
                              results of one or more label queries over a set of nodes;
                              that is, it represents the OR of the selectors represented
                              by the node selector terms.
                            properties:
                              nodeSelectorTerms:
                                description: Required. A list of node selector terms.
                                  The terms are ORed.
                                items:
                                  description: A null or empty node selector term
                                    matches no objects. The requirements of them are
                                    ANDed. The TopologySelectorTerm type implements
                                    a subset of the NodeSelectorTerm.
                                  properties:
                                    matchExpressions:
                                      description: A list of node selector requirements
                                        by node's labels.
                                      items:
                                        description: A node selector requirement is
                                          a selector that contains values, a key,
                                          and an operator that relates the key and
                                          values.
                                        properties:
                                          key:
                                            description: The label key that the selector
                                              applies to.
                                            type: string
                                          operator:
                                            description: Represents a key's relationship
                                              to a set of values. Valid operators
                                              are In, NotIn, Exists, DoesNotExist.
                                              Gt, and Lt.
                                            type: string
                                          values:
                                            description: An array of string values.
                                              If the operator is In or NotIn, the
                                              values array must be non-empty. If the
                                              operator is Exists or DoesNotExist,
                                              the values array must be empty. If the
                                              operator is Gt or Lt, the values array
                                              must have a single element, which will
                                              be interpreted as an integer. This array
                                              is replaced during a strategic merge
                                              patch.
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                      type: array
                                    matchFields:
                                      description: A list of node selector requirements
                                        by node's fields.
                                      items:
                                        description: A node selector requirement is
                                          a selector that contains values, a key,
                                          and an operator that relates the key and
                                          values.
                                        properties:
                                          key:
                                            description: The label key that the selector
                                              applies to.
                                            type: string
                                          operator:
                                            description: Represents a key's relationship
                                              to a set of values. Valid operators
                                              are In, NotIn, Exists, DoesNotExist.
                                              Gt, and Lt.
                                            type: string
                                          values:
                                            description: An array of string values.
                                              If the operator is In or NotIn, the
                                              values array must be non-empty. If the
                                              operator is Exists or DoesNotExist,
                                              the values array must be empty. If the
                                              operator is Gt or Lt, the values array
                                              must have a single element, which will
                                              be interpreted as an integer. This array
                                              is replaced during a strategic merge
                                              patch.
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                      type: array
                                type: array
                            required:
                            - nodeSelectorTerms
                      podAffinity:
                        description: Pod affinity is a group of inter pod affinity
                          scheduling rules.
                        properties:
                          preferredDuringSchedulingIgnoredDuringExecution:
                            description: The scheduler will prefer to schedule pods
                              to nodes that satisfy the affinity expressions specified
                              by this field, but it may choose a node that violates
                              one or more of the expressions. The node that is most
                              preferred is the one with the greatest sum of weights,
                              i.e. for each node that meets all of the scheduling
                              requirements (resource request, requiredDuringScheduling
                              affinity expressions, etc.), compute a sum by iterating
                              through the elements of this field and adding "weight"
                              to the sum if the node has pods which matches the corresponding
                              podAffinityTerm; the node(s) with the highest sum are
                              the most preferred.
                            items:
                              description: The weights of all of the matched WeightedPodAffinityTerm
                                fields are added per-node to find the most preferred
                                node(s)
                              properties:
                                podAffinityTerm:
                                  description: Defines a set of pods (namely those
                                    matching the labelSelector relative to the given
                                    namespace(s)) that this pod should be co-located
                                    (affinity) or not co-located (anti-affinity) with,
                                    where co-located is defined as running on a node
                                    whose value of the label with key <topologyKey>
                                    matches that of any node on which a pod of the
                                    set of pods is running
                                  properties:
                                    labelSelector:
                                      description: A label selector is a label query
                                        over a set of resources. The result of matchLabels
                                        and matchExpressions are ANDed. An empty label
                                        selector matches all objects. A null label
                                        selector matches no objects.
                                      properties:
                                        matchExpressions:
                                          description: matchExpressions is a list
                                            of label selector requirements. The requirements
                                            are ANDed.
                                          items:
                                            description: A label selector requirement
                                              is a selector that contains values,
                                              a key, and an operator that relates
                                              the key and values.
                                            properties:
                                              key:
                                                description: key is the label key
                                                  that the selector applies to.
                                                type: string
                                              operator:
                                                description: operator represents a
                                                  key's relationship to a set of values.
                                                  Valid operators are In, NotIn, Exists
                                                  and DoesNotExist.
                                                type: string
                                              values:
                                                description: values is an array of
                                                  string values. If the operator is
                                                  In or NotIn, the values array must
                                                  be non-empty. If the operator is
                                                  Exists or DoesNotExist, the values
                                                  array must be empty. This array
                                                  is replaced during a strategic merge
                                                  patch.
                                                items:
                                                  type: string
                                                type: array
                                            required:
                                            - key
                                            - operator
                                          type: array
                                        matchLabels:
                                          description: matchLabels is a map of {key,value}
                                            pairs. A single {key,value} in the matchLabels
                                            map is equivalent to an element of matchExpressions,
                                            whose key field is "key", the operator
                                            is "In", and the values array contains
                                            only "value". The requirements are ANDed.
                                          type: object
                                    namespaces:
                                      description: namespaces specifies which namespaces
                                        the labelSelector applies to (matches against);
                                        null or empty list means "this pod's namespace"
                                      items:
                                        type: string
                                      type: array
                                    topologyKey:
                                      description: This pod should be co-located (affinity)
                                        or not co-located (anti-affinity) with the
                                        pods matching the labelSelector in the specified
                                        namespaces, where co-located is defined as
                                        running on a node whose value of the label
                                        with key topologyKey matches that of any node
                                        on which any of the selected pods is running.
                                        Empty topologyKey is not allowed.
                                      type: string
                                  required:
                                  - topologyKey
                                weight:
                                  description: weight associated with matching the
                                    corresponding podAffinityTerm, in the range 1-100.
                                  format: int32
                                  type: integer
                              required:
                              - weight
                              - podAffinityTerm
                            type: array
                          requiredDuringSchedulingIgnoredDuringExecution:
                            description: If the affinity requirements specified by
                              this field are not met at scheduling time, the pod will
                              not be scheduled onto the node. If the affinity requirements
                              specified by this field cease to be met at some point
                              during pod execution (e.g. due to a pod label update),
                              the system may or may not try to eventually evict the
                              pod from its node. When there are multiple elements,
                              the lists of nodes corresponding to each podAffinityTerm
                              are intersected, i.e. all terms must be satisfied.
                            items:
                              description: Defines a set of pods (namely those matching
                                the labelSelector relative to the given namespace(s))
                                that this pod should be co-located (affinity) or not
                                co-located (anti-affinity) with, where co-located
                                is defined as running on a node whose value of the
                                label with key <topologyKey> matches that of any node
                                on which a pod of the set of pods is running
                              properties:
                                labelSelector:
                                  description: A label selector is a label query over
                                    a set of resources. The result of matchLabels
                                    and matchExpressions are ANDed. An empty label
                                    selector matches all objects. A null label selector
                                    matches no objects.
                                  properties:
                                    matchExpressions:
                                      description: matchExpressions is a list of label
                                        selector requirements. The requirements are
                                        ANDed.
                                      items:
                                        description: A label selector requirement
                                          is a selector that contains values, a key,
                                          and an operator that relates the key and
                                          values.
                                        properties:
                                          key:
                                            description: key is the label key that
                                              the selector applies to.
                                            type: string
                                          operator:
                                            description: operator represents a key's
                                              relationship to a set of values. Valid
                                              operators are In, NotIn, Exists and
                                              DoesNotExist.
                                            type: string
                                          values:
                                            description: values is an array of string
                                              values. If the operator is In or NotIn,
                                              the values array must be non-empty.
                                              If the operator is Exists or DoesNotExist,
                                              the values array must be empty. This
                                              array is replaced during a strategic
                                              merge patch.
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                      type: array
                                    matchLabels:
                                      description: matchLabels is a map of {key,value}
                                        pairs. A single {key,value} in the matchLabels
                                        map is equivalent to an element of matchExpressions,
                                        whose key field is "key", the operator is
                                        "In", and the values array contains only "value".
                                        The requirements are ANDed.
                                      type: object
                                namespaces:
                                  description: namespaces specifies which namespaces
                                    the labelSelector applies to (matches against);
                                    null or empty list means "this pod's namespace"
                                  items:
                                    type: string
                                  type: array
                                topologyKey:
                                  description: This pod should be co-located (affinity)
                                    or not co-located (anti-affinity) with the pods
                                    matching the labelSelector in the specified namespaces,
                                    where co-located is defined as running on a node
                                    whose value of the label with key topologyKey
                                    matches that of any node on which any of the selected
                                    pods is running. Empty topologyKey is not allowed.
                                  type: string
                              required:
                              - topologyKey
                            type: array
                      podAntiAffinity:
                        description: Pod anti affinity is a group of inter pod anti
                          affinity scheduling rules.
                        properties:
                          preferredDuringSchedulingIgnoredDuringExecution:
                            description: The scheduler will prefer to schedule pods
                              to nodes that satisfy the anti-affinity expressions
                              specified by this field, but it may choose a node that
                              violates one or more of the expressions. The node that
                              is most preferred is the one with the greatest sum of
                              weights, i.e. for each node that meets all of the scheduling
                              requirements (resource request, requiredDuringScheduling
                              anti-affinity expressions, etc.), compute a sum by iterating
                              through the elements of this field and adding "weight"
                              to the sum if the node has pods which matches the corresponding
                              podAffinityTerm; the node(s) with the highest sum are
                              the most preferred.
                            items:
                              description: The weights of all of the matched WeightedPodAffinityTerm
                                fields are added per-node to find the most preferred
                                node(s)
                              properties:
                                podAffinityTerm:
                                  description: Defines a set of pods (namely those
                                    matching the labelSelector relative to the given
                                    namespace(s)) that this pod should be co-located
                                    (affinity) or not co-located (anti-affinity) with,
                                    where co-located is defined as running on a node
                                    whose value of the label with key <topologyKey>
                                    matches that of any node on which a pod of the
                                    set of pods is running
                                  properties:
                                    labelSelector:
                                      description: A label selector is a label query
                                        over a set of resources. The result of matchLabels
                                        and matchExpressions are ANDed. An empty label
                                        selector matches all objects. A null label
                                        selector matches no objects.
                                      properties:
                                        matchExpressions:
                                          description: matchExpressions is a list
                                            of label selector requirements. The requirements
                                            are ANDed.
                                          items:
                                            description: A label selector requirement
                                              is a selector that contains values,
                                              a key, and an operator that relates
                                              the key and values.
                                            properties:
                                              key:
                                                description: key is the label key
                                                  that the selector applies to.
                                                type: string
                                              operator:
                                                description: operator represents a
                                                  key's relationship to a set of values.
                                                  Valid operators are In, NotIn, Exists
                                                  and DoesNotExist.
                                                type: string
                                              values:
                                                description: values is an array of
                                                  string values. If the operator is
                                                  In or NotIn, the values array must
                                                  be non-empty. If the operator is
                                                  Exists or DoesNotExist, the values
                                                  array must be empty. This array
                                                  is replaced during a strategic merge
                                                  patch.
                                                items:
                                                  type: string
                                                type: array
                                            required:
                                            - key
                                            - operator
                                          type: array
                                        matchLabels:
                                          description: matchLabels is a map of {key,value}
                                            pairs. A single {key,value} in the matchLabels
                                            map is equivalent to an element of matchExpressions,
                                            whose key field is "key", the operator
                                            is "In", and the values array contains
                                            only "value". The requirements are ANDed.
                                          type: object
                                    namespaces:
                                      description: namespaces specifies which namespaces
                                        the labelSelector applies to (matches against);
                                        null or empty list means "this pod's namespace"
                                      items:
                                        type: string
                                      type: array
                                    topologyKey:
                                      description: This pod should be co-located (affinity)
                                        or not co-located (anti-affinity) with the
                                        pods matching the labelSelector in the specified
                                        namespaces, where co-located is defined as
                                        running on a node whose value of the label
                                        with key topologyKey matches that of any node
                                        on which any of the selected pods is running.
                                        Empty topologyKey is not allowed.
                                      type: string
                                  required:
                                  - topologyKey
                                weight:
                                  description: weight associated with matching the
                                    corresponding podAffinityTerm, in the range 1-100.
                                  format: int32
                                  type: integer
                              required:
                              - weight
                              - podAffinityTerm
                            type: array
                          requiredDuringSchedulingIgnoredDuringExecution:
                            description: If the anti-affinity requirements specified
                              by this field are not met at scheduling time, the pod
                              will not be scheduled onto the node. If the anti-affinity
                              requirements specified by this field cease to be met
                              at some point during pod execution (e.g. due to a pod
                              label update), the system may or may not try to eventually
                              evict the pod from its node. When there are multiple
                              elements, the lists of nodes corresponding to each podAffinityTerm
                              are intersected, i.e. all terms must be satisfied.
                            items:
                              description: Defines a set of pods (namely those matching
                                the labelSelector relative to the given namespace(s))
                                that this pod should be co-located (affinity) or not
                                co-located (anti-affinity) with, where co-located
                                is defined as running on a node whose value of the
                                label with key <topologyKey> matches that of any node
                                on which a pod of the set of pods is running
                              properties:
                                labelSelector:
                                  description: A label selector is a label query over
                                    a set of resources. The result of matchLabels
                                    and matchExpressions are ANDed. An empty label
                                    selector matches all objects. A null label selector
                                    matches no objects.
                                  properties:
                                    matchExpressions:
                                      description: matchExpressions is a list of label
                                        selector requirements. The requirements are
                                        ANDed.
                                      items:
                                        description: A label selector requirement
                                          is a selector that contains values, a key,
                                          and an operator that relates the key and
                                          values.
                                        properties:
                                          key:
                                            description: key is the label key that
                                              the selector applies to.
                                            type: string
                                          operator:
                                            description: operator represents a key's
                                              relationship to a set of values. Valid
                                              operators are In, NotIn, Exists and
                                              DoesNotExist.
                                            type: string
                                          values:
                                            description: values is an array of string
                                              values. If the operator is In or NotIn,
                                              the values array must be non-empty.
                                              If the operator is Exists or DoesNotExist,
                                              the values array must be empty. This
                                              array is replaced during a strategic
                                              merge patch.
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                      type: array
                                    matchLabels:
                                      description: matchLabels is a map of {key,value}
                                        pairs. A single {key,value} in the matchLabels
                                        map is equivalent to an element of matchExpressions,
                                        whose key field is "key", the operator is
                                        "In", and the values array contains only "value".
                                        The requirements are ANDed.
                                      type: object
                                namespaces:
                                  description: namespaces specifies which namespaces
                                    the labelSelector applies to (matches against);
                                    null or empty list means "this pod's namespace"
                                  items:
                                    type: string
                                  type: array
                                topologyKey:
                                  description: This pod should be co-located (affinity)
                                    or not co-located (anti-affinity) with the pods
                                    matching the labelSelector in the specified namespaces,
                                    where co-located is defined as running on a node
                                    whose value of the label with key topologyKey
                                    matches that of any node on which any of the selected
                                    pods is running. Empty topologyKey is not allowed.
                                  type: string
                              required:
                              - topologyKey
                            type: array
                  alerting:
                    description: AlertingSpec defines parameters for alerting configuration
                      of Prometheus servers.
                    properties:
                      alertmanagers:
                        description: AlertmanagerEndpoints Prometheus should fire
                          alerts against.
                        items:
                          description: AlertmanagerEndpoints defines a selection of
                            a single Endpoints object containing alertmanager IPs
                            to fire alerts against.
                          properties:
                            bearerTokenFile:
                              description: BearerTokenFile to read from filesystem
                                to use when authenticating to Alertmanager.
                              type: string
                            name:
                              description: Name of Endpoints object in Namespace.
                              type: string
                            namespace:
                              description: Namespace of Endpoints object.
                              type: string
                            pathPrefix:
                              description: Prefix for the HTTP path alerts are pushed
                                to.
                              type: string
                            port:
                              anyOf:
                              - type: string
                              - type: integer
                            scheme:
                              description: Scheme to use when firing alerts.
                              type: string
                            tlsConfig:
                              description: TLSConfig specifies TLS configuration parameters.
                              properties:
                                caFile:
                                  description: The CA cert to use for the targets.
                                  type: string
                                certFile:
                                  description: The client cert file for the targets.
                                  type: string
                                insecureSkipVerify:
                                  description: Disable target certificate validation.
                                  type: boolean
                                keyFile:
                                  description: The client key file for the targets.
                                  type: string
                                serverName:
                                  description: Used to verify the hostname for the
                                    targets.
                                  type: string
                          required:
                          - namespace
                          - name
                          - port
                        type: array
                    required:
                    - alertmanagers
                  apiserverConfig:
                    description: 'APIServerConfig defines a host and auth methods
                      to access apiserver. More info: https://prometheus.io/docs/prometheus/latest/configuration/configuration/#kubernetes_sd_config'
                    properties:
                      basicAuth:
                        description: 'BasicAuth allow an endpoint to authenticate
                          over basic authentication More info: https://prometheus.io/docs/operating/configuration/#endpoints'
                        properties:
                          password:
                            description: SecretKeySelector selects a key of a Secret.
                            properties:
                              key:
                                description: The key of the secret to select from.  Must
                                  be a valid secret key.
                                type: string
                              name:
                                description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                type: string
                              optional:
                                description: Specify whether the Secret or it's key
                                  must be defined
                                type: boolean
                            required:
                            - key
                          username:
                            description: SecretKeySelector selects a key of a Secret.
                            properties:
                              key:
                                description: The key of the secret to select from.  Must
                                  be a valid secret key.
                                type: string
                              name:
                                description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                type: string
                              optional:
                                description: Specify whether the Secret or it's key
                                  must be defined
                                type: boolean
                            required:
                            - key
                      bearerToken:
                        description: Bearer token for accessing apiserver.
                        type: string
                      bearerTokenFile:
                        description: File to read bearer token for accessing apiserver.
                        type: string
                      host:
                        description: Host of apiserver. A valid string consisting
                          of a hostname or IP followed by an optional port number
                        type: string
                      tlsConfig:
                        description: TLSConfig specifies TLS configuration parameters.
                        properties:
                          caFile:
                            description: The CA cert to use for the targets.
                            type: string
                          certFile:
                            description: The client cert file for the targets.
                            type: string
                          insecureSkipVerify:
                            description: Disable target certificate validation.
                            type: boolean
                          keyFile:
                            description: The client key file for the targets.
                            type: string
                          serverName:
                            description: Used to verify the hostname for the targets.
                            type: string
                    required:
                    - host
                  baseImage:
                    description: Base image to use for a Prometheus deployment.
                    type: string
                  configMaps:
                    description: ConfigMaps is a list of ConfigMaps in the same namespace
                      as the Prometheus object, which shall be mounted into the Prometheus
                      Pods. The ConfigMaps are mounted into /etc/prometheus/configmaps/<configmap-name>.
                    items:
                      type: string
                    type: array
                  containers:
                    description: Containers allows injecting additional containers.
                      This is meant to allow adding an authentication proxy to a Prometheus
                      pod.
                    items:
                      description: A single application container that you want to
                        run within a pod.
                      properties:
                        args:
                          description: 'Arguments to the entrypoint. The docker image''s
                            CMD is used if this is not provided. Variable references
                            $(VAR_NAME) are expanded using the container''s environment.
                            If a variable cannot be resolved, the reference in the
                            input string will be unchanged. The $(VAR_NAME) syntax
                            can be escaped with a double $$, ie: $$(VAR_NAME). Escaped
                            references will never be expanded, regardless of whether
                            the variable exists or not. Cannot be updated. More info:
                            https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell'
                          items:
                            type: string
                          type: array
                        command:
                          description: 'Entrypoint array. Not executed within a shell.
                            The docker image''s ENTRYPOINT is used if this is not
                            provided. Variable references $(VAR_NAME) are expanded
                            using the container''s environment. If a variable cannot
                            be resolved, the reference in the input string will be
                            unchanged. The $(VAR_NAME) syntax can be escaped with
                            a double $$, ie: $$(VAR_NAME). Escaped references will
                            never be expanded, regardless of whether the variable
                            exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell'
                          items:
                            type: string
                          type: array
                        env:
                          description: List of environment variables to set in the
                            container. Cannot be updated.
                          items:
                            description: EnvVar represents an environment variable
                              present in a Container.
                            properties:
                              name:
                                description: Name of the environment variable. Must
                                  be a C_IDENTIFIER.
                                type: string
                              value:
                                description: 'Variable references $(VAR_NAME) are
                                  expanded using the previous defined environment
                                  variables in the container and any service environment
                                  variables. If a variable cannot be resolved, the
                                  reference in the input string will be unchanged.
                                  The $(VAR_NAME) syntax can be escaped with a double
                                  $$, ie: $$(VAR_NAME). Escaped references will never
                                  be expanded, regardless of whether the variable
                                  exists or not. Defaults to "".'
                                type: string
                              valueFrom:
                                description: EnvVarSource represents a source for
                                  the value of an EnvVar.
                                properties:
                                  configMapKeyRef:
                                    description: Selects a key from a ConfigMap.
                                    properties:
                                      key:
                                        description: The key to select.
                                        type: string
                                      name:
                                        description: 'Name of the referent. More info:
                                          https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                        type: string
                                      optional:
                                        description: Specify whether the ConfigMap
                                          or it's key must be defined
                                        type: boolean
                                    required:
                                    - key
                                  fieldRef:
                                    description: ObjectFieldSelector selects an APIVersioned
                                      field of an object.
                                    properties:
                                      apiVersion:
                                        description: Version of the schema the FieldPath
                                          is written in terms of, defaults to "v1".
                                        type: string
                                      fieldPath:
                                        description: Path of the field to select in
                                          the specified API version.
                                        type: string
                                    required:
                                    - fieldPath
                                  resourceFieldRef:
                                    description: ResourceFieldSelector represents
                                      container resources (cpu, memory) and their
                                      output format
                                    properties:
                                      containerName:
                                        description: 'Container name: required for
                                          volumes, optional for env vars'
                                        type: string
                                      resource:
                                        description: 'Required: resource to select'
                                        type: string
                                    required:
                                    - resource
                                  secretKeyRef:
                                    description: SecretKeySelector selects a key of
                                      a Secret.
                                    properties:
                                      key:
                                        description: The key of the secret to select
                                          from.  Must be a valid secret key.
                                        type: string
                                      name:
                                        description: 'Name of the referent. More info:
                                          https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                        type: string
                                      optional:
                                        description: Specify whether the Secret or
                                          it's key must be defined
                                        type: boolean
                                    required:
                                    - key
                            required:
                            - name
                          type: array
                        envFrom:
                          description: List of sources to populate environment variables
                            in the container. The keys defined within a source must
                            be a C_IDENTIFIER. All invalid keys will be reported as
                            an event when the container is starting. When a key exists
                            in multiple sources, the value associated with the last
                            source will take precedence. Values defined by an Env
                            with a duplicate key will take precedence. Cannot be updated.
                          items:
                            description: EnvFromSource represents the source of a
                              set of ConfigMaps
                            properties:
                              configMapRef:
                                description: |-
                                  ConfigMapEnvSource selects a ConfigMap to populate the environment variables with.

                                  The contents of the target ConfigMap's Data field will represent the key-value pairs as environment variables.
                                properties:
                                  name:
                                    description: 'Name of the referent. More info:
                                      https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                    type: string
                                  optional:
                                    description: Specify whether the ConfigMap must
                                      be defined
                                    type: boolean
                              prefix:
                                description: An optional identifier to prepend to
                                  each key in the ConfigMap. Must be a C_IDENTIFIER.
                                type: string
                              secretRef:
                                description: |-
                                  SecretEnvSource selects a Secret to populate the environment variables with.

                                  The contents of the target Secret's Data field will represent the key-value pairs as environment variables.
                                properties:
                                  name:
                                    description: 'Name of the referent. More info:
                                      https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                    type: string
                                  optional:
                                    description: Specify whether the Secret must be
                                      defined
                                    type: boolean
                          type: array
                        image:
                          description: 'Docker image name. More info: https://kubernetes.io/docs/concepts/containers/images
                            This field is optional to allow higher level config management
                            to default or override container images in workload controllers
                            like Deployments and StatefulSets.'
                          type: string
                        imagePullPolicy:
                          description: 'Image pull policy. One of Always, Never, IfNotPresent.
                            Defaults to Always if :latest tag is specified, or IfNotPresent
                            otherwise. Cannot be updated. More info: https://kubernetes.io/docs/concepts/containers/images#updating-images'
                          type: string
                        lifecycle:
                          description: Lifecycle describes actions that the management
                            system should take in response to container lifecycle
                            events. For the PostStart and PreStop lifecycle handlers,
                            management of the container blocks until the action is
                            complete, unless the container process fails, in which
                            case the handler is aborted.
                          properties:
                            postStart:
                              description: Handler defines a specific action that
                                should be taken
                              properties:
                                exec:
                                  description: ExecAction describes a "run in container"
                                    action.
                                  properties:
                                    command:
                                      description: Command is the command line to
                                        execute inside the container, the working
                                        directory for the command  is root ('/') in
                                        the container's filesystem. The command is
                                        simply exec'd, it is not run inside a shell,
                                        so traditional shell instructions ('|', etc)
                                        won't work. To use a shell, you need to explicitly
                                        call out to that shell. Exit status of 0 is
                                        treated as live/healthy and non-zero is unhealthy.
                                      items:
                                        type: string
                                      type: array
                                httpGet:
                                  description: HTTPGetAction describes an action based
                                    on HTTP Get requests.
                                  properties:
                                    host:
                                      description: Host name to connect to, defaults
                                        to the pod IP. You probably want to set "Host"
                                        in httpHeaders instead.
                                      type: string
                                    httpHeaders:
                                      description: Custom headers to set in the request.
                                        HTTP allows repeated headers.
                                      items:
                                        description: HTTPHeader describes a custom
                                          header to be used in HTTP probes
                                        properties:
                                          name:
                                            description: The header field name
                                            type: string
                                          value:
                                            description: The header field value
                                            type: string
                                        required:
                                        - name
                                        - value
                                      type: array
                                    path:
                                      description: Path to access on the HTTP server.
                                      type: string
                                    port:
                                      anyOf:
                                      - type: string
                                      - type: integer
                                    scheme:
                                      description: Scheme to use for connecting to
                                        the host. Defaults to HTTP.
                                      type: string
                                  required:
                                  - port
                                tcpSocket:
                                  description: TCPSocketAction describes an action
                                    based on opening a socket
                                  properties:
                                    host:
                                      description: 'Optional: Host name to connect
                                        to, defaults to the pod IP.'
                                      type: string
                                    port:
                                      anyOf:
                                      - type: string
                                      - type: integer
                                  required:
                                  - port
                            preStop:
                              description: Handler defines a specific action that
                                should be taken
                              properties:
                                exec:
                                  description: ExecAction describes a "run in container"
                                    action.
                                  properties:
                                    command:
                                      description: Command is the command line to
                                        execute inside the container, the working
                                        directory for the command  is root ('/') in
                                        the container's filesystem. The command is
                                        simply exec'd, it is not run inside a shell,
                                        so traditional shell instructions ('|', etc)
                                        won't work. To use a shell, you need to explicitly
                                        call out to that shell. Exit status of 0 is
                                        treated as live/healthy and non-zero is unhealthy.
                                      items:
                                        type: string
                                      type: array
                                httpGet:
                                  description: HTTPGetAction describes an action based
                                    on HTTP Get requests.
                                  properties:
                                    host:
                                      description: Host name to connect to, defaults
                                        to the pod IP. You probably want to set "Host"
                                        in httpHeaders instead.
                                      type: string
                                    httpHeaders:
                                      description: Custom headers to set in the request.
                                        HTTP allows repeated headers.
                                      items:
                                        description: HTTPHeader describes a custom
                                          header to be used in HTTP probes
                                        properties:
                                          name:
                                            description: The header field name
                                            type: string
                                          value:
                                            description: The header field value
                                            type: string
                                        required:
                                        - name
                                        - value
                                      type: array
                                    path:
                                      description: Path to access on the HTTP server.
                                      type: string
                                    port:
                                      anyOf:
                                      - type: string
                                      - type: integer
                                    scheme:
                                      description: Scheme to use for connecting to
                                        the host. Defaults to HTTP.
                                      type: string
                                  required:
                                  - port
                                tcpSocket:
                                  description: TCPSocketAction describes an action
                                    based on opening a socket
                                  properties:
                                    host:
                                      description: 'Optional: Host name to connect
                                        to, defaults to the pod IP.'
                                      type: string
                                    port:
                                      anyOf:
                                      - type: string
                                      - type: integer
                                  required:
                                  - port
                        livenessProbe:
                          description: Probe describes a health check to be performed
                            against a container to determine whether it is alive or
                            ready to receive traffic.
                          properties:
                            exec:
                              description: ExecAction describes a "run in container"
                                action.
                              properties:
                                command:
                                  description: Command is the command line to execute
                                    inside the container, the working directory for
                                    the command  is root ('/') in the container's
                                    filesystem. The command is simply exec'd, it is
                                    not run inside a shell, so traditional shell instructions
                                    ('|', etc) won't work. To use a shell, you need
                                    to explicitly call out to that shell. Exit status
                                    of 0 is treated as live/healthy and non-zero is
                                    unhealthy.
                                  items:
                                    type: string
                                  type: array
                            failureThreshold:
                              description: Minimum consecutive failures for the probe
                                to be considered failed after having succeeded. Defaults
                                to 3. Minimum value is 1.
                              format: int32
                              type: integer
                            httpGet:
                              description: HTTPGetAction describes an action based
                                on HTTP Get requests.
                              properties:
                                host:
                                  description: Host name to connect to, defaults to
                                    the pod IP. You probably want to set "Host" in
                                    httpHeaders instead.
                                  type: string
                                httpHeaders:
                                  description: Custom headers to set in the request.
                                    HTTP allows repeated headers.
                                  items:
                                    description: HTTPHeader describes a custom header
                                      to be used in HTTP probes
                                    properties:
                                      name:
                                        description: The header field name
                                        type: string
                                      value:
                                        description: The header field value
                                        type: string
                                    required:
                                    - name
                                    - value
                                  type: array
                                path:
                                  description: Path to access on the HTTP server.
                                  type: string
                                port:
                                  anyOf:
                                  - type: string
                                  - type: integer
                                scheme:
                                  description: Scheme to use for connecting to the
                                    host. Defaults to HTTP.
                                  type: string
                              required:
                              - port
                            initialDelaySeconds:
                              description: 'Number of seconds after the container
                                has started before liveness probes are initiated.
                                More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                              format: int32
                              type: integer
                            periodSeconds:
                              description: How often (in seconds) to perform the probe.
                                Default to 10 seconds. Minimum value is 1.
                              format: int32
                              type: integer
                            successThreshold:
                              description: Minimum consecutive successes for the probe
                                to be considered successful after having failed. Defaults
                                to 1. Must be 1 for liveness. Minimum value is 1.
                              format: int32
                              type: integer
                            tcpSocket:
                              description: TCPSocketAction describes an action based
                                on opening a socket
                              properties:
                                host:
                                  description: 'Optional: Host name to connect to,
                                    defaults to the pod IP.'
                                  type: string
                                port:
                                  anyOf:
                                  - type: string
                                  - type: integer
                              required:
                              - port
                            timeoutSeconds:
                              description: 'Number of seconds after which the probe
                                times out. Defaults to 1 second. Minimum value is
                                1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                              format: int32
                              type: integer
                        name:
                          description: Name of the container specified as a DNS_LABEL.
                            Each container in a pod must have a unique name (DNS_LABEL).
                            Cannot be updated.
                          type: string
                        ports:
                          description: List of ports to expose from the container.
                            Exposing a port here gives the system additional information
                            about the network connections a container uses, but is
                            primarily informational. Not specifying a port here DOES
                            NOT prevent that port from being exposed. Any port which
                            is listening on the default "0.0.0.0" address inside a
                            container will be accessible from the network. Cannot
                            be updated.
                          items:
                            description: ContainerPort represents a network port in
                              a single container.
                            properties:
                              containerPort:
                                description: Number of port to expose on the pod's
                                  IP address. This must be a valid port number, 0
                                  < x < 65536.
                                format: int32
                                type: integer
                              hostIP:
                                description: What host IP to bind the external port
                                  to.
                                type: string
                              hostPort:
                                description: Number of port to expose on the host.
                                  If specified, this must be a valid port number,
                                  0 < x < 65536. If HostNetwork is specified, this
                                  must match ContainerPort. Most containers do not
                                  need this.
                                format: int32
                                type: integer
                              name:
                                description: If specified, this must be an IANA_SVC_NAME
                                  and unique within the pod. Each named port in a
                                  pod must have a unique name. Name for the port that
                                  can be referred to by services.
                                type: string
                              protocol:
                                description: Protocol for port. Must be UDP, TCP,
                                  or SCTP. Defaults to "TCP".
                                type: string
                            required:
                            - containerPort
                          type: array
                        readinessProbe:
                          description: Probe describes a health check to be performed
                            against a container to determine whether it is alive or
                            ready to receive traffic.
                          properties:
                            exec:
                              description: ExecAction describes a "run in container"
                                action.
                              properties:
                                command:
                                  description: Command is the command line to execute
                                    inside the container, the working directory for
                                    the command  is root ('/') in the container's
                                    filesystem. The command is simply exec'd, it is
                                    not run inside a shell, so traditional shell instructions
                                    ('|', etc) won't work. To use a shell, you need
                                    to explicitly call out to that shell. Exit status
                                    of 0 is treated as live/healthy and non-zero is
                                    unhealthy.
                                  items:
                                    type: string
                                  type: array
                            failureThreshold:
                              description: Minimum consecutive failures for the probe
                                to be considered failed after having succeeded. Defaults
                                to 3. Minimum value is 1.
                              format: int32
                              type: integer
                            httpGet:
                              description: HTTPGetAction describes an action based
                                on HTTP Get requests.
                              properties:
                                host:
                                  description: Host name to connect to, defaults to
                                    the pod IP. You probably want to set "Host" in
                                    httpHeaders instead.
                                  type: string
                                httpHeaders:
                                  description: Custom headers to set in the request.
                                    HTTP allows repeated headers.
                                  items:
                                    description: HTTPHeader describes a custom header
                                      to be used in HTTP probes
                                    properties:
                                      name:
                                        description: The header field name
                                        type: string
                                      value:
                                        description: The header field value
                                        type: string
                                    required:
                                    - name
                                    - value
                                  type: array
                                path:
                                  description: Path to access on the HTTP server.
                                  type: string
                                port:
                                  anyOf:
                                  - type: string
                                  - type: integer
                                scheme:
                                  description: Scheme to use for connecting to the
                                    host. Defaults to HTTP.
                                  type: string
                              required:
                              - port
                            initialDelaySeconds:
                              description: 'Number of seconds after the container
                                has started before liveness probes are initiated.
                                More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                              format: int32
                              type: integer
                            periodSeconds:
                              description: How often (in seconds) to perform the probe.
                                Default to 10 seconds. Minimum value is 1.
                              format: int32
                              type: integer
                            successThreshold:
                              description: Minimum consecutive successes for the probe
                                to be considered successful after having failed. Defaults
                                to 1. Must be 1 for liveness. Minimum value is 1.
                              format: int32
                              type: integer
                            tcpSocket:
                              description: TCPSocketAction describes an action based
                                on opening a socket
                              properties:
                                host:
                                  description: 'Optional: Host name to connect to,
                                    defaults to the pod IP.'
                                  type: string
                                port:
                                  anyOf:
                                  - type: string
                                  - type: integer
                              required:
                              - port
                            timeoutSeconds:
                              description: 'Number of seconds after which the probe
                                times out. Defaults to 1 second. Minimum value is
                                1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                              format: int32
                              type: integer
                        resources:
                          description: ResourceRequirements describes the compute
                            resource requirements.
                          properties:
                            limits:
                              description: 'Limits describes the maximum amount of
                                compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                              type: object
                            requests:
                              description: 'Requests describes the minimum amount
                                of compute resources required. If Requests is omitted
                                for a container, it defaults to Limits if that is
                                explicitly specified, otherwise to an implementation-defined
                                value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                              type: object
                        securityContext:
                          description: SecurityContext holds security configuration
                            that will be applied to a container. Some fields are present
                            in both SecurityContext and PodSecurityContext.  When
                            both are set, the values in SecurityContext take precedence.
                          properties:
                            allowPrivilegeEscalation:
                              description: 'AllowPrivilegeEscalation controls whether
                                a process can gain more privileges than its parent
                                process. This bool directly controls if the no_new_privs
                                flag will be set on the container process. AllowPrivilegeEscalation
                                is true always when the container is: 1) run as Privileged
                                2) has CAP_SYS_ADMIN'
                              type: boolean
                            capabilities:
                              description: Adds and removes POSIX capabilities from
                                running containers.
                              properties:
                                add:
                                  description: Added capabilities
                                  items:
                                    type: string
                                  type: array
                                drop:
                                  description: Removed capabilities
                                  items:
                                    type: string
                                  type: array
                            privileged:
                              description: Run container in privileged mode. Processes
                                in privileged containers are essentially equivalent
                                to root on the host. Defaults to false.
                              type: boolean
                            procMount:
                              description: procMount denotes the type of proc mount
                                to use for the containers. The default is DefaultProcMount
                                which uses the container runtime defaults for readonly
                                paths and masked paths. This requires the ProcMountType
                                feature flag to be enabled.
                              type: string
                            readOnlyRootFilesystem:
                              description: Whether this container has a read-only
                                root filesystem. Default is false.
                              type: boolean
                            runAsGroup:
                              description: The GID to run the entrypoint of the container
                                process. Uses runtime default if unset. May also be
                                set in PodSecurityContext.  If set in both SecurityContext
                                and PodSecurityContext, the value specified in SecurityContext
                                takes precedence.
                              format: int64
                              type: integer
                            runAsNonRoot:
                              description: Indicates that the container must run as
                                a non-root user. If true, the Kubelet will validate
                                the image at runtime to ensure that it does not run
                                as UID 0 (root) and fail to start the container if
                                it does. If unset or false, no such validation will
                                be performed. May also be set in PodSecurityContext.  If
                                set in both SecurityContext and PodSecurityContext,
                                the value specified in SecurityContext takes precedence.
                              type: boolean
                            runAsUser:
                              description: The UID to run the entrypoint of the container
                                process. Defaults to user specified in image metadata
                                if unspecified. May also be set in PodSecurityContext.  If
                                set in both SecurityContext and PodSecurityContext,
                                the value specified in SecurityContext takes precedence.
                              format: int64
                              type: integer
                            seLinuxOptions:
                              description: SELinuxOptions are the labels to be applied
                                to the container
                              properties:
                                level:
                                  description: Level is SELinux level label that applies
                                    to the container.
                                  type: string
                                role:
                                  description: Role is a SELinux role label that applies
                                    to the container.
                                  type: string
                                type:
                                  description: Type is a SELinux type label that applies
                                    to the container.
                                  type: string
                                user:
                                  description: User is a SELinux user label that applies
                                    to the container.
                                  type: string
                        stdin:
                          description: Whether this container should allocate a buffer
                            for stdin in the container runtime. If this is not set,
                            reads from stdin in the container will always result in
                            EOF. Default is false.
                          type: boolean
                        stdinOnce:
                          description: Whether the container runtime should close
                            the stdin channel after it has been opened by a single
                            attach. When stdin is true the stdin stream will remain
                            open across multiple attach sessions. If stdinOnce is
                            set to true, stdin is opened on container start, is empty
                            until the first client attaches to stdin, and then remains
                            open and accepts data until the client disconnects, at
                            which time stdin is closed and remains closed until the
                            container is restarted. If this flag is false, a container
                            processes that reads from stdin will never receive an
                            EOF. Default is false
                          type: boolean
                        terminationMessagePath:
                          description: 'Optional: Path at which the file to which
                            the container''s termination message will be written is
                            mounted into the container''s filesystem. Message written
                            is intended to be brief final status, such as an assertion
                            failure message. Will be truncated by the node if greater
                            than 4096 bytes. The total message length across all containers
                            will be limited to 12kb. Defaults to /dev/termination-log.
                            Cannot be updated.'
                          type: string
                        terminationMessagePolicy:
                          description: Indicate how the termination message should
                            be populated. File will use the contents of terminationMessagePath
                            to populate the container status message on both success
                            and failure. FallbackToLogsOnError will use the last chunk
                            of container log output if the termination message file
                            is empty and the container exited with an error. The log
                            output is limited to 2048 bytes or 80 lines, whichever
                            is smaller. Defaults to File. Cannot be updated.
                          type: string
                        tty:
                          description: Whether this container should allocate a TTY
                            for itself, also requires 'stdin' to be true. Default
                            is false.
                          type: boolean
                        volumeDevices:
                          description: volumeDevices is the list of block devices
                            to be used by the container. This is an alpha feature
                            and may change in the future.
                          items:
                            description: volumeDevice describes a mapping of a raw
                              block device within a container.
                            properties:
                              devicePath:
                                description: devicePath is the path inside of the
                                  container that the device will be mapped to.
                                type: string
                              name:
                                description: name must match the name of a persistentVolumeClaim
                                  in the pod
                                type: string
                            required:
                            - name
                            - devicePath
                          type: array
                        volumeMounts:
                          description: Pod volumes to mount into the container's filesystem.
                            Cannot be updated.
                          items:
                            description: VolumeMount describes a mounting of a Volume
                              within a container.
                            properties:
                              mountPath:
                                description: Path within the container at which the
                                  volume should be mounted.  Must not contain ':'.
                                type: string
                              mountPropagation:
                                description: mountPropagation determines how mounts
                                  are propagated from the host to container and the
                                  other way around. When not set, MountPropagationNone
                                  is used. This field is beta in 1.10.
                                type: string
                              name:
                                description: This must match the Name of a Volume.
                                type: string
                              readOnly:
                                description: Mounted read-only if true, read-write
                                  otherwise (false or unspecified). Defaults to false.
                                type: boolean
                              subPath:
                                description: Path within the volume from which the
                                  container's volume should be mounted. Defaults to
                                  "" (volume's root).
                                type: string
                            required:
                            - name
                            - mountPath
                          type: array
                        workingDir:
                          description: Container's working directory. If not specified,
                            the container runtime's default will be used, which might
                            be configured in the container image. Cannot be updated.
                          type: string
                      required:
                      - name
                    type: array
                  evaluationInterval:
                    description: Interval between consecutive evaluations.
                    type: string
                  externalLabels:
                    description: The labels to add to any time series or alerts when
                      communicating with external systems (federation, remote storage,
                      Alertmanager).
                    type: object
                  externalUrl:
                    description: The external URL the Prometheus instances will be
                      available under. This is necessary to generate correct URLs.
                      This is necessary if Prometheus is not served from root of a
                      DNS name.
                    type: string
                  imagePullSecrets:
                    description: An optional list of references to secrets in the
                      same namespace to use for pulling prometheus and alertmanager
                      images from registries see http://kubernetes.io/docs/user-guide/images#specifying-imagepullsecrets-on-a-pod
                    items:
                      description: LocalObjectReference contains enough information
                        to let you locate the referenced object inside the same namespace.
                      properties:
                        name:
                          description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                          type: string
                    type: array
                  listenLocal:
                    description: ListenLocal makes the Prometheus server listen on
                      loopback, so that it does not bind against the Pod IP.
                    type: boolean
                  logLevel:
                    description: Log level for Prometheus to be configured with.
                    type: string
                  nodeSelector:
                    description: Define which Nodes the Pods are scheduled on.
                    type: object
                  paused:
                    description: When a Prometheus deployment is paused, no actions
                      except for deletion will be performed on the underlying objects.
                    type: boolean
                  podMetadata:
                    description: ObjectMeta is metadata that all persisted resources
                      must have, which includes all objects users must create.
                    properties:
                      annotations:
                        description: 'Annotations is an unstructured key value map
                          stored with a resource that may be set by external tools
                          to store and retrieve arbitrary metadata. They are not queryable
                          and should be preserved when modifying objects. More info:
                          http://kubernetes.io/docs/user-guide/annotations'
                        type: object
                      clusterName:
                        description: The name of the cluster which the object belongs
                          to. This is used to distinguish resources with same name
                          and namespace in different clusters. This field is not set
                          anywhere right now and apiserver is going to ignore it if
                          set in create or update request.
                        type: string
                      creationTimestamp:
                        description: Time is a wrapper around time.Time which supports
                          correct marshaling to YAML and JSON.  Wrappers are provided
                          for many of the factory methods that the time package offers.
                        format: date-time
                        type: string
                      deletionGracePeriodSeconds:
                        description: Number of seconds allowed for this object to
                          gracefully terminate before it will be removed from the
                          system. Only set when deletionTimestamp is also set. May
                          only be shortened. Read-only.
                        format: int64
                        type: integer
                      deletionTimestamp:
                        description: Time is a wrapper around time.Time which supports
                          correct marshaling to YAML and JSON.  Wrappers are provided
                          for many of the factory methods that the time package offers.
                        format: date-time
                        type: string
                      finalizers:
                        description: Must be empty before the object is deleted from
                          the registry. Each entry is an identifier for the responsible
                          component that will remove the entry from the list. If the
                          deletionTimestamp of the object is non-nil, entries in this
                          list can only be removed.
                        items:
                          type: string
                        type: array
                      generateName:
                        description: |-
                          GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.

                          If this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).

                          Applied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#idempotency
                        type: string
                      generation:
                        description: A sequence number representing a specific generation
                          of the desired state. Populated by the system. Read-only.
                        format: int64
                        type: integer
                      initializers:
                        description: Initializers tracks the progress of initialization.
                        properties:
                          pending:
                            description: Pending is a list of initializers that must
                              execute in order before this object is visible. When
                              the last pending initializer is removed, and no failing
                              result is set, the initializers struct will be set to
                              nil and the object is considered as initialized and
                              visible to all clients.
                            items:
                              description: Initializer is information about an initializer
                                that has not yet completed.
                              properties:
                                name:
                                  description: name of the process that is responsible
                                    for initializing this object.
                                  type: string
                              required:
                              - name
                            type: array
                          result:
                            description: Status is a return value for calls that don't
                              return other objects.
                            properties:
                              apiVersion:
                                description: 'APIVersion defines the versioned schema
                                  of this representation of an object. Servers should
                                  convert recognized schemas to the latest internal
                                  value, and may reject unrecognized values. More
                                  info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
                                type: string
                              code:
                                description: Suggested HTTP return code for this status,
                                  0 if not set.
                                format: int32
                                type: integer
                              details:
                                description: StatusDetails is a set of additional
                                  properties that MAY be set by the server to provide
                                  additional information about a response. The Reason
                                  field of a Status object defines what attributes
                                  will be set. Clients must ignore fields that do
                                  not match the defined type of each attribute, and
                                  should assume that any attribute may be empty, invalid,
                                  or under defined.
                                properties:
                                  causes:
                                    description: The Causes array includes more details
                                      associated with the StatusReason failure. Not
                                      all StatusReasons may provide detailed causes.
                                    items:
                                      description: StatusCause provides more information
                                        about an api.Status failure, including cases
                                        when multiple errors are encountered.
                                      properties:
                                        field:
                                          description: |-
                                            The field of the resource that has caused this error, as named by its JSON serialization. May include dot and postfix notation for nested attributes. Arrays are zero-indexed.  Fields may appear more than once in an array of causes due to fields having multiple errors. Optional.

                                            Examples:
                                              "name" - the field "name" on the current resource
                                              "items[0].name" - the field "name" on the first array entry in "items"
                                          type: string
                                        message:
                                          description: A human-readable description
                                            of the cause of the error.  This field
                                            may be presented as-is to a reader.
                                          type: string
                                        reason:
                                          description: A machine-readable description
                                            of the cause of the error. If this value
                                            is empty there is no information available.
                                          type: string
                                    type: array
                                  group:
                                    description: The group attribute of the resource
                                      associated with the status StatusReason.
                                    type: string
                                  kind:
                                    description: 'The kind attribute of the resource
                                      associated with the status StatusReason. On
                                      some operations may differ from the requested
                                      resource Kind. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
                                    type: string
                                  name:
                                    description: The name attribute of the resource
                                      associated with the status StatusReason (when
                                      there is a single name which can be described).
                                    type: string
                                  retryAfterSeconds:
                                    description: If specified, the time in seconds
                                      before the operation should be retried. Some
                                      errors may indicate the client must take an
                                      alternate action - for those errors this field
                                      may indicate how long to wait before taking
                                      the alternate action.
                                    format: int32
                                    type: integer
                                  uid:
                                    description: 'UID of the resource. (when there
                                      is a single resource which can be described).
                                      More info: http://kubernetes.io/docs/user-guide/identifiers#uids'
                                    type: string
                              kind:
                                description: 'Kind is a string value representing
                                  the REST resource this object represents. Servers
                                  may infer this from the endpoint the client submits
                                  requests to. Cannot be updated. In CamelCase. More
                                  info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
                                type: string
                              message:
                                description: A human-readable description of the status
                                  of this operation.
                                type: string
                              metadata:
                                description: ListMeta describes metadata that synthetic
                                  resources must have, including lists and various
                                  status objects. A resource may have only one of
                                  {ObjectMeta, ListMeta}.
                                properties:
                                  continue:
                                    description: continue may be set if the user set
                                      a limit on the number of items returned, and
                                      indicates that the server has more data available.
                                      The value is opaque and may be used to issue
                                      another request to the endpoint that served
                                      this list to retrieve the next set of available
                                      objects. Continuing a consistent list may not
                                      be possible if the server configuration has
                                      changed or more than a few minutes have passed.
                                      The resourceVersion field returned when using
                                      this continue value will be identical to the
                                      value in the first response, unless you have
                                      received this token from an error message.
                                    type: string
                                  resourceVersion:
                                    description: 'String that identifies the server''s
                                      internal version of this object that can be
                                      used by clients to determine when objects have
                                      changed. Value must be treated as opaque by
                                      clients and passed unmodified back to the server.
                                      Populated by the system. Read-only. More info:
                                      https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency'
                                    type: string
                                  selfLink:
                                    description: selfLink is a URL representing this
                                      object. Populated by the system. Read-only.
                                    type: string
                              reason:
                                description: A machine-readable description of why
                                  this operation is in the "Failure" status. If this
                                  value is empty there is no information available.
                                  A Reason clarifies an HTTP status code but does
                                  not override it.
                                type: string
                              status:
                                description: 'Status of the operation. One of: "Success"
                                  or "Failure". More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status'
                                type: string
                        required:
                        - pending
                      labels:
                        description: 'Map of string keys and values that can be used
                          to organize and categorize (scope and select) objects. May
                          match selectors of replication controllers and services.
                          More info: http://kubernetes.io/docs/user-guide/labels'
                        type: object
                      name:
                        description: 'Name must be unique within a namespace. Is required
                          when creating resources, although some resources may allow
                          a client to request the generation of an appropriate name
                          automatically. Name is primarily intended for creation idempotence
                          and configuration definition. Cannot be updated. More info:
                          http://kubernetes.io/docs/user-guide/identifiers#names'
                        type: string
                      namespace:
                        description: |-
                          Namespace defines the space within each name must be unique. An empty namespace is equivalent to the "default" namespace, but "default" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.

                          Must be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces
                        type: string
                      ownerReferences:
                        description: List of objects depended by this object. If ALL
                          objects in the list have been deleted, this object will
                          be garbage collected. If this object is managed by a controller,
                          then an entry in this list will point to this controller,
                          with the controller field set to true. There cannot be more
                          than one managing controller.
                        items:
                          description: OwnerReference contains enough information
                            to let you identify an owning object. Currently, an owning
                            object must be in the same namespace, so there is no namespace
                            field.
                          properties:
                            apiVersion:
                              description: API version of the referent.
                              type: string
                            blockOwnerDeletion:
                              description: If true, AND if the owner has the "foregroundDeletion"
                                finalizer, then the owner cannot be deleted from the
                                key-value store until this reference is removed. Defaults
                                to false. To set this field, a user needs "delete"
                                permission of the owner, otherwise 422 (Unprocessable
                                Entity) will be returned.
                              type: boolean
                            controller:
                              description: If true, this reference points to the managing
                                controller.
                              type: boolean
                            kind:
                              description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
                              type: string
                            name:
                              description: 'Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names'
                              type: string
                            uid:
                              description: 'UID of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#uids'
                              type: string
                          required:
                          - apiVersion
                          - kind
                          - name
                          - uid
                        type: array
                      resourceVersion:
                        description: |-
                          An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.

                          Populated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency
                        type: string
                      selfLink:
                        description: SelfLink is a URL representing this object. Populated
                          by the system. Read-only.
                        type: string
                      uid:
                        description: |-
                          UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.

                          Populated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids
                        type: string
                  priorityClassName:
                    description: Priority class assigned to the Pods
                    type: string
                  remoteRead:
                    description: If specified, the remote_read spec. This is an experimental
                      feature, it may change in any upcoming release in a breaking
                      way.
                    items:
                      description: RemoteReadSpec defines the remote_read configuration
                        for prometheus.
                      properties:
                        basicAuth:
                          description: 'BasicAuth allow an endpoint to authenticate
                            over basic authentication More info: https://prometheus.io/docs/operating/configuration/#endpoints'
                          properties:
                            password:
                              description: SecretKeySelector selects a key of a Secret.
                              properties:
                                key:
                                  description: The key of the secret to select from.  Must
                                    be a valid secret key.
                                  type: string
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                  type: string
                                optional:
                                  description: Specify whether the Secret or it's
                                    key must be defined
                                  type: boolean
                              required:
                              - key
                            username:
                              description: SecretKeySelector selects a key of a Secret.
                              properties:
                                key:
                                  description: The key of the secret to select from.  Must
                                    be a valid secret key.
                                  type: string
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                  type: string
                                optional:
                                  description: Specify whether the Secret or it's
                                    key must be defined
                                  type: boolean
                              required:
                              - key
                        bearerToken:
                          description: bearer token for remote read.
                          type: string
                        bearerTokenFile:
                          description: File to read bearer token for remote read.
                          type: string
                        proxyUrl:
                          description: Optional ProxyURL
                          type: string
                        readRecent:
                          description: Whether reads should be made for queries for
                            time ranges that the local storage should have complete
                            data for.
                          type: boolean
                        remoteTimeout:
                          description: Timeout for requests to the remote read endpoint.
                          type: string
                        requiredMatchers:
                          description: An optional list of equality matchers which
                            have to be present in a selector to query the remote read
                            endpoint.
                          type: object
                        tlsConfig:
                          description: TLSConfig specifies TLS configuration parameters.
                          properties:
                            caFile:
                              description: The CA cert to use for the targets.
                              type: string
                            certFile:
                              description: The client cert file for the targets.
                              type: string
                            insecureSkipVerify:
                              description: Disable target certificate validation.
                              type: boolean
                            keyFile:
                              description: The client key file for the targets.
                              type: string
                            serverName:
                              description: Used to verify the hostname for the targets.
                              type: string
                        url:
                          description: The URL of the endpoint to send samples to.
                          type: string
                      required:
                      - url
                    type: array
                  remoteWrite:
                    description: If specified, the remote_write spec. This is an experimental
                      feature, it may change in any upcoming release in a breaking
                      way.
                    items:
                      description: RemoteWriteSpec defines the remote_write configuration
                        for prometheus.
                      properties:
                        basicAuth:
                          description: 'BasicAuth allow an endpoint to authenticate
                            over basic authentication More info: https://prometheus.io/docs/operating/configuration/#endpoints'
                          properties:
                            password:
                              description: SecretKeySelector selects a key of a Secret.
                              properties:
                                key:
                                  description: The key of the secret to select from.  Must
                                    be a valid secret key.
                                  type: string
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                  type: string
                                optional:
                                  description: Specify whether the Secret or it's
                                    key must be defined
                                  type: boolean
                              required:
                              - key
                            username:
                              description: SecretKeySelector selects a key of a Secret.
                              properties:
                                key:
                                  description: The key of the secret to select from.  Must
                                    be a valid secret key.
                                  type: string
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                  type: string
                                optional:
                                  description: Specify whether the Secret or it's
                                    key must be defined
                                  type: boolean
                              required:
                              - key
                        bearerToken:
                          description: File to read bearer token for remote write.
                          type: string
                        bearerTokenFile:
                          description: File to read bearer token for remote write.
                          type: string
                        proxyUrl:
                          description: Optional ProxyURL
                          type: string
                        queueConfig:
                          description: QueueConfig allows the tuning of remote_write
                            queue_config parameters. This object is referenced in
                            the RemoteWriteSpec object.
                          properties:
                            batchSendDeadline:
                              description: BatchSendDeadline is the maximum time a
                                sample will wait in buffer.
                              type: string
                            capacity:
                              description: Capacity is the number of samples to buffer
                                per shard before we start dropping them.
                              format: int32
                              type: integer
                            maxBackoff:
                              description: MaxBackoff is the maximum retry delay.
                              type: string
                            maxRetries:
                              description: MaxRetries is the maximum number of times
                                to retry a batch on recoverable errors.
                              format: int32
                              type: integer
                            maxSamplesPerSend:
                              description: MaxSamplesPerSend is the maximum number
                                of samples per send.
                              format: int32
                              type: integer
                            maxShards:
                              description: MaxShards is the maximum number of shards,
                                i.e. amount of concurrency.
                              format: int32
                              type: integer
                            minBackoff:
                              description: MinBackoff is the initial retry delay.
                                Gets doubled for every retry.
                              type: string
                        remoteTimeout:
                          description: Timeout for requests to the remote write endpoint.
                          type: string
                        tlsConfig:
                          description: TLSConfig specifies TLS configuration parameters.
                          properties:
                            caFile:
                              description: The CA cert to use for the targets.
                              type: string
                            certFile:
                              description: The client cert file for the targets.
                              type: string
                            insecureSkipVerify:
                              description: Disable target certificate validation.
                              type: boolean
                            keyFile:
                              description: The client key file for the targets.
                              type: string
                            serverName:
                              description: Used to verify the hostname for the targets.
                              type: string
                        url:
                          description: The URL of the endpoint to send samples to.
                          type: string
                        writeRelabelConfigs:
                          description: The list of remote write relabel configurations.
                          items:
                            description: 'RelabelConfig allows dynamic rewriting of
                              the label set, being applied to samples before ingestion.
                              It defines `<metric_relabel_configs>`-section of Prometheus
                              configuration. More info: https://prometheus.io/docs/prometheus/latest/configuration/configuration/#metric_relabel_configs'
                            properties:
                              action:
                                description: Action to perform based on regex matching.
                                  Default is 'replace'
                                type: string
                              modulus:
                                description: Modulus to take of the hash of the source
                                  label values.
                                format: int64
                                type: integer
                              regex:
                                description: Regular expression against which the
                                  extracted value is matched. defailt is '(.*)'
                                type: string
                              replacement:
                                description: Replacement value against which a regex
                                  replace is performed if the regular expression matches.
                                  Regex capture groups are available. Default is '$1'
                                type: string
                              separator:
                                description: Separator placed between concatenated
                                  source label values. default is ';'.
                                type: string
                              sourceLabels:
                                description: The source labels select values from
                                  existing labels. Their content is concatenated using
                                  the configured separator and matched against the
                                  configured regular expression for the replace, keep,
                                  and drop actions.
                                items:
                                  type: string
                                type: array
                              targetLabel:
                                description: Label to which the resulting value is
                                  written in a replace action. It is mandatory for
                                  replace actions. Regex capture groups are available.
                                type: string
                          type: array
                      required:
                      - url
                    type: array
                  replicas:
                    description: Number of instances to deploy for a Prometheus deployment.
                    format: int32
                    type: integer
                  resources:
                    description: ResourceRequirements describes the compute resource
                      requirements.
                    properties:
                      limits:
                        description: 'Limits describes the maximum amount of compute
                          resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                        type: object
                      requests:
                        description: 'Requests describes the minimum amount of compute
                          resources required. If Requests is omitted for a container,
                          it defaults to Limits if that is explicitly specified, otherwise
                          to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                        type: object
                  retention:
                    description: Time duration Prometheus shall retain data for. Default
                      is '24h', and must match the regular expression `[0-9]+(ms|s|m|h|d|w|y)`
                      (milliseconds seconds minutes hours days weeks years).
                    type: string
                  routePrefix:
                    description: The route prefix Prometheus registers HTTP handlers
                      for. This is useful, if using ExternalURL and a proxy is rewriting
                      HTTP routes of a request, and the actual ExternalURL is still
                      true, but the server serves requests under a different route
                      prefix. For example for use with `kubectl proxy`.
                    type: string
                  ruleNamespaceSelector:
                    description: A label selector is a label query over a set of resources.
                      The result of matchLabels and matchExpressions are ANDed. An
                      empty label selector matches all objects. A null label selector
                      matches no objects.
                    properties:
                      matchExpressions:
                        description: matchExpressions is a list of label selector
                          requirements. The requirements are ANDed.
                        items:
                          description: A label selector requirement is a selector
                            that contains values, a key, and an operator that relates
                            the key and values.
                          properties:
                            key:
                              description: key is the label key that the selector
                                applies to.
                              type: string
                            operator:
                              description: operator represents a key's relationship
                                to a set of values. Valid operators are In, NotIn,
                                Exists and DoesNotExist.
                              type: string
                            values:
                              description: values is an array of string values. If
                                the operator is In or NotIn, the values array must
                                be non-empty. If the operator is Exists or DoesNotExist,
                                the values array must be empty. This array is replaced
                                during a strategic merge patch.
                              items:
                                type: string
                              type: array
                          required:
                          - key
                          - operator
                        type: array
                      matchLabels:
                        description: matchLabels is a map of {key,value} pairs. A
                          single {key,value} in the matchLabels map is equivalent
                          to an element of matchExpressions, whose key field is "key",
                          the operator is "In", and the values array contains only
                          "value". The requirements are ANDed.
                        type: object
                  ruleSelector:
                    description: A label selector is a label query over a set of resources.
                      The result of matchLabels and matchExpressions are ANDed. An
                      empty label selector matches all objects. A null label selector
                      matches no objects.
                    properties:
                      matchExpressions:
                        description: matchExpressions is a list of label selector
                          requirements. The requirements are ANDed.
                        items:
                          description: A label selector requirement is a selector
                            that contains values, a key, and an operator that relates
                            the key and values.
                          properties:
                            key:
                              description: key is the label key that the selector
                                applies to.
                              type: string
                            operator:
                              description: operator represents a key's relationship
                                to a set of values. Valid operators are In, NotIn,
                                Exists and DoesNotExist.
                              type: string
                            values:
                              description: values is an array of string values. If
                                the operator is In or NotIn, the values array must
                                be non-empty. If the operator is Exists or DoesNotExist,
                                the values array must be empty. This array is replaced
                                during a strategic merge patch.
                              items:
                                type: string
                              type: array
                          required:
                          - key
                          - operator
                        type: array
                      matchLabels:
                        description: matchLabels is a map of {key,value} pairs. A
                          single {key,value} in the matchLabels map is equivalent
                          to an element of matchExpressions, whose key field is "key",
                          the operator is "In", and the values array contains only
                          "value". The requirements are ANDed.
                        type: object
                  scrapeInterval:
                    description: Interval between consecutive scrapes.
                    type: string
                  secrets:
                    description: Secrets is a list of Secrets in the same namespace
                      as the Prometheus object, which shall be mounted into the Prometheus
                      Pods. The Secrets are mounted into /etc/prometheus/secrets/<secret-name>.
                    items:
                      type: string
                    type: array
                  securityContext:
                    description: PodSecurityContext holds pod-level security attributes
                      and common container settings. Some fields are also present
                      in container.securityContext.  Field values of container.securityContext
                      take precedence over field values of PodSecurityContext.
                    properties:
                      fsGroup:
                        description: |-
                          A special supplemental group that applies to all containers in a pod. Some volume types allow the Kubelet to change the ownership of that volume to be owned by the pod:

                          1. The owning GID will be the FSGroup 2. The setgid bit is set (new files created in the volume will be owned by FSGroup) 3. The permission bits are OR'd with rw-rw----

                          If unset, the Kubelet will not modify the ownership and permissions of any volume.
                        format: int64
                        type: integer
                      runAsGroup:
                        description: The GID to run the entrypoint of the container
                          process. Uses runtime default if unset. May also be set
                          in SecurityContext.  If set in both SecurityContext and
                          PodSecurityContext, the value specified in SecurityContext
                          takes precedence for that container.
                        format: int64
                        type: integer
                      runAsNonRoot:
                        description: Indicates that the container must run as a non-root
                          user. If true, the Kubelet will validate the image at runtime
                          to ensure that it does not run as UID 0 (root) and fail
                          to start the container if it does. If unset or false, no
                          such validation will be performed. May also be set in SecurityContext.  If
                          set in both SecurityContext and PodSecurityContext, the
                          value specified in SecurityContext takes precedence.
                        type: boolean
                      runAsUser:
                        description: The UID to run the entrypoint of the container
                          process. Defaults to user specified in image metadata if
                          unspecified. May also be set in SecurityContext.  If set
                          in both SecurityContext and PodSecurityContext, the value
                          specified in SecurityContext takes precedence for that container.
                        format: int64
                        type: integer
                      seLinuxOptions:
                        description: SELinuxOptions are the labels to be applied to
                          the container
                        properties:
                          level:
                            description: Level is SELinux level label that applies
                              to the container.
                            type: string
                          role:
                            description: Role is a SELinux role label that applies
                              to the container.
                            type: string
                          type:
                            description: Type is a SELinux type label that applies
                              to the container.
                            type: string
                          user:
                            description: User is a SELinux user label that applies
                              to the container.
                            type: string
                      supplementalGroups:
                        description: A list of groups applied to the first process
                          run in each container, in addition to the container's primary
                          GID.  If unspecified, no groups will be added to any container.
                        items:
                          format: int64
                          type: integer
                        type: array
                      sysctls:
                        description: Sysctls hold a list of namespaced sysctls used
                          for the pod. Pods with unsupported sysctls (by the container
                          runtime) might fail to launch.
                        items:
                          description: Sysctl defines a kernel parameter to be set
                          properties:
                            name:
                              description: Name of a property to set
                              type: string
                            value:
                              description: Value of a property to set
                              type: string
                          required:
                          - name
                          - value
                        type: array
                  serviceAccountName:
                    description: ServiceAccountName is the name of the ServiceAccount
                      to use to run the Prometheus Pods.
                    type: string
                  serviceMonitorNamespaceSelector:
                    description: A label selector is a label query over a set of resources.
                      The result of matchLabels and matchExpressions are ANDed. An
                      empty label selector matches all objects. A null label selector
                      matches no objects.
                    properties:
                      matchExpressions:
                        description: matchExpressions is a list of label selector
                          requirements. The requirements are ANDed.
                        items:
                          description: A label selector requirement is a selector
                            that contains values, a key, and an operator that relates
                            the key and values.
                          properties:
                            key:
                              description: key is the label key that the selector
                                applies to.
                              type: string
                            operator:
                              description: operator represents a key's relationship
                                to a set of values. Valid operators are In, NotIn,
                                Exists and DoesNotExist.
                              type: string
                            values:
                              description: values is an array of string values. If
                                the operator is In or NotIn, the values array must
                                be non-empty. If the operator is Exists or DoesNotExist,
                                the values array must be empty. This array is replaced
                                during a strategic merge patch.
                              items:
                                type: string
                              type: array
                          required:
                          - key
                          - operator
                        type: array
                      matchLabels:
                        description: matchLabels is a map of {key,value} pairs. A
                          single {key,value} in the matchLabels map is equivalent
                          to an element of matchExpressions, whose key field is "key",
                          the operator is "In", and the values array contains only
                          "value". The requirements are ANDed.
                        type: object
                  serviceMonitorSelector:
                    description: A label selector is a label query over a set of resources.
                      The result of matchLabels and matchExpressions are ANDed. An
                      empty label selector matches all objects. A null label selector
                      matches no objects.
                    properties:
                      matchExpressions:
                        description: matchExpressions is a list of label selector
                          requirements. The requirements are ANDed.
                        items:
                          description: A label selector requirement is a selector
                            that contains values, a key, and an operator that relates
                            the key and values.
                          properties:
                            key:
                              description: key is the label key that the selector
                                applies to.
                              type: string
                            operator:
                              description: operator represents a key's relationship
                                to a set of values. Valid operators are In, NotIn,
                                Exists and DoesNotExist.
                              type: string
                            values:
                              description: values is an array of string values. If
                                the operator is In or NotIn, the values array must
                                be non-empty. If the operator is Exists or DoesNotExist,
                                the values array must be empty. This array is replaced
                                during a strategic merge patch.
                              items:
                                type: string
                              type: array
                          required:
                          - key
                          - operator
                        type: array
                      matchLabels:
                        description: matchLabels is a map of {key,value} pairs. A
                          single {key,value} in the matchLabels map is equivalent
                          to an element of matchExpressions, whose key field is "key",
                          the operator is "In", and the values array contains only
                          "value". The requirements are ANDed.
                        type: object
                  sha:
                    description: SHA of Prometheus container image to be deployed.
                      Defaults to the value of `version`. Similar to a tag, but the
                      SHA explicitly deploys an immutable container image. Version
                      and Tag are ignored if SHA is set.
                    type: string
                  storage:
                    description: StorageSpec defines the configured storage for a
                      group Prometheus servers. If neither `emptyDir` nor `volumeClaimTemplate`
                      is specified, then by default an [EmptyDir](https://kubernetes.io/docs/concepts/storage/volumes/#emptydir)
                      will be used.
                    properties:
                      emptyDir:
                        description: Represents an empty directory for a pod. Empty
                          directory volumes support ownership management and SELinux
                          relabeling.
                        properties:
                          medium:
                            description: 'What type of storage medium should back
                              this directory. The default is "" which means to use
                              the node''s default medium. Must be an empty string
                              (default) or Memory. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir'
                            type: string
                      volumeClaimTemplate:
                        description: PersistentVolumeClaim is a user's request for
                          and claim to a persistent volume
                        properties:
                          apiVersion:
                            description: 'APIVersion defines the versioned schema
                              of this representation of an object. Servers should
                              convert recognized schemas to the latest internal value,
                              and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
                            type: string
                          kind:
                            description: 'Kind is a string value representing the
                              REST resource this object represents. Servers may infer
                              this from the endpoint the client submits requests to.
                              Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
                            type: string
                          metadata:
                            description: ObjectMeta is metadata that all persisted
                              resources must have, which includes all objects users
                              must create.
                            properties:
                              annotations:
                                description: 'Annotations is an unstructured key value
                                  map stored with a resource that may be set by external
                                  tools to store and retrieve arbitrary metadata.
                                  They are not queryable and should be preserved when
                                  modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations'
                                type: object
                              clusterName:
                                description: The name of the cluster which the object
                                  belongs to. This is used to distinguish resources
                                  with same name and namespace in different clusters.
                                  This field is not set anywhere right now and apiserver
                                  is going to ignore it if set in create or update
                                  request.
                                type: string
                              creationTimestamp:
                                description: Time is a wrapper around time.Time which
                                  supports correct marshaling to YAML and JSON.  Wrappers
                                  are provided for many of the factory methods that
                                  the time package offers.
                                format: date-time
                                type: string
                              deletionGracePeriodSeconds:
                                description: Number of seconds allowed for this object
                                  to gracefully terminate before it will be removed
                                  from the system. Only set when deletionTimestamp
                                  is also set. May only be shortened. Read-only.
                                format: int64
                                type: integer
                              deletionTimestamp:
                                description: Time is a wrapper around time.Time which
                                  supports correct marshaling to YAML and JSON.  Wrappers
                                  are provided for many of the factory methods that
                                  the time package offers.
                                format: date-time
                                type: string
                              finalizers:
                                description: Must be empty before the object is deleted
                                  from the registry. Each entry is an identifier for
                                  the responsible component that will remove the entry
                                  from the list. If the deletionTimestamp of the object
                                  is non-nil, entries in this list can only be removed.
                                items:
                                  type: string
                                type: array
                              generateName:
                                description: |-
                                  GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.

                                  If this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).

                                  Applied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#idempotency
                                type: string
                              generation:
                                description: A sequence number representing a specific
                                  generation of the desired state. Populated by the
                                  system. Read-only.
                                format: int64
                                type: integer
                              initializers:
                                description: Initializers tracks the progress of initialization.
                                properties:
                                  pending:
                                    description: Pending is a list of initializers
                                      that must execute in order before this object
                                      is visible. When the last pending initializer
                                      is removed, and no failing result is set, the
                                      initializers struct will be set to nil and the
                                      object is considered as initialized and visible
                                      to all clients.
                                    items:
                                      description: Initializer is information about
                                        an initializer that has not yet completed.
                                      properties:
                                        name:
                                          description: name of the process that is
                                            responsible for initializing this object.
                                          type: string
                                      required:
                                      - name
                                    type: array
                                  result:
                                    description: Status is a return value for calls
                                      that don't return other objects.
                                    properties:
                                      apiVersion:
                                        description: 'APIVersion defines the versioned
                                          schema of this representation of an object.
                                          Servers should convert recognized schemas
                                          to the latest internal value, and may reject
                                          unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
                                        type: string
                                      code:
                                        description: Suggested HTTP return code for
                                          this status, 0 if not set.
                                        format: int32
                                        type: integer
                                      details:
                                        description: StatusDetails is a set of additional
                                          properties that MAY be set by the server
                                          to provide additional information about
                                          a response. The Reason field of a Status
                                          object defines what attributes will be set.
                                          Clients must ignore fields that do not match
                                          the defined type of each attribute, and
                                          should assume that any attribute may be
                                          empty, invalid, or under defined.
                                        properties:
                                          causes:
                                            description: The Causes array includes
                                              more details associated with the StatusReason
                                              failure. Not all StatusReasons may provide
                                              detailed causes.
                                            items:
                                              description: StatusCause provides more
                                                information about an api.Status failure,
                                                including cases when multiple errors
                                                are encountered.
                                              properties:
                                                field:
                                                  description: |-
                                                    The field of the resource that has caused this error, as named by its JSON serialization. May include dot and postfix notation for nested attributes. Arrays are zero-indexed.  Fields may appear more than once in an array of causes due to fields having multiple errors. Optional.

                                                    Examples:
                                                      "name" - the field "name" on the current resource
                                                      "items[0].name" - the field "name" on the first array entry in "items"
                                                  type: string
                                                message:
                                                  description: A human-readable description
                                                    of the cause of the error.  This
                                                    field may be presented as-is to
                                                    a reader.
                                                  type: string
                                                reason:
                                                  description: A machine-readable
                                                    description of the cause of the
                                                    error. If this value is empty
                                                    there is no information available.
                                                  type: string
                                            type: array
                                          group:
                                            description: The group attribute of the
                                              resource associated with the status
                                              StatusReason.
                                            type: string
                                          kind:
                                            description: 'The kind attribute of the
                                              resource associated with the status
                                              StatusReason. On some operations may
                                              differ from the requested resource Kind.
                                              More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
                                            type: string
                                          name:
                                            description: The name attribute of the
                                              resource associated with the status
                                              StatusReason (when there is a single
                                              name which can be described).
                                            type: string
                                          retryAfterSeconds:
                                            description: If specified, the time in
                                              seconds before the operation should
                                              be retried. Some errors may indicate
                                              the client must take an alternate action
                                              - for those errors this field may indicate
                                              how long to wait before taking the alternate
                                              action.
                                            format: int32
                                            type: integer
                                          uid:
                                            description: 'UID of the resource. (when
                                              there is a single resource which can
                                              be described). More info: http://kubernetes.io/docs/user-guide/identifiers#uids'
                                            type: string
                                      kind:
                                        description: 'Kind is a string value representing
                                          the REST resource this object represents.
                                          Servers may infer this from the endpoint
                                          the client submits requests to. Cannot be
                                          updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
                                        type: string
                                      message:
                                        description: A human-readable description
                                          of the status of this operation.
                                        type: string
                                      metadata:
                                        description: ListMeta describes metadata that
                                          synthetic resources must have, including
                                          lists and various status objects. A resource
                                          may have only one of {ObjectMeta, ListMeta}.
                                        properties:
                                          continue:
                                            description: continue may be set if the
                                              user set a limit on the number of items
                                              returned, and indicates that the server
                                              has more data available. The value is
                                              opaque and may be used to issue another
                                              request to the endpoint that served
                                              this list to retrieve the next set of
                                              available objects. Continuing a consistent
                                              list may not be possible if the server
                                              configuration has changed or more than
                                              a few minutes have passed. The resourceVersion
                                              field returned when using this continue
                                              value will be identical to the value
                                              in the first response, unless you have
                                              received this token from an error message.
                                            type: string
                                          resourceVersion:
                                            description: 'String that identifies the
                                              server''s internal version of this object
                                              that can be used by clients to determine
                                              when objects have changed. Value must
                                              be treated as opaque by clients and
                                              passed unmodified back to the server.
                                              Populated by the system. Read-only.
                                              More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency'
                                            type: string
                                          selfLink:
                                            description: selfLink is a URL representing
                                              this object. Populated by the system.
                                              Read-only.
                                            type: string
                                      reason:
                                        description: A machine-readable description
                                          of why this operation is in the "Failure"
                                          status. If this value is empty there is
                                          no information available. A Reason clarifies
                                          an HTTP status code but does not override
                                          it.
                                        type: string
                                      status:
                                        description: 'Status of the operation. One
                                          of: "Success" or "Failure". More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status'
                                        type: string
                                required:
                                - pending
                              labels:
                                description: 'Map of string keys and values that can
                                  be used to organize and categorize (scope and select)
                                  objects. May match selectors of replication controllers
                                  and services. More info: http://kubernetes.io/docs/user-guide/labels'
                                type: object
                              name:
                                description: 'Name must be unique within a namespace.
                                  Is required when creating resources, although some
                                  resources may allow a client to request the generation
                                  of an appropriate name automatically. Name is primarily
                                  intended for creation idempotence and configuration
                                  definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names'
                                type: string
                              namespace:
                                description: |-
                                  Namespace defines the space within each name must be unique. An empty namespace is equivalent to the "default" namespace, but "default" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.

                                  Must be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces
                                type: string
                              ownerReferences:
                                description: List of objects depended by this object.
                                  If ALL objects in the list have been deleted, this
                                  object will be garbage collected. If this object
                                  is managed by a controller, then an entry in this
                                  list will point to this controller, with the controller
                                  field set to true. There cannot be more than one
                                  managing controller.
                                items:
                                  description: OwnerReference contains enough information
                                    to let you identify an owning object. Currently,
                                    an owning object must be in the same namespace,
                                    so there is no namespace field.
                                  properties:
                                    apiVersion:
                                      description: API version of the referent.
                                      type: string
                                    blockOwnerDeletion:
                                      description: If true, AND if the owner has the
                                        "foregroundDeletion" finalizer, then the owner
                                        cannot be deleted from the key-value store
                                        until this reference is removed. Defaults
                                        to false. To set this field, a user needs
                                        "delete" permission of the owner, otherwise
                                        422 (Unprocessable Entity) will be returned.
                                      type: boolean
                                    controller:
                                      description: If true, this reference points
                                        to the managing controller.
                                      type: boolean
                                    kind:
                                      description: 'Kind of the referent. More info:
                                        https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
                                      type: string
                                    name:
                                      description: 'Name of the referent. More info:
                                        http://kubernetes.io/docs/user-guide/identifiers#names'
                                      type: string
                                    uid:
                                      description: 'UID of the referent. More info:
                                        http://kubernetes.io/docs/user-guide/identifiers#uids'
                                      type: string
                                  required:
                                  - apiVersion
                                  - kind
                                  - name
                                  - uid
                                type: array
                              resourceVersion:
                                description: |-
                                  An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.

                                  Populated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency
                                type: string
                              selfLink:
                                description: SelfLink is a URL representing this object.
                                  Populated by the system. Read-only.
                                type: string
                              uid:
                                description: |-
                                  UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.

                                  Populated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids
                                type: string
                          spec:
                            description: PersistentVolumeClaimSpec describes the common
                              attributes of storage devices and allows a Source for
                              provider-specific attributes
                            properties:
                              accessModes:
                                description: 'AccessModes contains the desired access
                                  modes the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1'
                                items:
                                  type: string
                                type: array
                              dataSource:
                                description: TypedLocalObjectReference contains enough
                                  information to let you locate the typed referenced
                                  object inside the same namespace.
                                properties:
                                  apiGroup:
                                    description: APIGroup is the group for the resource
                                      being referenced. If APIGroup is not specified,
                                      the specified Kind must be in the core API group.
                                      For any other third-party types, APIGroup is
                                      required.
                                    type: string
                                  kind:
                                    description: Kind is the type of resource being
                                      referenced
                                    type: string
                                  name:
                                    description: Name is the name of resource being
                                      referenced
                                    type: string
                                required:
                                - kind
                                - name
                              resources:
                                description: ResourceRequirements describes the compute
                                  resource requirements.
                                properties:
                                  limits:
                                    description: 'Limits describes the maximum amount
                                      of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                                    type: object
                                  requests:
                                    description: 'Requests describes the minimum amount
                                      of compute resources required. If Requests is
                                      omitted for a container, it defaults to Limits
                                      if that is explicitly specified, otherwise to
                                      an implementation-defined value. More info:
                                      https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                                    type: object
                              selector:
                                description: A label selector is a label query over
                                  a set of resources. The result of matchLabels and
                                  matchExpressions are ANDed. An empty label selector
                                  matches all objects. A null label selector matches
                                  no objects.
                                properties:
                                  matchExpressions:
                                    description: matchExpressions is a list of label
                                      selector requirements. The requirements are
                                      ANDed.
                                    items:
                                      description: A label selector requirement is
                                        a selector that contains values, a key, and
                                        an operator that relates the key and values.
                                      properties:
                                        key:
                                          description: key is the label key that the
                                            selector applies to.
                                          type: string
                                        operator:
                                          description: operator represents a key's
                                            relationship to a set of values. Valid
                                            operators are In, NotIn, Exists and DoesNotExist.
                                          type: string
                                        values:
                                          description: values is an array of string
                                            values. If the operator is In or NotIn,
                                            the values array must be non-empty. If
                                            the operator is Exists or DoesNotExist,
                                            the values array must be empty. This array
                                            is replaced during a strategic merge patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                      - key
                                      - operator
                                    type: array
                                  matchLabels:
                                    description: matchLabels is a map of {key,value}
                                      pairs. A single {key,value} in the matchLabels
                                      map is equivalent to an element of matchExpressions,
                                      whose key field is "key", the operator is "In",
                                      and the values array contains only "value".
                                      The requirements are ANDed.
                                    type: object
                              storageClassName:
                                description: 'Name of the StorageClass required by
                                  the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1'
                                type: string
                              volumeMode:
                                description: volumeMode defines what type of volume
                                  is required by the claim. Value of Filesystem is
                                  implied when not included in claim spec. This is
                                  an alpha feature and may change in the future.
                                type: string
                              volumeName:
                                description: VolumeName is the binding reference to
                                  the PersistentVolume backing this claim.
                                type: string
                          status:
                            description: PersistentVolumeClaimStatus is the current
                              status of a persistent volume claim.
                            properties:
                              accessModes:
                                description: 'AccessModes contains the actual access
                                  modes the volume backing the PVC has. More info:
                                  https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1'
                                items:
                                  type: string
                                type: array
                              capacity:
                                description: Represents the actual resources of the
                                  underlying volume.
                                type: object
                              conditions:
                                description: Current Condition of persistent volume
                                  claim. If underlying persistent volume is being
                                  resized then the Condition will be set to 'ResizeStarted'.
                                items:
                                  description: PersistentVolumeClaimCondition contails
                                    details about state of pvc
                                  properties:
                                    lastProbeTime:
                                      description: Time is a wrapper around time.Time
                                        which supports correct marshaling to YAML
                                        and JSON.  Wrappers are provided for many
                                        of the factory methods that the time package
                                        offers.
                                      format: date-time
                                      type: string
                                    lastTransitionTime:
                                      description: Time is a wrapper around time.Time
                                        which supports correct marshaling to YAML
                                        and JSON.  Wrappers are provided for many
                                        of the factory methods that the time package
                                        offers.
                                      format: date-time
                                      type: string
                                    message:
                                      description: Human-readable message indicating
                                        details about last transition.
                                      type: string
                                    reason:
                                      description: Unique, this should be a short,
                                        machine understandable string that gives the
                                        reason for condition's last transition. If
                                        it reports "ResizeStarted" that means the
                                        underlying persistent volume is being resized.
                                      type: string
                                    status:
                                      type: string
                                    type:
                                      type: string
                                  required:
                                  - type
                                  - status
                                type: array
                              phase:
                                description: Phase represents the current phase of
                                  PersistentVolumeClaim.
                                type: string
                  tag:
                    description: Tag of Prometheus container image to be deployed.
                      Defaults to the value of `version`. Version is ignored if Tag
                      is set.
                    type: string
                  thanos:
                    description: ThanosSpec defines parameters for a Prometheus server
                      within a Thanos deployment.
                    properties:
                      baseImage:
                        description: Thanos base image if other than default.
                        type: string
                      gcs:
                        description: ThanosGCSSpec defines parameters for use of Google
                          Cloud Storage (GCS) with Thanos.
                        properties:
                          bucket:
                            description: Google Cloud Storage bucket name for stored
                              blocks. If empty it won't store any block inside Google
                              Cloud Storage.
                            type: string
                          credentials:
                            description: SecretKeySelector selects a key of a Secret.
                            properties:
                              key:
                                description: The key of the secret to select from.  Must
                                  be a valid secret key.
                                type: string
                              name:
                                description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                type: string
                              optional:
                                description: Specify whether the Secret or it's key
                                  must be defined
                                type: boolean
                            required:
                            - key
                      peers:
                        description: Peers is a DNS name for Thanos to discover peers
                          through.
                        type: string
                      resources:
                        description: ResourceRequirements describes the compute resource
                          requirements.
                        properties:
                          limits:
                            description: 'Limits describes the maximum amount of compute
                              resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                            type: object
                          requests:
                            description: 'Requests describes the minimum amount of
                              compute resources required. If Requests is omitted for
                              a container, it defaults to Limits if that is explicitly
                              specified, otherwise to an implementation-defined value.
                              More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                            type: object
                      s3:
                        description: ThanosS3Spec defines parameters for of AWS Simple
                          Storage Service (S3) with Thanos. (S3 compatible services
                          apply as well)
                        properties:
                          accessKey:
                            description: SecretKeySelector selects a key of a Secret.
                            properties:
                              key:
                                description: The key of the secret to select from.  Must
                                  be a valid secret key.
                                type: string
                              name:
                                description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                type: string
                              optional:
                                description: Specify whether the Secret or it's key
                                  must be defined
                                type: boolean
                            required:
                            - key
                          bucket:
                            description: S3-Compatible API bucket name for stored
                              blocks.
                            type: string
                          encryptsse:
                            description: Whether to use Server Side Encryption
                            type: boolean
                          endpoint:
                            description: S3-Compatible API endpoint for stored blocks.
                            type: string
                          insecure:
                            description: Whether to use an insecure connection with
                              an S3-Compatible API.
                            type: boolean
                          secretKey:
                            description: SecretKeySelector selects a key of a Secret.
                            properties:
                              key:
                                description: The key of the secret to select from.  Must
                                  be a valid secret key.
                                type: string
                              name:
                                description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                type: string
                              optional:
                                description: Specify whether the Secret or it's key
                                  must be defined
                                type: boolean
                            required:
                            - key
                          signatureVersion2:
                            description: Whether to use S3 Signature Version 2; otherwise
                              Signature Version 4 will be used.
                            type: boolean
                      sha:
                        description: SHA of Thanos container image to be deployed.
                          Defaults to the value of `version`. Similar to a tag, but
                          the SHA explicitly deploys an immutable container image.
                          Version and Tag are ignored if SHA is set.
                        type: string
                      tag:
                        description: Tag of Thanos sidecar container image to be deployed.
                          Defaults to the value of `version`. Version is ignored if
                          Tag is set.
                        type: string
                      version:
                        description: Version describes the version of Thanos to use.
                        type: string
                  tolerations:
                    description: If specified, the pod's tolerations.
                    items:
                      description: The pod this Toleration is attached to tolerates
                        any taint that matches the triple <key,value,effect> using
                        the matching operator <operator>.
                      properties:
                        effect:
                          description: Effect indicates the taint effect to match.
                            Empty means match all taint effects. When specified, allowed
                            values are NoSchedule, PreferNoSchedule and NoExecute.
                          type: string
                        key:
                          description: Key is the taint key that the toleration applies
                            to. Empty means match all taint keys. If the key is empty,
                            operator must be Exists; this combination means to match
                            all values and all keys.
                          type: string
                        operator:
                          description: Operator represents a key's relationship to
                            the value. Valid operators are Exists and Equal. Defaults
                            to Equal. Exists is equivalent to wildcard for value,
                            so that a pod can tolerate all taints of a particular
                            category.
                          type: string
                        tolerationSeconds:
                          description: TolerationSeconds represents the period of
                            time the toleration (which must be of effect NoExecute,
                            otherwise this field is ignored) tolerates the taint.
                            By default, it is not set, which means tolerate the taint
                            forever (do not evict). Zero and negative values will
                            be treated as 0 (evict immediately) by the system.
                          format: int64
                          type: integer
                        value:
                          description: Value is the taint value the toleration matches
                            to. If the operator is Exists, the value should be empty,
                            otherwise just a regular string.
                          type: string
                    type: array
                  version:
                    description: Version of Prometheus to be deployed.
                    type: string
              status:
                description: 'PrometheusStatus is the most recent observed status
                  of the Prometheus cluster. Read-only. Not included when requesting
                  from the apiserver, only from the Prometheus Operator API itself.
                  More info: https://github.com/kubernetes/community/blob/master/contributors/devel/api-conventions.md#spec-and-status'
                properties:
                  availableReplicas:
                    description: Total number of available pods (ready for at least
                      minReadySeconds) targeted by this Prometheus deployment.
                    format: int32
                    type: integer
                  paused:
                    description: Represents whether any actions on the underlaying
                      managed objects are being performed. Only delete actions will
                      be performed.
                    type: boolean
                  replicas:
                    description: Total number of non-terminated pods targeted by this
                      Prometheus deployment (their labels match the selector).
                    format: int32
                    type: integer
                  unavailableReplicas:
                    description: Total number of unavailable pods targeted by this
                      Prometheus deployment.
                    format: int32
                    type: integer
                  updatedReplicas:
                    description: Total number of non-terminated pods targeted by this
                      Prometheus deployment that have the desired version spec.
                    format: int32
                    type: integer
                required:
                - paused
                - replicas
                - updatedReplicas
                - availableReplicas
                - unavailableReplicas
        version: v1
  - name: prometheus-k8s-prometheus-rules-crd
    object:
      apiVersion: apiextensions.k8s.io/v1beta1
      kind: CustomResourceDefinition
      metadata:
        name: prometheusrules.monitoring.coreos.com
      spec:
        group: monitoring.coreos.com
        names:
          kind: PrometheusRule
          plural: prometheusrules
        scope: Namespaced
        validation:
          openAPIV3Schema:
            properties:
              apiVersion:
                description: 'APIVersion defines the versioned schema of this representation
                  of an object. Servers should convert recognized schemas to the latest
                  internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
                type: string
              kind:
                description: 'Kind is a string value representing the REST resource
                  this object represents. Servers may infer this from the endpoint
                  the client submits requests to. Cannot be updated. In CamelCase.
                  More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
                type: string
              metadata:
                description: ObjectMeta is metadata that all persisted resources must
                  have, which includes all objects users must create.
                properties:
                  annotations:
                    description: 'Annotations is an unstructured key value map stored
                      with a resource that may be set by external tools to store and
                      retrieve arbitrary metadata. They are not queryable and should
                      be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations'
                    type: object
                  clusterName:
                    description: The name of the cluster which the object belongs
                      to. This is used to distinguish resources with same name and
                      namespace in different clusters. This field is not set anywhere
                      right now and apiserver is going to ignore it if set in create
                      or update request.
                    type: string
                  creationTimestamp:
                    description: Time is a wrapper around time.Time which supports
                      correct marshaling to YAML and JSON.  Wrappers are provided
                      for many of the factory methods that the time package offers.
                    format: date-time
                    type: string
                  deletionGracePeriodSeconds:
                    description: Number of seconds allowed for this object to gracefully
                      terminate before it will be removed from the system. Only set
                      when deletionTimestamp is also set. May only be shortened. Read-only.
                    format: int64
                    type: integer
                  deletionTimestamp:
                    description: Time is a wrapper around time.Time which supports
                      correct marshaling to YAML and JSON.  Wrappers are provided
                      for many of the factory methods that the time package offers.
                    format: date-time
                    type: string
                  finalizers:
                    description: Must be empty before the object is deleted from the
                      registry. Each entry is an identifier for the responsible component
                      that will remove the entry from the list. If the deletionTimestamp
                      of the object is non-nil, entries in this list can only be removed.
                    items:
                      type: string
                    type: array
                  generateName:
                    description: |-
                      GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.

                      If this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).

                      Applied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#idempotency
                    type: string
                  generation:
                    description: A sequence number representing a specific generation
                      of the desired state. Populated by the system. Read-only.
                    format: int64
                    type: integer
                  initializers:
                    description: Initializers tracks the progress of initialization.
                    properties:
                      pending:
                        description: Pending is a list of initializers that must execute
                          in order before this object is visible. When the last pending
                          initializer is removed, and no failing result is set, the
                          initializers struct will be set to nil and the object is
                          considered as initialized and visible to all clients.
                        items:
                          description: Initializer is information about an initializer
                            that has not yet completed.
                          properties:
                            name:
                              description: name of the process that is responsible
                                for initializing this object.
                              type: string
                          required:
                          - name
                        type: array
                      result:
                        description: Status is a return value for calls that don't
                          return other objects.
                        properties:
                          apiVersion:
                            description: 'APIVersion defines the versioned schema
                              of this representation of an object. Servers should
                              convert recognized schemas to the latest internal value,
                              and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
                            type: string
                          code:
                            description: Suggested HTTP return code for this status,
                              0 if not set.
                            format: int32
                            type: integer
                          details:
                            description: StatusDetails is a set of additional properties
                              that MAY be set by the server to provide additional
                              information about a response. The Reason field of a
                              Status object defines what attributes will be set. Clients
                              must ignore fields that do not match the defined type
                              of each attribute, and should assume that any attribute
                              may be empty, invalid, or under defined.
                            properties:
                              causes:
                                description: The Causes array includes more details
                                  associated with the StatusReason failure. Not all
                                  StatusReasons may provide detailed causes.
                                items:
                                  description: StatusCause provides more information
                                    about an api.Status failure, including cases when
                                    multiple errors are encountered.
                                  properties:
                                    field:
                                      description: |-
                                        The field of the resource that has caused this error, as named by its JSON serialization. May include dot and postfix notation for nested attributes. Arrays are zero-indexed.  Fields may appear more than once in an array of causes due to fields having multiple errors. Optional.

                                        Examples:
                                          "name" - the field "name" on the current resource
                                          "items[0].name" - the field "name" on the first array entry in "items"
                                      type: string
                                    message:
                                      description: A human-readable description of
                                        the cause of the error.  This field may be
                                        presented as-is to a reader.
                                      type: string
                                    reason:
                                      description: A machine-readable description
                                        of the cause of the error. If this value is
                                        empty there is no information available.
                                      type: string
                                type: array
                              group:
                                description: The group attribute of the resource associated
                                  with the status StatusReason.
                                type: string
                              kind:
                                description: 'The kind attribute of the resource associated
                                  with the status StatusReason. On some operations
                                  may differ from the requested resource Kind. More
                                  info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
                                type: string
                              name:
                                description: The name attribute of the resource associated
                                  with the status StatusReason (when there is a single
                                  name which can be described).
                                type: string
                              retryAfterSeconds:
                                description: If specified, the time in seconds before
                                  the operation should be retried. Some errors may
                                  indicate the client must take an alternate action
                                  - for those errors this field may indicate how long
                                  to wait before taking the alternate action.
                                format: int32
                                type: integer
                              uid:
                                description: 'UID of the resource. (when there is
                                  a single resource which can be described). More
                                  info: http://kubernetes.io/docs/user-guide/identifiers#uids'
                                type: string
                          kind:
                            description: 'Kind is a string value representing the
                              REST resource this object represents. Servers may infer
                              this from the endpoint the client submits requests to.
                              Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
                            type: string
                          message:
                            description: A human-readable description of the status
                              of this operation.
                            type: string
                          metadata:
                            description: ListMeta describes metadata that synthetic
                              resources must have, including lists and various status
                              objects. A resource may have only one of {ObjectMeta,
                              ListMeta}.
                            properties:
                              continue:
                                description: continue may be set if the user set a
                                  limit on the number of items returned, and indicates
                                  that the server has more data available. The value
                                  is opaque and may be used to issue another request
                                  to the endpoint that served this list to retrieve
                                  the next set of available objects. Continuing a
                                  consistent list may not be possible if the server
                                  configuration has changed or more than a few minutes
                                  have passed. The resourceVersion field returned
                                  when using this continue value will be identical
                                  to the value in the first response, unless you have
                                  received this token from an error message.
                                type: string
                              resourceVersion:
                                description: 'String that identifies the server''s
                                  internal version of this object that can be used
                                  by clients to determine when objects have changed.
                                  Value must be treated as opaque by clients and passed
                                  unmodified back to the server. Populated by the
                                  system. Read-only. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency'
                                type: string
                              selfLink:
                                description: selfLink is a URL representing this object.
                                  Populated by the system. Read-only.
                                type: string
                          reason:
                            description: A machine-readable description of why this
                              operation is in the "Failure" status. If this value
                              is empty there is no information available. A Reason
                              clarifies an HTTP status code but does not override
                              it.
                            type: string
                          status:
                            description: 'Status of the operation. One of: "Success"
                              or "Failure". More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status'
                            type: string
                    required:
                    - pending
                  labels:
                    description: 'Map of string keys and values that can be used to
                      organize and categorize (scope and select) objects. May match
                      selectors of replication controllers and services. More info:
                      http://kubernetes.io/docs/user-guide/labels'
                    type: object
                  name:
                    description: 'Name must be unique within a namespace. Is required
                      when creating resources, although some resources may allow a
                      client to request the generation of an appropriate name automatically.
                      Name is primarily intended for creation idempotence and configuration
                      definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names'
                    type: string
                  namespace:
                    description: |-
                      Namespace defines the space within each name must be unique. An empty namespace is equivalent to the "default" namespace, but "default" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.

                      Must be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces
                    type: string
                  ownerReferences:
                    description: List of objects depended by this object. If ALL objects
                      in the list have been deleted, this object will be garbage collected.
                      If this object is managed by a controller, then an entry in
                      this list will point to this controller, with the controller
                      field set to true. There cannot be more than one managing controller.
                    items:
                      description: OwnerReference contains enough information to let
                        you identify an owning object. Currently, an owning object
                        must be in the same namespace, so there is no namespace field.
                      properties:
                        apiVersion:
                          description: API version of the referent.
                          type: string
                        blockOwnerDeletion:
                          description: If true, AND if the owner has the "foregroundDeletion"
                            finalizer, then the owner cannot be deleted from the key-value
                            store until this reference is removed. Defaults to false.
                            To set this field, a user needs "delete" permission of
                            the owner, otherwise 422 (Unprocessable Entity) will be
                            returned.
                          type: boolean
                        controller:
                          description: If true, this reference points to the managing
                            controller.
                          type: boolean
                        kind:
                          description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
                          type: string
                        name:
                          description: 'Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names'
                          type: string
                        uid:
                          description: 'UID of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#uids'
                          type: string
                      required:
                      - apiVersion
                      - kind
                      - name
                      - uid
                    type: array
                  resourceVersion:
                    description: |-
                      An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.

                      Populated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency
                    type: string
                  selfLink:
                    description: SelfLink is a URL representing this object. Populated
                      by the system. Read-only.
                    type: string
                  uid:
                    description: |-
                      UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.

                      Populated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids
                    type: string
              spec:
                description: PrometheusRuleSpec contains specification parameters
                  for a Rule.
                properties:
                  groups:
                    description: Content of Prometheus rule file
                    items:
                      description: RuleGroup is a list of sequentially evaluated recording
                        and alerting rules.
                      properties:
                        interval:
                          type: string
                        name:
                          type: string
                        rules:
                          items:
                            description: Rule describes an alerting or recording rule.
                            properties:
                              alert:
                                type: string
                              annotations:
                                type: object
                              expr:
                                anyOf:
                                - type: string
                                - type: integer
                              for:
                                type: string
                              labels:
                                type: object
                              record:
                                type: string
                            required:
                            - expr
                          type: array
                      required:
                      - name
                      - rules
                    type: array
        version: v1
  - name: alertmanager-crd
    object:
      apiVersion: apiextensions.k8s.io/v1beta1
      kind: CustomResourceDefinition
      metadata:
        name: alertmanagers.monitoring.coreos.com
      spec:
        group: monitoring.coreos.com
        names:
          kind: Alertmanager
          plural: alertmanagers
        scope: Namespaced
        validation:
          openAPIV3Schema:
            properties:
              apiVersion:
                description: 'APIVersion defines the versioned schema of this representation
                  of an object. Servers should convert recognized schemas to the latest
                  internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
                type: string
              kind:
                description: 'Kind is a string value representing the REST resource
                  this object represents. Servers may infer this from the endpoint
                  the client submits requests to. Cannot be updated. In CamelCase.
                  More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
                type: string
              spec:
                description: 'AlertmanagerSpec is a specification of the desired behavior
                  of the Alertmanager cluster. More info: https://github.com/kubernetes/community/blob/master/contributors/devel/api-conventions.md#spec-and-status'
                properties:
                  additionalPeers:
                    description: AdditionalPeers allows injecting a set of additional
                      Alertmanagers to peer with to form a highly available cluster.
                    items:
                      type: string
                    type: array
                  affinity:
                    description: Affinity is a group of affinity scheduling rules.
                    properties:
                      nodeAffinity:
                        description: Node affinity is a group of node affinity scheduling
                          rules.
                        properties:
                          preferredDuringSchedulingIgnoredDuringExecution:
                            description: The scheduler will prefer to schedule pods
                              to nodes that satisfy the affinity expressions specified
                              by this field, but it may choose a node that violates
                              one or more of the expressions. The node that is most
                              preferred is the one with the greatest sum of weights,
                              i.e. for each node that meets all of the scheduling
                              requirements (resource request, requiredDuringScheduling
                              affinity expressions, etc.), compute a sum by iterating
                              through the elements of this field and adding "weight"
                              to the sum if the node matches the corresponding matchExpressions;
                              the node(s) with the highest sum are the most preferred.
                            items:
                              description: An empty preferred scheduling term matches
                                all objects with implicit weight 0 (i.e. it's a no-op).
                                A null preferred scheduling term matches no objects
                                (i.e. is also a no-op).
                              properties:
                                preference:
                                  description: A null or empty node selector term
                                    matches no objects. The requirements of them are
                                    ANDed. The TopologySelectorTerm type implements
                                    a subset of the NodeSelectorTerm.
                                  properties:
                                    matchExpressions:
                                      description: A list of node selector requirements
                                        by node's labels.
                                      items:
                                        description: A node selector requirement is
                                          a selector that contains values, a key,
                                          and an operator that relates the key and
                                          values.
                                        properties:
                                          key:
                                            description: The label key that the selector
                                              applies to.
                                            type: string
                                          operator:
                                            description: Represents a key's relationship
                                              to a set of values. Valid operators
                                              are In, NotIn, Exists, DoesNotExist.
                                              Gt, and Lt.
                                            type: string
                                          values:
                                            description: An array of string values.
                                              If the operator is In or NotIn, the
                                              values array must be non-empty. If the
                                              operator is Exists or DoesNotExist,
                                              the values array must be empty. If the
                                              operator is Gt or Lt, the values array
                                              must have a single element, which will
                                              be interpreted as an integer. This array
                                              is replaced during a strategic merge
                                              patch.
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                      type: array
                                    matchFields:
                                      description: A list of node selector requirements
                                        by node's fields.
                                      items:
                                        description: A node selector requirement is
                                          a selector that contains values, a key,
                                          and an operator that relates the key and
                                          values.
                                        properties:
                                          key:
                                            description: The label key that the selector
                                              applies to.
                                            type: string
                                          operator:
                                            description: Represents a key's relationship
                                              to a set of values. Valid operators
                                              are In, NotIn, Exists, DoesNotExist.
                                              Gt, and Lt.
                                            type: string
                                          values:
                                            description: An array of string values.
                                              If the operator is In or NotIn, the
                                              values array must be non-empty. If the
                                              operator is Exists or DoesNotExist,
                                              the values array must be empty. If the
                                              operator is Gt or Lt, the values array
                                              must have a single element, which will
                                              be interpreted as an integer. This array
                                              is replaced during a strategic merge
                                              patch.
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                      type: array
                                weight:
                                  description: Weight associated with matching the
                                    corresponding nodeSelectorTerm, in the range 1-100.
                                  format: int32
                                  type: integer
                              required:
                              - weight
                              - preference
                            type: array
                          requiredDuringSchedulingIgnoredDuringExecution:
                            description: A node selector represents the union of the
                              results of one or more label queries over a set of nodes;
                              that is, it represents the OR of the selectors represented
                              by the node selector terms.
                            properties:
                              nodeSelectorTerms:
                                description: Required. A list of node selector terms.
                                  The terms are ORed.
                                items:
                                  description: A null or empty node selector term
                                    matches no objects. The requirements of them are
                                    ANDed. The TopologySelectorTerm type implements
                                    a subset of the NodeSelectorTerm.
                                  properties:
                                    matchExpressions:
                                      description: A list of node selector requirements
                                        by node's labels.
                                      items:
                                        description: A node selector requirement is
                                          a selector that contains values, a key,
                                          and an operator that relates the key and
                                          values.
                                        properties:
                                          key:
                                            description: The label key that the selector
                                              applies to.
                                            type: string
                                          operator:
                                            description: Represents a key's relationship
                                              to a set of values. Valid operators
                                              are In, NotIn, Exists, DoesNotExist.
                                              Gt, and Lt.
                                            type: string
                                          values:
                                            description: An array of string values.
                                              If the operator is In or NotIn, the
                                              values array must be non-empty. If the
                                              operator is Exists or DoesNotExist,
                                              the values array must be empty. If the
                                              operator is Gt or Lt, the values array
                                              must have a single element, which will
                                              be interpreted as an integer. This array
                                              is replaced during a strategic merge
                                              patch.
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                      type: array
                                    matchFields:
                                      description: A list of node selector requirements
                                        by node's fields.
                                      items:
                                        description: A node selector requirement is
                                          a selector that contains values, a key,
                                          and an operator that relates the key and
                                          values.
                                        properties:
                                          key:
                                            description: The label key that the selector
                                              applies to.
                                            type: string
                                          operator:
                                            description: Represents a key's relationship
                                              to a set of values. Valid operators
                                              are In, NotIn, Exists, DoesNotExist.
                                              Gt, and Lt.
                                            type: string
                                          values:
                                            description: An array of string values.
                                              If the operator is In or NotIn, the
                                              values array must be non-empty. If the
                                              operator is Exists or DoesNotExist,
                                              the values array must be empty. If the
                                              operator is Gt or Lt, the values array
                                              must have a single element, which will
                                              be interpreted as an integer. This array
                                              is replaced during a strategic merge
                                              patch.
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                      type: array
                                type: array
                            required:
                            - nodeSelectorTerms
                      podAffinity:
                        description: Pod affinity is a group of inter pod affinity
                          scheduling rules.
                        properties:
                          preferredDuringSchedulingIgnoredDuringExecution:
                            description: The scheduler will prefer to schedule pods
                              to nodes that satisfy the affinity expressions specified
                              by this field, but it may choose a node that violates
                              one or more of the expressions. The node that is most
                              preferred is the one with the greatest sum of weights,
                              i.e. for each node that meets all of the scheduling
                              requirements (resource request, requiredDuringScheduling
                              affinity expressions, etc.), compute a sum by iterating
                              through the elements of this field and adding "weight"
                              to the sum if the node has pods which matches the corresponding
                              podAffinityTerm; the node(s) with the highest sum are
                              the most preferred.
                            items:
                              description: The weights of all of the matched WeightedPodAffinityTerm
                                fields are added per-node to find the most preferred
                                node(s)
                              properties:
                                podAffinityTerm:
                                  description: Defines a set of pods (namely those
                                    matching the labelSelector relative to the given
                                    namespace(s)) that this pod should be co-located
                                    (affinity) or not co-located (anti-affinity) with,
                                    where co-located is defined as running on a node
                                    whose value of the label with key <topologyKey>
                                    matches that of any node on which a pod of the
                                    set of pods is running
                                  properties:
                                    labelSelector:
                                      description: A label selector is a label query
                                        over a set of resources. The result of matchLabels
                                        and matchExpressions are ANDed. An empty label
                                        selector matches all objects. A null label
                                        selector matches no objects.
                                      properties:
                                        matchExpressions:
                                          description: matchExpressions is a list
                                            of label selector requirements. The requirements
                                            are ANDed.
                                          items:
                                            description: A label selector requirement
                                              is a selector that contains values,
                                              a key, and an operator that relates
                                              the key and values.
                                            properties:
                                              key:
                                                description: key is the label key
                                                  that the selector applies to.
                                                type: string
                                              operator:
                                                description: operator represents a
                                                  key's relationship to a set of values.
                                                  Valid operators are In, NotIn, Exists
                                                  and DoesNotExist.
                                                type: string
                                              values:
                                                description: values is an array of
                                                  string values. If the operator is
                                                  In or NotIn, the values array must
                                                  be non-empty. If the operator is
                                                  Exists or DoesNotExist, the values
                                                  array must be empty. This array
                                                  is replaced during a strategic merge
                                                  patch.
                                                items:
                                                  type: string
                                                type: array
                                            required:
                                            - key
                                            - operator
                                          type: array
                                        matchLabels:
                                          description: matchLabels is a map of {key,value}
                                            pairs. A single {key,value} in the matchLabels
                                            map is equivalent to an element of matchExpressions,
                                            whose key field is "key", the operator
                                            is "In", and the values array contains
                                            only "value". The requirements are ANDed.
                                          type: object
                                    namespaces:
                                      description: namespaces specifies which namespaces
                                        the labelSelector applies to (matches against);
                                        null or empty list means "this pod's namespace"
                                      items:
                                        type: string
                                      type: array
                                    topologyKey:
                                      description: This pod should be co-located (affinity)
                                        or not co-located (anti-affinity) with the
                                        pods matching the labelSelector in the specified
                                        namespaces, where co-located is defined as
                                        running on a node whose value of the label
                                        with key topologyKey matches that of any node
                                        on which any of the selected pods is running.
                                        Empty topologyKey is not allowed.
                                      type: string
                                  required:
                                  - topologyKey
                                weight:
                                  description: weight associated with matching the
                                    corresponding podAffinityTerm, in the range 1-100.
                                  format: int32
                                  type: integer
                              required:
                              - weight
                              - podAffinityTerm
                            type: array
                          requiredDuringSchedulingIgnoredDuringExecution:
                            description: If the affinity requirements specified by
                              this field are not met at scheduling time, the pod will
                              not be scheduled onto the node. If the affinity requirements
                              specified by this field cease to be met at some point
                              during pod execution (e.g. due to a pod label update),
                              the system may or may not try to eventually evict the
                              pod from its node. When there are multiple elements,
                              the lists of nodes corresponding to each podAffinityTerm
                              are intersected, i.e. all terms must be satisfied.
                            items:
                              description: Defines a set of pods (namely those matching
                                the labelSelector relative to the given namespace(s))
                                that this pod should be co-located (affinity) or not
                                co-located (anti-affinity) with, where co-located
                                is defined as running on a node whose value of the
                                label with key <topologyKey> matches that of any node
                                on which a pod of the set of pods is running
                              properties:
                                labelSelector:
                                  description: A label selector is a label query over
                                    a set of resources. The result of matchLabels
                                    and matchExpressions are ANDed. An empty label
                                    selector matches all objects. A null label selector
                                    matches no objects.
                                  properties:
                                    matchExpressions:
                                      description: matchExpressions is a list of label
                                        selector requirements. The requirements are
                                        ANDed.
                                      items:
                                        description: A label selector requirement
                                          is a selector that contains values, a key,
                                          and an operator that relates the key and
                                          values.
                                        properties:
                                          key:
                                            description: key is the label key that
                                              the selector applies to.
                                            type: string
                                          operator:
                                            description: operator represents a key's
                                              relationship to a set of values. Valid
                                              operators are In, NotIn, Exists and
                                              DoesNotExist.
                                            type: string
                                          values:
                                            description: values is an array of string
                                              values. If the operator is In or NotIn,
                                              the values array must be non-empty.
                                              If the operator is Exists or DoesNotExist,
                                              the values array must be empty. This
                                              array is replaced during a strategic
                                              merge patch.
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                      type: array
                                    matchLabels:
                                      description: matchLabels is a map of {key,value}
                                        pairs. A single {key,value} in the matchLabels
                                        map is equivalent to an element of matchExpressions,
                                        whose key field is "key", the operator is
                                        "In", and the values array contains only "value".
                                        The requirements are ANDed.
                                      type: object
                                namespaces:
                                  description: namespaces specifies which namespaces
                                    the labelSelector applies to (matches against);
                                    null or empty list means "this pod's namespace"
                                  items:
                                    type: string
                                  type: array
                                topologyKey:
                                  description: This pod should be co-located (affinity)
                                    or not co-located (anti-affinity) with the pods
                                    matching the labelSelector in the specified namespaces,
                                    where co-located is defined as running on a node
                                    whose value of the label with key topologyKey
                                    matches that of any node on which any of the selected
                                    pods is running. Empty topologyKey is not allowed.
                                  type: string
                              required:
                              - topologyKey
                            type: array
                      podAntiAffinity:
                        description: Pod anti affinity is a group of inter pod anti
                          affinity scheduling rules.
                        properties:
                          preferredDuringSchedulingIgnoredDuringExecution:
                            description: The scheduler will prefer to schedule pods
                              to nodes that satisfy the anti-affinity expressions
                              specified by this field, but it may choose a node that
                              violates one or more of the expressions. The node that
                              is most preferred is the one with the greatest sum of
                              weights, i.e. for each node that meets all of the scheduling
                              requirements (resource request, requiredDuringScheduling
                              anti-affinity expressions, etc.), compute a sum by iterating
                              through the elements of this field and adding "weight"
                              to the sum if the node has pods which matches the corresponding
                              podAffinityTerm; the node(s) with the highest sum are
                              the most preferred.
                            items:
                              description: The weights of all of the matched WeightedPodAffinityTerm
                                fields are added per-node to find the most preferred
                                node(s)
                              properties:
                                podAffinityTerm:
                                  description: Defines a set of pods (namely those
                                    matching the labelSelector relative to the given
                                    namespace(s)) that this pod should be co-located
                                    (affinity) or not co-located (anti-affinity) with,
                                    where co-located is defined as running on a node
                                    whose value of the label with key <topologyKey>
                                    matches that of any node on which a pod of the
                                    set of pods is running
                                  properties:
                                    labelSelector:
                                      description: A label selector is a label query
                                        over a set of resources. The result of matchLabels
                                        and matchExpressions are ANDed. An empty label
                                        selector matches all objects. A null label
                                        selector matches no objects.
                                      properties:
                                        matchExpressions:
                                          description: matchExpressions is a list
                                            of label selector requirements. The requirements
                                            are ANDed.
                                          items:
                                            description: A label selector requirement
                                              is a selector that contains values,
                                              a key, and an operator that relates
                                              the key and values.
                                            properties:
                                              key:
                                                description: key is the label key
                                                  that the selector applies to.
                                                type: string
                                              operator:
                                                description: operator represents a
                                                  key's relationship to a set of values.
                                                  Valid operators are In, NotIn, Exists
                                                  and DoesNotExist.
                                                type: string
                                              values:
                                                description: values is an array of
                                                  string values. If the operator is
                                                  In or NotIn, the values array must
                                                  be non-empty. If the operator is
                                                  Exists or DoesNotExist, the values
                                                  array must be empty. This array
                                                  is replaced during a strategic merge
                                                  patch.
                                                items:
                                                  type: string
                                                type: array
                                            required:
                                            - key
                                            - operator
                                          type: array
                                        matchLabels:
                                          description: matchLabels is a map of {key,value}
                                            pairs. A single {key,value} in the matchLabels
                                            map is equivalent to an element of matchExpressions,
                                            whose key field is "key", the operator
                                            is "In", and the values array contains
                                            only "value". The requirements are ANDed.
                                          type: object
                                    namespaces:
                                      description: namespaces specifies which namespaces
                                        the labelSelector applies to (matches against);
                                        null or empty list means "this pod's namespace"
                                      items:
                                        type: string
                                      type: array
                                    topologyKey:
                                      description: This pod should be co-located (affinity)
                                        or not co-located (anti-affinity) with the
                                        pods matching the labelSelector in the specified
                                        namespaces, where co-located is defined as
                                        running on a node whose value of the label
                                        with key topologyKey matches that of any node
                                        on which any of the selected pods is running.
                                        Empty topologyKey is not allowed.
                                      type: string
                                  required:
                                  - topologyKey
                                weight:
                                  description: weight associated with matching the
                                    corresponding podAffinityTerm, in the range 1-100.
                                  format: int32
                                  type: integer
                              required:
                              - weight
                              - podAffinityTerm
                            type: array
                          requiredDuringSchedulingIgnoredDuringExecution:
                            description: If the anti-affinity requirements specified
                              by this field are not met at scheduling time, the pod
                              will not be scheduled onto the node. If the anti-affinity
                              requirements specified by this field cease to be met
                              at some point during pod execution (e.g. due to a pod
                              label update), the system may or may not try to eventually
                              evict the pod from its node. When there are multiple
                              elements, the lists of nodes corresponding to each podAffinityTerm
                              are intersected, i.e. all terms must be satisfied.
                            items:
                              description: Defines a set of pods (namely those matching
                                the labelSelector relative to the given namespace(s))
                                that this pod should be co-located (affinity) or not
                                co-located (anti-affinity) with, where co-located
                                is defined as running on a node whose value of the
                                label with key <topologyKey> matches that of any node
                                on which a pod of the set of pods is running
                              properties:
                                labelSelector:
                                  description: A label selector is a label query over
                                    a set of resources. The result of matchLabels
                                    and matchExpressions are ANDed. An empty label
                                    selector matches all objects. A null label selector
                                    matches no objects.
                                  properties:
                                    matchExpressions:
                                      description: matchExpressions is a list of label
                                        selector requirements. The requirements are
                                        ANDed.
                                      items:
                                        description: A label selector requirement
                                          is a selector that contains values, a key,
                                          and an operator that relates the key and
                                          values.
                                        properties:
                                          key:
                                            description: key is the label key that
                                              the selector applies to.
                                            type: string
                                          operator:
                                            description: operator represents a key's
                                              relationship to a set of values. Valid
                                              operators are In, NotIn, Exists and
                                              DoesNotExist.
                                            type: string
                                          values:
                                            description: values is an array of string
                                              values. If the operator is In or NotIn,
                                              the values array must be non-empty.
                                              If the operator is Exists or DoesNotExist,
                                              the values array must be empty. This
                                              array is replaced during a strategic
                                              merge patch.
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                      type: array
                                    matchLabels:
                                      description: matchLabels is a map of {key,value}
                                        pairs. A single {key,value} in the matchLabels
                                        map is equivalent to an element of matchExpressions,
                                        whose key field is "key", the operator is
                                        "In", and the values array contains only "value".
                                        The requirements are ANDed.
                                      type: object
                                namespaces:
                                  description: namespaces specifies which namespaces
                                    the labelSelector applies to (matches against);
                                    null or empty list means "this pod's namespace"
                                  items:
                                    type: string
                                  type: array
                                topologyKey:
                                  description: This pod should be co-located (affinity)
                                    or not co-located (anti-affinity) with the pods
                                    matching the labelSelector in the specified namespaces,
                                    where co-located is defined as running on a node
                                    whose value of the label with key topologyKey
                                    matches that of any node on which any of the selected
                                    pods is running. Empty topologyKey is not allowed.
                                  type: string
                              required:
                              - topologyKey
                            type: array
                  baseImage:
                    description: Base image that is used to deploy pods, without tag.
                    type: string
                  configMaps:
                    description: ConfigMaps is a list of ConfigMaps in the same namespace
                      as the Alertmanager object, which shall be mounted into the
                      Alertmanager Pods. The ConfigMaps are mounted into /etc/alertmanager/configmaps/<configmap-name>.
                    items:
                      type: string
                    type: array
                  containers:
                    description: Containers allows injecting additional containers.
                      This is meant to allow adding an authentication proxy to an
                      Alertmanager pod.
                    items:
                      description: A single application container that you want to
                        run within a pod.
                      properties:
                        args:
                          description: 'Arguments to the entrypoint. The docker image''s
                            CMD is used if this is not provided. Variable references
                            $(VAR_NAME) are expanded using the container''s environment.
                            If a variable cannot be resolved, the reference in the
                            input string will be unchanged. The $(VAR_NAME) syntax
                            can be escaped with a double $$, ie: $$(VAR_NAME). Escaped
                            references will never be expanded, regardless of whether
                            the variable exists or not. Cannot be updated. More info:
                            https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell'
                          items:
                            type: string
                          type: array
                        command:
                          description: 'Entrypoint array. Not executed within a shell.
                            The docker image''s ENTRYPOINT is used if this is not
                            provided. Variable references $(VAR_NAME) are expanded
                            using the container''s environment. If a variable cannot
                            be resolved, the reference in the input string will be
                            unchanged. The $(VAR_NAME) syntax can be escaped with
                            a double $$, ie: $$(VAR_NAME). Escaped references will
                            never be expanded, regardless of whether the variable
                            exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell'
                          items:
                            type: string
                          type: array
                        env:
                          description: List of environment variables to set in the
                            container. Cannot be updated.
                          items:
                            description: EnvVar represents an environment variable
                              present in a Container.
                            properties:
                              name:
                                description: Name of the environment variable. Must
                                  be a C_IDENTIFIER.
                                type: string
                              value:
                                description: 'Variable references $(VAR_NAME) are
                                  expanded using the previous defined environment
                                  variables in the container and any service environment
                                  variables. If a variable cannot be resolved, the
                                  reference in the input string will be unchanged.
                                  The $(VAR_NAME) syntax can be escaped with a double
                                  $$, ie: $$(VAR_NAME). Escaped references will never
                                  be expanded, regardless of whether the variable
                                  exists or not. Defaults to "".'
                                type: string
                              valueFrom:
                                description: EnvVarSource represents a source for
                                  the value of an EnvVar.
                                properties:
                                  configMapKeyRef:
                                    description: Selects a key from a ConfigMap.
                                    properties:
                                      key:
                                        description: The key to select.
                                        type: string
                                      name:
                                        description: 'Name of the referent. More info:
                                          https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                        type: string
                                      optional:
                                        description: Specify whether the ConfigMap
                                          or it's key must be defined
                                        type: boolean
                                    required:
                                    - key
                                  fieldRef:
                                    description: ObjectFieldSelector selects an APIVersioned
                                      field of an object.
                                    properties:
                                      apiVersion:
                                        description: Version of the schema the FieldPath
                                          is written in terms of, defaults to "v1".
                                        type: string
                                      fieldPath:
                                        description: Path of the field to select in
                                          the specified API version.
                                        type: string
                                    required:
                                    - fieldPath
                                  resourceFieldRef:
                                    description: ResourceFieldSelector represents
                                      container resources (cpu, memory) and their
                                      output format
                                    properties:
                                      containerName:
                                        description: 'Container name: required for
                                          volumes, optional for env vars'
                                        type: string
                                      resource:
                                        description: 'Required: resource to select'
                                        type: string
                                    required:
                                    - resource
                                  secretKeyRef:
                                    description: SecretKeySelector selects a key of
                                      a Secret.
                                    properties:
                                      key:
                                        description: The key of the secret to select
                                          from.  Must be a valid secret key.
                                        type: string
                                      name:
                                        description: 'Name of the referent. More info:
                                          https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                        type: string
                                      optional:
                                        description: Specify whether the Secret or
                                          it's key must be defined
                                        type: boolean
                                    required:
                                    - key
                            required:
                            - name
                          type: array
                        envFrom:
                          description: List of sources to populate environment variables
                            in the container. The keys defined within a source must
                            be a C_IDENTIFIER. All invalid keys will be reported as
                            an event when the container is starting. When a key exists
                            in multiple sources, the value associated with the last
                            source will take precedence. Values defined by an Env
                            with a duplicate key will take precedence. Cannot be updated.
                          items:
                            description: EnvFromSource represents the source of a
                              set of ConfigMaps
                            properties:
                              configMapRef:
                                description: |-
                                  ConfigMapEnvSource selects a ConfigMap to populate the environment variables with.

                                  The contents of the target ConfigMap's Data field will represent the key-value pairs as environment variables.
                                properties:
                                  name:
                                    description: 'Name of the referent. More info:
                                      https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                    type: string
                                  optional:
                                    description: Specify whether the ConfigMap must
                                      be defined
                                    type: boolean
                              prefix:
                                description: An optional identifier to prepend to
                                  each key in the ConfigMap. Must be a C_IDENTIFIER.
                                type: string
                              secretRef:
                                description: |-
                                  SecretEnvSource selects a Secret to populate the environment variables with.

                                  The contents of the target Secret's Data field will represent the key-value pairs as environment variables.
                                properties:
                                  name:
                                    description: 'Name of the referent. More info:
                                      https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                    type: string
                                  optional:
                                    description: Specify whether the Secret must be
                                      defined
                                    type: boolean
                          type: array
                        image:
                          description: 'Docker image name. More info: https://kubernetes.io/docs/concepts/containers/images
                            This field is optional to allow higher level config management
                            to default or override container images in workload controllers
                            like Deployments and StatefulSets.'
                          type: string
                        imagePullPolicy:
                          description: 'Image pull policy. One of Always, Never, IfNotPresent.
                            Defaults to Always if :latest tag is specified, or IfNotPresent
                            otherwise. Cannot be updated. More info: https://kubernetes.io/docs/concepts/containers/images#updating-images'
                          type: string
                        lifecycle:
                          description: Lifecycle describes actions that the management
                            system should take in response to container lifecycle
                            events. For the PostStart and PreStop lifecycle handlers,
                            management of the container blocks until the action is
                            complete, unless the container process fails, in which
                            case the handler is aborted.
                          properties:
                            postStart:
                              description: Handler defines a specific action that
                                should be taken
                              properties:
                                exec:
                                  description: ExecAction describes a "run in container"
                                    action.
                                  properties:
                                    command:
                                      description: Command is the command line to
                                        execute inside the container, the working
                                        directory for the command  is root ('/') in
                                        the container's filesystem. The command is
                                        simply exec'd, it is not run inside a shell,
                                        so traditional shell instructions ('|', etc)
                                        won't work. To use a shell, you need to explicitly
                                        call out to that shell. Exit status of 0 is
                                        treated as live/healthy and non-zero is unhealthy.
                                      items:
                                        type: string
                                      type: array
                                httpGet:
                                  description: HTTPGetAction describes an action based
                                    on HTTP Get requests.
                                  properties:
                                    host:
                                      description: Host name to connect to, defaults
                                        to the pod IP. You probably want to set "Host"
                                        in httpHeaders instead.
                                      type: string
                                    httpHeaders:
                                      description: Custom headers to set in the request.
                                        HTTP allows repeated headers.
                                      items:
                                        description: HTTPHeader describes a custom
                                          header to be used in HTTP probes
                                        properties:
                                          name:
                                            description: The header field name
                                            type: string
                                          value:
                                            description: The header field value
                                            type: string
                                        required:
                                        - name
                                        - value
                                      type: array
                                    path:
                                      description: Path to access on the HTTP server.
                                      type: string
                                    port:
                                      anyOf:
                                      - type: string
                                      - type: integer
                                    scheme:
                                      description: Scheme to use for connecting to
                                        the host. Defaults to HTTP.
                                      type: string
                                  required:
                                  - port
                                tcpSocket:
                                  description: TCPSocketAction describes an action
                                    based on opening a socket
                                  properties:
                                    host:
                                      description: 'Optional: Host name to connect
                                        to, defaults to the pod IP.'
                                      type: string
                                    port:
                                      anyOf:
                                      - type: string
                                      - type: integer
                                  required:
                                  - port
                            preStop:
                              description: Handler defines a specific action that
                                should be taken
                              properties:
                                exec:
                                  description: ExecAction describes a "run in container"
                                    action.
                                  properties:
                                    command:
                                      description: Command is the command line to
                                        execute inside the container, the working
                                        directory for the command  is root ('/') in
                                        the container's filesystem. The command is
                                        simply exec'd, it is not run inside a shell,
                                        so traditional shell instructions ('|', etc)
                                        won't work. To use a shell, you need to explicitly
                                        call out to that shell. Exit status of 0 is
                                        treated as live/healthy and non-zero is unhealthy.
                                      items:
                                        type: string
                                      type: array
                                httpGet:
                                  description: HTTPGetAction describes an action based
                                    on HTTP Get requests.
                                  properties:
                                    host:
                                      description: Host name to connect to, defaults
                                        to the pod IP. You probably want to set "Host"
                                        in httpHeaders instead.
                                      type: string
                                    httpHeaders:
                                      description: Custom headers to set in the request.
                                        HTTP allows repeated headers.
                                      items:
                                        description: HTTPHeader describes a custom
                                          header to be used in HTTP probes
                                        properties:
                                          name:
                                            description: The header field name
                                            type: string
                                          value:
                                            description: The header field value
                                            type: string
                                        required:
                                        - name
                                        - value
                                      type: array
                                    path:
                                      description: Path to access on the HTTP server.
                                      type: string
                                    port:
                                      anyOf:
                                      - type: string
                                      - type: integer
                                    scheme:
                                      description: Scheme to use for connecting to
                                        the host. Defaults to HTTP.
                                      type: string
                                  required:
                                  - port
                                tcpSocket:
                                  description: TCPSocketAction describes an action
                                    based on opening a socket
                                  properties:
                                    host:
                                      description: 'Optional: Host name to connect
                                        to, defaults to the pod IP.'
                                      type: string
                                    port:
                                      anyOf:
                                      - type: string
                                      - type: integer
                                  required:
                                  - port
                        livenessProbe:
                          description: Probe describes a health check to be performed
                            against a container to determine whether it is alive or
                            ready to receive traffic.
                          properties:
                            exec:
                              description: ExecAction describes a "run in container"
                                action.
                              properties:
                                command:
                                  description: Command is the command line to execute
                                    inside the container, the working directory for
                                    the command  is root ('/') in the container's
                                    filesystem. The command is simply exec'd, it is
                                    not run inside a shell, so traditional shell instructions
                                    ('|', etc) won't work. To use a shell, you need
                                    to explicitly call out to that shell. Exit status
                                    of 0 is treated as live/healthy and non-zero is
                                    unhealthy.
                                  items:
                                    type: string
                                  type: array
                            failureThreshold:
                              description: Minimum consecutive failures for the probe
                                to be considered failed after having succeeded. Defaults
                                to 3. Minimum value is 1.
                              format: int32
                              type: integer
                            httpGet:
                              description: HTTPGetAction describes an action based
                                on HTTP Get requests.
                              properties:
                                host:
                                  description: Host name to connect to, defaults to
                                    the pod IP. You probably want to set "Host" in
                                    httpHeaders instead.
                                  type: string
                                httpHeaders:
                                  description: Custom headers to set in the request.
                                    HTTP allows repeated headers.
                                  items:
                                    description: HTTPHeader describes a custom header
                                      to be used in HTTP probes
                                    properties:
                                      name:
                                        description: The header field name
                                        type: string
                                      value:
                                        description: The header field value
                                        type: string
                                    required:
                                    - name
                                    - value
                                  type: array
                                path:
                                  description: Path to access on the HTTP server.
                                  type: string
                                port:
                                  anyOf:
                                  - type: string
                                  - type: integer
                                scheme:
                                  description: Scheme to use for connecting to the
                                    host. Defaults to HTTP.
                                  type: string
                              required:
                              - port
                            initialDelaySeconds:
                              description: 'Number of seconds after the container
                                has started before liveness probes are initiated.
                                More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                              format: int32
                              type: integer
                            periodSeconds:
                              description: How often (in seconds) to perform the probe.
                                Default to 10 seconds. Minimum value is 1.
                              format: int32
                              type: integer
                            successThreshold:
                              description: Minimum consecutive successes for the probe
                                to be considered successful after having failed. Defaults
                                to 1. Must be 1 for liveness. Minimum value is 1.
                              format: int32
                              type: integer
                            tcpSocket:
                              description: TCPSocketAction describes an action based
                                on opening a socket
                              properties:
                                host:
                                  description: 'Optional: Host name to connect to,
                                    defaults to the pod IP.'
                                  type: string
                                port:
                                  anyOf:
                                  - type: string
                                  - type: integer
                              required:
                              - port
                            timeoutSeconds:
                              description: 'Number of seconds after which the probe
                                times out. Defaults to 1 second. Minimum value is
                                1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                              format: int32
                              type: integer
                        name:
                          description: Name of the container specified as a DNS_LABEL.
                            Each container in a pod must have a unique name (DNS_LABEL).
                            Cannot be updated.
                          type: string
                        ports:
                          description: List of ports to expose from the container.
                            Exposing a port here gives the system additional information
                            about the network connections a container uses, but is
                            primarily informational. Not specifying a port here DOES
                            NOT prevent that port from being exposed. Any port which
                            is listening on the default "0.0.0.0" address inside a
                            container will be accessible from the network. Cannot
                            be updated.
                          items:
                            description: ContainerPort represents a network port in
                              a single container.
                            properties:
                              containerPort:
                                description: Number of port to expose on the pod's
                                  IP address. This must be a valid port number, 0
                                  < x < 65536.
                                format: int32
                                type: integer
                              hostIP:
                                description: What host IP to bind the external port
                                  to.
                                type: string
                              hostPort:
                                description: Number of port to expose on the host.
                                  If specified, this must be a valid port number,
                                  0 < x < 65536. If HostNetwork is specified, this
                                  must match ContainerPort. Most containers do not
                                  need this.
                                format: int32
                                type: integer
                              name:
                                description: If specified, this must be an IANA_SVC_NAME
                                  and unique within the pod. Each named port in a
                                  pod must have a unique name. Name for the port that
                                  can be referred to by services.
                                type: string
                              protocol:
                                description: Protocol for port. Must be UDP, TCP,
                                  or SCTP. Defaults to "TCP".
                                type: string
                            required:
                            - containerPort
                          type: array
                        readinessProbe:
                          description: Probe describes a health check to be performed
                            against a container to determine whether it is alive or
                            ready to receive traffic.
                          properties:
                            exec:
                              description: ExecAction describes a "run in container"
                                action.
                              properties:
                                command:
                                  description: Command is the command line to execute
                                    inside the container, the working directory for
                                    the command  is root ('/') in the container's
                                    filesystem. The command is simply exec'd, it is
                                    not run inside a shell, so traditional shell instructions
                                    ('|', etc) won't work. To use a shell, you need
                                    to explicitly call out to that shell. Exit status
                                    of 0 is treated as live/healthy and non-zero is
                                    unhealthy.
                                  items:
                                    type: string
                                  type: array
                            failureThreshold:
                              description: Minimum consecutive failures for the probe
                                to be considered failed after having succeeded. Defaults
                                to 3. Minimum value is 1.
                              format: int32
                              type: integer
                            httpGet:
                              description: HTTPGetAction describes an action based
                                on HTTP Get requests.
                              properties:
                                host:
                                  description: Host name to connect to, defaults to
                                    the pod IP. You probably want to set "Host" in
                                    httpHeaders instead.
                                  type: string
                                httpHeaders:
                                  description: Custom headers to set in the request.
                                    HTTP allows repeated headers.
                                  items:
                                    description: HTTPHeader describes a custom header
                                      to be used in HTTP probes
                                    properties:
                                      name:
                                        description: The header field name
                                        type: string
                                      value:
                                        description: The header field value
                                        type: string
                                    required:
                                    - name
                                    - value
                                  type: array
                                path:
                                  description: Path to access on the HTTP server.
                                  type: string
                                port:
                                  anyOf:
                                  - type: string
                                  - type: integer
                                scheme:
                                  description: Scheme to use for connecting to the
                                    host. Defaults to HTTP.
                                  type: string
                              required:
                              - port
                            initialDelaySeconds:
                              description: 'Number of seconds after the container
                                has started before liveness probes are initiated.
                                More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                              format: int32
                              type: integer
                            periodSeconds:
                              description: How often (in seconds) to perform the probe.
                                Default to 10 seconds. Minimum value is 1.
                              format: int32
                              type: integer
                            successThreshold:
                              description: Minimum consecutive successes for the probe
                                to be considered successful after having failed. Defaults
                                to 1. Must be 1 for liveness. Minimum value is 1.
                              format: int32
                              type: integer
                            tcpSocket:
                              description: TCPSocketAction describes an action based
                                on opening a socket
                              properties:
                                host:
                                  description: 'Optional: Host name to connect to,
                                    defaults to the pod IP.'
                                  type: string
                                port:
                                  anyOf:
                                  - type: string
                                  - type: integer
                              required:
                              - port
                            timeoutSeconds:
                              description: 'Number of seconds after which the probe
                                times out. Defaults to 1 second. Minimum value is
                                1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                              format: int32
                              type: integer
                        resources:
                          description: ResourceRequirements describes the compute
                            resource requirements.
                          properties:
                            limits:
                              description: 'Limits describes the maximum amount of
                                compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                              type: object
                            requests:
                              description: 'Requests describes the minimum amount
                                of compute resources required. If Requests is omitted
                                for a container, it defaults to Limits if that is
                                explicitly specified, otherwise to an implementation-defined
                                value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                              type: object
                        securityContext:
                          description: SecurityContext holds security configuration
                            that will be applied to a container. Some fields are present
                            in both SecurityContext and PodSecurityContext.  When
                            both are set, the values in SecurityContext take precedence.
                          properties:
                            allowPrivilegeEscalation:
                              description: 'AllowPrivilegeEscalation controls whether
                                a process can gain more privileges than its parent
                                process. This bool directly controls if the no_new_privs
                                flag will be set on the container process. AllowPrivilegeEscalation
                                is true always when the container is: 1) run as Privileged
                                2) has CAP_SYS_ADMIN'
                              type: boolean
                            capabilities:
                              description: Adds and removes POSIX capabilities from
                                running containers.
                              properties:
                                add:
                                  description: Added capabilities
                                  items:
                                    type: string
                                  type: array
                                drop:
                                  description: Removed capabilities
                                  items:
                                    type: string
                                  type: array
                            privileged:
                              description: Run container in privileged mode. Processes
                                in privileged containers are essentially equivalent
                                to root on the host. Defaults to false.
                              type: boolean
                            procMount:
                              description: procMount denotes the type of proc mount
                                to use for the containers. The default is DefaultProcMount
                                which uses the container runtime defaults for readonly
                                paths and masked paths. This requires the ProcMountType
                                feature flag to be enabled.
                              type: string
                            readOnlyRootFilesystem:
                              description: Whether this container has a read-only
                                root filesystem. Default is false.
                              type: boolean
                            runAsGroup:
                              description: The GID to run the entrypoint of the container
                                process. Uses runtime default if unset. May also be
                                set in PodSecurityContext.  If set in both SecurityContext
                                and PodSecurityContext, the value specified in SecurityContext
                                takes precedence.
                              format: int64
                              type: integer
                            runAsNonRoot:
                              description: Indicates that the container must run as
                                a non-root user. If true, the Kubelet will validate
                                the image at runtime to ensure that it does not run
                                as UID 0 (root) and fail to start the container if
                                it does. If unset or false, no such validation will
                                be performed. May also be set in PodSecurityContext.  If
                                set in both SecurityContext and PodSecurityContext,
                                the value specified in SecurityContext takes precedence.
                              type: boolean
                            runAsUser:
                              description: The UID to run the entrypoint of the container
                                process. Defaults to user specified in image metadata
                                if unspecified. May also be set in PodSecurityContext.  If
                                set in both SecurityContext and PodSecurityContext,
                                the value specified in SecurityContext takes precedence.
                              format: int64
                              type: integer
                            seLinuxOptions:
                              description: SELinuxOptions are the labels to be applied
                                to the container
                              properties:
                                level:
                                  description: Level is SELinux level label that applies
                                    to the container.
                                  type: string
                                role:
                                  description: Role is a SELinux role label that applies
                                    to the container.
                                  type: string
                                type:
                                  description: Type is a SELinux type label that applies
                                    to the container.
                                  type: string
                                user:
                                  description: User is a SELinux user label that applies
                                    to the container.
                                  type: string
                        stdin:
                          description: Whether this container should allocate a buffer
                            for stdin in the container runtime. If this is not set,
                            reads from stdin in the container will always result in
                            EOF. Default is false.
                          type: boolean
                        stdinOnce:
                          description: Whether the container runtime should close
                            the stdin channel after it has been opened by a single
                            attach. When stdin is true the stdin stream will remain
                            open across multiple attach sessions. If stdinOnce is
                            set to true, stdin is opened on container start, is empty
                            until the first client attaches to stdin, and then remains
                            open and accepts data until the client disconnects, at
                            which time stdin is closed and remains closed until the
                            container is restarted. If this flag is false, a container
                            processes that reads from stdin will never receive an
                            EOF. Default is false
                          type: boolean
                        terminationMessagePath:
                          description: 'Optional: Path at which the file to which
                            the container''s termination message will be written is
                            mounted into the container''s filesystem. Message written
                            is intended to be brief final status, such as an assertion
                            failure message. Will be truncated by the node if greater
                            than 4096 bytes. The total message length across all containers
                            will be limited to 12kb. Defaults to /dev/termination-log.
                            Cannot be updated.'
                          type: string
                        terminationMessagePolicy:
                          description: Indicate how the termination message should
                            be populated. File will use the contents of terminationMessagePath
                            to populate the container status message on both success
                            and failure. FallbackToLogsOnError will use the last chunk
                            of container log output if the termination message file
                            is empty and the container exited with an error. The log
                            output is limited to 2048 bytes or 80 lines, whichever
                            is smaller. Defaults to File. Cannot be updated.
                          type: string
                        tty:
                          description: Whether this container should allocate a TTY
                            for itself, also requires 'stdin' to be true. Default
                            is false.
                          type: boolean
                        volumeDevices:
                          description: volumeDevices is the list of block devices
                            to be used by the container. This is an alpha feature
                            and may change in the future.
                          items:
                            description: volumeDevice describes a mapping of a raw
                              block device within a container.
                            properties:
                              devicePath:
                                description: devicePath is the path inside of the
                                  container that the device will be mapped to.
                                type: string
                              name:
                                description: name must match the name of a persistentVolumeClaim
                                  in the pod
                                type: string
                            required:
                            - name
                            - devicePath
                          type: array
                        volumeMounts:
                          description: Pod volumes to mount into the container's filesystem.
                            Cannot be updated.
                          items:
                            description: VolumeMount describes a mounting of a Volume
                              within a container.
                            properties:
                              mountPath:
                                description: Path within the container at which the
                                  volume should be mounted.  Must not contain ':'.
                                type: string
                              mountPropagation:
                                description: mountPropagation determines how mounts
                                  are propagated from the host to container and the
                                  other way around. When not set, MountPropagationNone
                                  is used. This field is beta in 1.10.
                                type: string
                              name:
                                description: This must match the Name of a Volume.
                                type: string
                              readOnly:
                                description: Mounted read-only if true, read-write
                                  otherwise (false or unspecified). Defaults to false.
                                type: boolean
                              subPath:
                                description: Path within the volume from which the
                                  container's volume should be mounted. Defaults to
                                  "" (volume's root).
                                type: string
                            required:
                            - name
                            - mountPath
                          type: array
                        workingDir:
                          description: Container's working directory. If not specified,
                            the container runtime's default will be used, which might
                            be configured in the container image. Cannot be updated.
                          type: string
                      required:
                      - name
                    type: array
                  externalUrl:
                    description: The external URL the Alertmanager instances will
                      be available under. This is necessary to generate correct URLs.
                      This is necessary if Alertmanager is not served from root of
                      a DNS name.
                    type: string
                  imagePullSecrets:
                    description: An optional list of references to secrets in the
                      same namespace to use for pulling prometheus and alertmanager
                      images from registries see http://kubernetes.io/docs/user-guide/images#specifying-imagepullsecrets-on-a-pod
                    items:
                      description: LocalObjectReference contains enough information
                        to let you locate the referenced object inside the same namespace.
                      properties:
                        name:
                          description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                          type: string
                    type: array
                  listenLocal:
                    description: ListenLocal makes the Alertmanager server listen
                      on loopback, so that it does not bind against the Pod IP. Note
                      this is only for the Alertmanager UI, not the gossip communication.
                    type: boolean
                  logLevel:
                    description: Log level for Alertmanager to be configured with.
                    type: string
                  nodeSelector:
                    description: Define which Nodes the Pods are scheduled on.
                    type: object
                  paused:
                    description: If set to true all actions on the underlaying managed
                      objects are not goint to be performed, except for delete actions.
                    type: boolean
                  podMetadata:
                    description: ObjectMeta is metadata that all persisted resources
                      must have, which includes all objects users must create.
                    properties:
                      annotations:
                        description: 'Annotations is an unstructured key value map
                          stored with a resource that may be set by external tools
                          to store and retrieve arbitrary metadata. They are not queryable
                          and should be preserved when modifying objects. More info:
                          http://kubernetes.io/docs/user-guide/annotations'
                        type: object
                      clusterName:
                        description: The name of the cluster which the object belongs
                          to. This is used to distinguish resources with same name
                          and namespace in different clusters. This field is not set
                          anywhere right now and apiserver is going to ignore it if
                          set in create or update request.
                        type: string
                      creationTimestamp:
                        description: Time is a wrapper around time.Time which supports
                          correct marshaling to YAML and JSON.  Wrappers are provided
                          for many of the factory methods that the time package offers.
                        format: date-time
                        type: string
                      deletionGracePeriodSeconds:
                        description: Number of seconds allowed for this object to
                          gracefully terminate before it will be removed from the
                          system. Only set when deletionTimestamp is also set. May
                          only be shortened. Read-only.
                        format: int64
                        type: integer
                      deletionTimestamp:
                        description: Time is a wrapper around time.Time which supports
                          correct marshaling to YAML and JSON.  Wrappers are provided
                          for many of the factory methods that the time package offers.
                        format: date-time
                        type: string
                      finalizers:
                        description: Must be empty before the object is deleted from
                          the registry. Each entry is an identifier for the responsible
                          component that will remove the entry from the list. If the
                          deletionTimestamp of the object is non-nil, entries in this
                          list can only be removed.
                        items:
                          type: string
                        type: array
                      generateName:
                        description: |-
                          GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.

                          If this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).

                          Applied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#idempotency
                        type: string
                      generation:
                        description: A sequence number representing a specific generation
                          of the desired state. Populated by the system. Read-only.
                        format: int64
                        type: integer
                      initializers:
                        description: Initializers tracks the progress of initialization.
                        properties:
                          pending:
                            description: Pending is a list of initializers that must
                              execute in order before this object is visible. When
                              the last pending initializer is removed, and no failing
                              result is set, the initializers struct will be set to
                              nil and the object is considered as initialized and
                              visible to all clients.
                            items:
                              description: Initializer is information about an initializer
                                that has not yet completed.
                              properties:
                                name:
                                  description: name of the process that is responsible
                                    for initializing this object.
                                  type: string
                              required:
                              - name
                            type: array
                          result:
                            description: Status is a return value for calls that don't
                              return other objects.
                            properties:
                              apiVersion:
                                description: 'APIVersion defines the versioned schema
                                  of this representation of an object. Servers should
                                  convert recognized schemas to the latest internal
                                  value, and may reject unrecognized values. More
                                  info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
                                type: string
                              code:
                                description: Suggested HTTP return code for this status,
                                  0 if not set.
                                format: int32
                                type: integer
                              details:
                                description: StatusDetails is a set of additional
                                  properties that MAY be set by the server to provide
                                  additional information about a response. The Reason
                                  field of a Status object defines what attributes
                                  will be set. Clients must ignore fields that do
                                  not match the defined type of each attribute, and
                                  should assume that any attribute may be empty, invalid,
                                  or under defined.
                                properties:
                                  causes:
                                    description: The Causes array includes more details
                                      associated with the StatusReason failure. Not
                                      all StatusReasons may provide detailed causes.
                                    items:
                                      description: StatusCause provides more information
                                        about an api.Status failure, including cases
                                        when multiple errors are encountered.
                                      properties:
                                        field:
                                          description: |-
                                            The field of the resource that has caused this error, as named by its JSON serialization. May include dot and postfix notation for nested attributes. Arrays are zero-indexed.  Fields may appear more than once in an array of causes due to fields having multiple errors. Optional.

                                            Examples:
                                              "name" - the field "name" on the current resource
                                              "items[0].name" - the field "name" on the first array entry in "items"
                                          type: string
                                        message:
                                          description: A human-readable description
                                            of the cause of the error.  This field
                                            may be presented as-is to a reader.
                                          type: string
                                        reason:
                                          description: A machine-readable description
                                            of the cause of the error. If this value
                                            is empty there is no information available.
                                          type: string
                                    type: array
                                  group:
                                    description: The group attribute of the resource
                                      associated with the status StatusReason.
                                    type: string
                                  kind:
                                    description: 'The kind attribute of the resource
                                      associated with the status StatusReason. On
                                      some operations may differ from the requested
                                      resource Kind. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
                                    type: string
                                  name:
                                    description: The name attribute of the resource
                                      associated with the status StatusReason (when
                                      there is a single name which can be described).
                                    type: string
                                  retryAfterSeconds:
                                    description: If specified, the time in seconds
                                      before the operation should be retried. Some
                                      errors may indicate the client must take an
                                      alternate action - for those errors this field
                                      may indicate how long to wait before taking
                                      the alternate action.
                                    format: int32
                                    type: integer
                                  uid:
                                    description: 'UID of the resource. (when there
                                      is a single resource which can be described).
                                      More info: http://kubernetes.io/docs/user-guide/identifiers#uids'
                                    type: string
                              kind:
                                description: 'Kind is a string value representing
                                  the REST resource this object represents. Servers
                                  may infer this from the endpoint the client submits
                                  requests to. Cannot be updated. In CamelCase. More
                                  info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
                                type: string
                              message:
                                description: A human-readable description of the status
                                  of this operation.
                                type: string
                              metadata:
                                description: ListMeta describes metadata that synthetic
                                  resources must have, including lists and various
                                  status objects. A resource may have only one of
                                  {ObjectMeta, ListMeta}.
                                properties:
                                  continue:
                                    description: continue may be set if the user set
                                      a limit on the number of items returned, and
                                      indicates that the server has more data available.
                                      The value is opaque and may be used to issue
                                      another request to the endpoint that served
                                      this list to retrieve the next set of available
                                      objects. Continuing a consistent list may not
                                      be possible if the server configuration has
                                      changed or more than a few minutes have passed.
                                      The resourceVersion field returned when using
                                      this continue value will be identical to the
                                      value in the first response, unless you have
                                      received this token from an error message.
                                    type: string
                                  resourceVersion:
                                    description: 'String that identifies the server''s
                                      internal version of this object that can be
                                      used by clients to determine when objects have
                                      changed. Value must be treated as opaque by
                                      clients and passed unmodified back to the server.
                                      Populated by the system. Read-only. More info:
                                      https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency'
                                    type: string
                                  selfLink:
                                    description: selfLink is a URL representing this
                                      object. Populated by the system. Read-only.
                                    type: string
                              reason:
                                description: A machine-readable description of why
                                  this operation is in the "Failure" status. If this
                                  value is empty there is no information available.
                                  A Reason clarifies an HTTP status code but does
                                  not override it.
                                type: string
                              status:
                                description: 'Status of the operation. One of: "Success"
                                  or "Failure". More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status'
                                type: string
                        required:
                        - pending
                      labels:
                        description: 'Map of string keys and values that can be used
                          to organize and categorize (scope and select) objects. May
                          match selectors of replication controllers and services.
                          More info: http://kubernetes.io/docs/user-guide/labels'
                        type: object
                      name:
                        description: 'Name must be unique within a namespace. Is required
                          when creating resources, although some resources may allow
                          a client to request the generation of an appropriate name
                          automatically. Name is primarily intended for creation idempotence
                          and configuration definition. Cannot be updated. More info:
                          http://kubernetes.io/docs/user-guide/identifiers#names'
                        type: string
                      namespace:
                        description: |-
                          Namespace defines the space within each name must be unique. An empty namespace is equivalent to the "default" namespace, but "default" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.

                          Must be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces
                        type: string
                      ownerReferences:
                        description: List of objects depended by this object. If ALL
                          objects in the list have been deleted, this object will
                          be garbage collected. If this object is managed by a controller,
                          then an entry in this list will point to this controller,
                          with the controller field set to true. There cannot be more
                          than one managing controller.
                        items:
                          description: OwnerReference contains enough information
                            to let you identify an owning object. Currently, an owning
                            object must be in the same namespace, so there is no namespace
                            field.
                          properties:
                            apiVersion:
                              description: API version of the referent.
                              type: string
                            blockOwnerDeletion:
                              description: If true, AND if the owner has the "foregroundDeletion"
                                finalizer, then the owner cannot be deleted from the
                                key-value store until this reference is removed. Defaults
                                to false. To set this field, a user needs "delete"
                                permission of the owner, otherwise 422 (Unprocessable
                                Entity) will be returned.
                              type: boolean
                            controller:
                              description: If true, this reference points to the managing
                                controller.
                              type: boolean
                            kind:
                              description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
                              type: string
                            name:
                              description: 'Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names'
                              type: string
                            uid:
                              description: 'UID of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#uids'
                              type: string
                          required:
                          - apiVersion
                          - kind
                          - name
                          - uid
                        type: array
                      resourceVersion:
                        description: |-
                          An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.

                          Populated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency
                        type: string
                      selfLink:
                        description: SelfLink is a URL representing this object. Populated
                          by the system. Read-only.
                        type: string
                      uid:
                        description: |-
                          UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.

                          Populated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids
                        type: string
                  priorityClassName:
                    description: Priority class assigned to the Pods
                    type: string
                  replicas:
                    description: Size is the expected size of the alertmanager cluster.
                      The controller will eventually make the size of the running
                      cluster equal to the expected size.
                    format: int32
                    type: integer
                  resources:
                    description: ResourceRequirements describes the compute resource
                      requirements.
                    properties:
                      limits:
                        description: 'Limits describes the maximum amount of compute
                          resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                        type: object
                      requests:
                        description: 'Requests describes the minimum amount of compute
                          resources required. If Requests is omitted for a container,
                          it defaults to Limits if that is explicitly specified, otherwise
                          to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                        type: object
                  retention:
                    description: Time duration Alertmanager shall retain data for.
                      Default is '120h', and must match the regular expression `[0-9]+(ms|s|m|h)`
                      (milliseconds seconds minutes hours).
                    type: string
                  routePrefix:
                    description: The route prefix Alertmanager registers HTTP handlers
                      for. This is useful, if using ExternalURL and a proxy is rewriting
                      HTTP routes of a request, and the actual ExternalURL is still
                      true, but the server serves requests under a different route
                      prefix. For example for use with `kubectl proxy`.
                    type: string
                  secrets:
                    description: Secrets is a list of Secrets in the same namespace
                      as the Alertmanager object, which shall be mounted into the
                      Alertmanager Pods. The Secrets are mounted into /etc/alertmanager/secrets/<secret-name>.
                    items:
                      type: string
                    type: array
                  securityContext:
                    description: PodSecurityContext holds pod-level security attributes
                      and common container settings. Some fields are also present
                      in container.securityContext.  Field values of container.securityContext
                      take precedence over field values of PodSecurityContext.
                    properties:
                      fsGroup:
                        description: |-
                          A special supplemental group that applies to all containers in a pod. Some volume types allow the Kubelet to change the ownership of that volume to be owned by the pod:

                          1. The owning GID will be the FSGroup 2. The setgid bit is set (new files created in the volume will be owned by FSGroup) 3. The permission bits are OR'd with rw-rw----

                          If unset, the Kubelet will not modify the ownership and permissions of any volume.
                        format: int64
                        type: integer
                      runAsGroup:
                        description: The GID to run the entrypoint of the container
                          process. Uses runtime default if unset. May also be set
                          in SecurityContext.  If set in both SecurityContext and
                          PodSecurityContext, the value specified in SecurityContext
                          takes precedence for that container.
                        format: int64
                        type: integer
                      runAsNonRoot:
                        description: Indicates that the container must run as a non-root
                          user. If true, the Kubelet will validate the image at runtime
                          to ensure that it does not run as UID 0 (root) and fail
                          to start the container if it does. If unset or false, no
                          such validation will be performed. May also be set in SecurityContext.  If
                          set in both SecurityContext and PodSecurityContext, the
                          value specified in SecurityContext takes precedence.
                        type: boolean
                      runAsUser:
                        description: The UID to run the entrypoint of the container
                          process. Defaults to user specified in image metadata if
                          unspecified. May also be set in SecurityContext.  If set
                          in both SecurityContext and PodSecurityContext, the value
                          specified in SecurityContext takes precedence for that container.
                        format: int64
                        type: integer
                      seLinuxOptions:
                        description: SELinuxOptions are the labels to be applied to
                          the container
                        properties:
                          level:
                            description: Level is SELinux level label that applies
                              to the container.
                            type: string
                          role:
                            description: Role is a SELinux role label that applies
                              to the container.
                            type: string
                          type:
                            description: Type is a SELinux type label that applies
                              to the container.
                            type: string
                          user:
                            description: User is a SELinux user label that applies
                              to the container.
                            type: string
                      supplementalGroups:
                        description: A list of groups applied to the first process
                          run in each container, in addition to the container's primary
                          GID.  If unspecified, no groups will be added to any container.
                        items:
                          format: int64
                          type: integer
                        type: array
                      sysctls:
                        description: Sysctls hold a list of namespaced sysctls used
                          for the pod. Pods with unsupported sysctls (by the container
                          runtime) might fail to launch.
                        items:
                          description: Sysctl defines a kernel parameter to be set
                          properties:
                            name:
                              description: Name of a property to set
                              type: string
                            value:
                              description: Value of a property to set
                              type: string
                          required:
                          - name
                          - value
                        type: array
                  serviceAccountName:
                    description: ServiceAccountName is the name of the ServiceAccount
                      to use to run the Prometheus Pods.
                    type: string
                  sha:
                    description: SHA of Alertmanager container image to be deployed.
                      Defaults to the value of `version`. Similar to a tag, but the
                      SHA explicitly deploys an immutable container image. Version
                      and Tag are ignored if SHA is set.
                    type: string
                  storage:
                    description: StorageSpec defines the configured storage for a
                      group Prometheus servers. If neither `emptyDir` nor `volumeClaimTemplate`
                      is specified, then by default an [EmptyDir](https://kubernetes.io/docs/concepts/storage/volumes/#emptydir)
                      will be used.
                    properties:
                      emptyDir:
                        description: Represents an empty directory for a pod. Empty
                          directory volumes support ownership management and SELinux
                          relabeling.
                        properties:
                          medium:
                            description: 'What type of storage medium should back
                              this directory. The default is "" which means to use
                              the node''s default medium. Must be an empty string
                              (default) or Memory. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir'
                            type: string
                      volumeClaimTemplate:
                        description: PersistentVolumeClaim is a user's request for
                          and claim to a persistent volume
                        properties:
                          apiVersion:
                            description: 'APIVersion defines the versioned schema
                              of this representation of an object. Servers should
                              convert recognized schemas to the latest internal value,
                              and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
                            type: string
                          kind:
                            description: 'Kind is a string value representing the
                              REST resource this object represents. Servers may infer
                              this from the endpoint the client submits requests to.
                              Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
                            type: string
                          metadata:
                            description: ObjectMeta is metadata that all persisted
                              resources must have, which includes all objects users
                              must create.
                            properties:
                              annotations:
                                description: 'Annotations is an unstructured key value
                                  map stored with a resource that may be set by external
                                  tools to store and retrieve arbitrary metadata.
                                  They are not queryable and should be preserved when
                                  modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations'
                                type: object
                              clusterName:
                                description: The name of the cluster which the object
                                  belongs to. This is used to distinguish resources
                                  with same name and namespace in different clusters.
                                  This field is not set anywhere right now and apiserver
                                  is going to ignore it if set in create or update
                                  request.
                                type: string
                              creationTimestamp:
                                description: Time is a wrapper around time.Time which
                                  supports correct marshaling to YAML and JSON.  Wrappers
                                  are provided for many of the factory methods that
                                  the time package offers.
                                format: date-time
                                type: string
                              deletionGracePeriodSeconds:
                                description: Number of seconds allowed for this object
                                  to gracefully terminate before it will be removed
                                  from the system. Only set when deletionTimestamp
                                  is also set. May only be shortened. Read-only.
                                format: int64
                                type: integer
                              deletionTimestamp:
                                description: Time is a wrapper around time.Time which
                                  supports correct marshaling to YAML and JSON.  Wrappers
                                  are provided for many of the factory methods that
                                  the time package offers.
                                format: date-time
                                type: string
                              finalizers:
                                description: Must be empty before the object is deleted
                                  from the registry. Each entry is an identifier for
                                  the responsible component that will remove the entry
                                  from the list. If the deletionTimestamp of the object
                                  is non-nil, entries in this list can only be removed.
                                items:
                                  type: string
                                type: array
                              generateName:
                                description: |-
                                  GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.

                                  If this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).

                                  Applied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#idempotency
                                type: string
                              generation:
                                description: A sequence number representing a specific
                                  generation of the desired state. Populated by the
                                  system. Read-only.
                                format: int64
                                type: integer
                              initializers:
                                description: Initializers tracks the progress of initialization.
                                properties:
                                  pending:
                                    description: Pending is a list of initializers
                                      that must execute in order before this object
                                      is visible. When the last pending initializer
                                      is removed, and no failing result is set, the
                                      initializers struct will be set to nil and the
                                      object is considered as initialized and visible
                                      to all clients.
                                    items:
                                      description: Initializer is information about
                                        an initializer that has not yet completed.
                                      properties:
                                        name:
                                          description: name of the process that is
                                            responsible for initializing this object.
                                          type: string
                                      required:
                                      - name
                                    type: array
                                  result:
                                    description: Status is a return value for calls
                                      that don't return other objects.
                                    properties:
                                      apiVersion:
                                        description: 'APIVersion defines the versioned
                                          schema of this representation of an object.
                                          Servers should convert recognized schemas
                                          to the latest internal value, and may reject
                                          unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
                                        type: string
                                      code:
                                        description: Suggested HTTP return code for
                                          this status, 0 if not set.
                                        format: int32
                                        type: integer
                                      details:
                                        description: StatusDetails is a set of additional
                                          properties that MAY be set by the server
                                          to provide additional information about
                                          a response. The Reason field of a Status
                                          object defines what attributes will be set.
                                          Clients must ignore fields that do not match
                                          the defined type of each attribute, and
                                          should assume that any attribute may be
                                          empty, invalid, or under defined.
                                        properties:
                                          causes:
                                            description: The Causes array includes
                                              more details associated with the StatusReason
                                              failure. Not all StatusReasons may provide
                                              detailed causes.
                                            items:
                                              description: StatusCause provides more
                                                information about an api.Status failure,
                                                including cases when multiple errors
                                                are encountered.
                                              properties:
                                                field:
                                                  description: |-
                                                    The field of the resource that has caused this error, as named by its JSON serialization. May include dot and postfix notation for nested attributes. Arrays are zero-indexed.  Fields may appear more than once in an array of causes due to fields having multiple errors. Optional.

                                                    Examples:
                                                      "name" - the field "name" on the current resource
                                                      "items[0].name" - the field "name" on the first array entry in "items"
                                                  type: string
                                                message:
                                                  description: A human-readable description
                                                    of the cause of the error.  This
                                                    field may be presented as-is to
                                                    a reader.
                                                  type: string
                                                reason:
                                                  description: A machine-readable
                                                    description of the cause of the
                                                    error. If this value is empty
                                                    there is no information available.
                                                  type: string
                                            type: array
                                          group:
                                            description: The group attribute of the
                                              resource associated with the status
                                              StatusReason.
                                            type: string
                                          kind:
                                            description: 'The kind attribute of the
                                              resource associated with the status
                                              StatusReason. On some operations may
                                              differ from the requested resource Kind.
                                              More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
                                            type: string
                                          name:
                                            description: The name attribute of the
                                              resource associated with the status
                                              StatusReason (when there is a single
                                              name which can be described).
                                            type: string
                                          retryAfterSeconds:
                                            description: If specified, the time in
                                              seconds before the operation should
                                              be retried. Some errors may indicate
                                              the client must take an alternate action
                                              - for those errors this field may indicate
                                              how long to wait before taking the alternate
                                              action.
                                            format: int32
                                            type: integer
                                          uid:
                                            description: 'UID of the resource. (when
                                              there is a single resource which can
                                              be described). More info: http://kubernetes.io/docs/user-guide/identifiers#uids'
                                            type: string
                                      kind:
                                        description: 'Kind is a string value representing
                                          the REST resource this object represents.
                                          Servers may infer this from the endpoint
                                          the client submits requests to. Cannot be
                                          updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
                                        type: string
                                      message:
                                        description: A human-readable description
                                          of the status of this operation.
                                        type: string
                                      metadata:
                                        description: ListMeta describes metadata that
                                          synthetic resources must have, including
                                          lists and various status objects. A resource
                                          may have only one of {ObjectMeta, ListMeta}.
                                        properties:
                                          continue:
                                            description: continue may be set if the
                                              user set a limit on the number of items
                                              returned, and indicates that the server
                                              has more data available. The value is
                                              opaque and may be used to issue another
                                              request to the endpoint that served
                                              this list to retrieve the next set of
                                              available objects. Continuing a consistent
                                              list may not be possible if the server
                                              configuration has changed or more than
                                              a few minutes have passed. The resourceVersion
                                              field returned when using this continue
                                              value will be identical to the value
                                              in the first response, unless you have
                                              received this token from an error message.
                                            type: string
                                          resourceVersion:
                                            description: 'String that identifies the
                                              server''s internal version of this object
                                              that can be used by clients to determine
                                              when objects have changed. Value must
                                              be treated as opaque by clients and
                                              passed unmodified back to the server.
                                              Populated by the system. Read-only.
                                              More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency'
                                            type: string
                                          selfLink:
                                            description: selfLink is a URL representing
                                              this object. Populated by the system.
                                              Read-only.
                                            type: string
                                      reason:
                                        description: A machine-readable description
                                          of why this operation is in the "Failure"
                                          status. If this value is empty there is
                                          no information available. A Reason clarifies
                                          an HTTP status code but does not override
                                          it.
                                        type: string
                                      status:
                                        description: 'Status of the operation. One
                                          of: "Success" or "Failure". More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status'
                                        type: string
                                required:
                                - pending
                              labels:
                                description: 'Map of string keys and values that can
                                  be used to organize and categorize (scope and select)
                                  objects. May match selectors of replication controllers
                                  and services. More info: http://kubernetes.io/docs/user-guide/labels'
                                type: object
                              name:
                                description: 'Name must be unique within a namespace.
                                  Is required when creating resources, although some
                                  resources may allow a client to request the generation
                                  of an appropriate name automatically. Name is primarily
                                  intended for creation idempotence and configuration
                                  definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names'
                                type: string
                              namespace:
                                description: |-
                                  Namespace defines the space within each name must be unique. An empty namespace is equivalent to the "default" namespace, but "default" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.

                                  Must be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces
                                type: string
                              ownerReferences:
                                description: List of objects depended by this object.
                                  If ALL objects in the list have been deleted, this
                                  object will be garbage collected. If this object
                                  is managed by a controller, then an entry in this
                                  list will point to this controller, with the controller
                                  field set to true. There cannot be more than one
                                  managing controller.
                                items:
                                  description: OwnerReference contains enough information
                                    to let you identify an owning object. Currently,
                                    an owning object must be in the same namespace,
                                    so there is no namespace field.
                                  properties:
                                    apiVersion:
                                      description: API version of the referent.
                                      type: string
                                    blockOwnerDeletion:
                                      description: If true, AND if the owner has the
                                        "foregroundDeletion" finalizer, then the owner
                                        cannot be deleted from the key-value store
                                        until this reference is removed. Defaults
                                        to false. To set this field, a user needs
                                        "delete" permission of the owner, otherwise
                                        422 (Unprocessable Entity) will be returned.
                                      type: boolean
                                    controller:
                                      description: If true, this reference points
                                        to the managing controller.
                                      type: boolean
                                    kind:
                                      description: 'Kind of the referent. More info:
                                        https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
                                      type: string
                                    name:
                                      description: 'Name of the referent. More info:
                                        http://kubernetes.io/docs/user-guide/identifiers#names'
                                      type: string
                                    uid:
                                      description: 'UID of the referent. More info:
                                        http://kubernetes.io/docs/user-guide/identifiers#uids'
                                      type: string
                                  required:
                                  - apiVersion
                                  - kind
                                  - name
                                  - uid
                                type: array
                              resourceVersion:
                                description: |-
                                  An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.

                                  Populated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency
                                type: string
                              selfLink:
                                description: SelfLink is a URL representing this object.
                                  Populated by the system. Read-only.
                                type: string
                              uid:
                                description: |-
                                  UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.

                                  Populated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids
                                type: string
                          spec:
                            description: PersistentVolumeClaimSpec describes the common
                              attributes of storage devices and allows a Source for
                              provider-specific attributes
                            properties:
                              accessModes:
                                description: 'AccessModes contains the desired access
                                  modes the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1'
                                items:
                                  type: string
                                type: array
                              dataSource:
                                description: TypedLocalObjectReference contains enough
                                  information to let you locate the typed referenced
                                  object inside the same namespace.
                                properties:
                                  apiGroup:
                                    description: APIGroup is the group for the resource
                                      being referenced. If APIGroup is not specified,
                                      the specified Kind must be in the core API group.
                                      For any other third-party types, APIGroup is
                                      required.
                                    type: string
                                  kind:
                                    description: Kind is the type of resource being
                                      referenced
                                    type: string
                                  name:
                                    description: Name is the name of resource being
                                      referenced
                                    type: string
                                required:
                                - kind
                                - name
                              resources:
                                description: ResourceRequirements describes the compute
                                  resource requirements.
                                properties:
                                  limits:
                                    description: 'Limits describes the maximum amount
                                      of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                                    type: object
                                  requests:
                                    description: 'Requests describes the minimum amount
                                      of compute resources required. If Requests is
                                      omitted for a container, it defaults to Limits
                                      if that is explicitly specified, otherwise to
                                      an implementation-defined value. More info:
                                      https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                                    type: object
                              selector:
                                description: A label selector is a label query over
                                  a set of resources. The result of matchLabels and
                                  matchExpressions are ANDed. An empty label selector
                                  matches all objects. A null label selector matches
                                  no objects.
                                properties:
                                  matchExpressions:
                                    description: matchExpressions is a list of label
                                      selector requirements. The requirements are
                                      ANDed.
                                    items:
                                      description: A label selector requirement is
                                        a selector that contains values, a key, and
                                        an operator that relates the key and values.
                                      properties:
                                        key:
                                          description: key is the label key that the
                                            selector applies to.
                                          type: string
                                        operator:
                                          description: operator represents a key's
                                            relationship to a set of values. Valid
                                            operators are In, NotIn, Exists and DoesNotExist.
                                          type: string
                                        values:
                                          description: values is an array of string
                                            values. If the operator is In or NotIn,
                                            the values array must be non-empty. If
                                            the operator is Exists or DoesNotExist,
                                            the values array must be empty. This array
                                            is replaced during a strategic merge patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                      - key
                                      - operator
                                    type: array
                                  matchLabels:
                                    description: matchLabels is a map of {key,value}
                                      pairs. A single {key,value} in the matchLabels
                                      map is equivalent to an element of matchExpressions,
                                      whose key field is "key", the operator is "In",
                                      and the values array contains only "value".
                                      The requirements are ANDed.
                                    type: object
                              storageClassName:
                                description: 'Name of the StorageClass required by
                                  the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1'
                                type: string
                              volumeMode:
                                description: volumeMode defines what type of volume
                                  is required by the claim. Value of Filesystem is
                                  implied when not included in claim spec. This is
                                  an alpha feature and may change in the future.
                                type: string
                              volumeName:
                                description: VolumeName is the binding reference to
                                  the PersistentVolume backing this claim.
                                type: string
                          status:
                            description: PersistentVolumeClaimStatus is the current
                              status of a persistent volume claim.
                            properties:
                              accessModes:
                                description: 'AccessModes contains the actual access
                                  modes the volume backing the PVC has. More info:
                                  https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1'
                                items:
                                  type: string
                                type: array
                              capacity:
                                description: Represents the actual resources of the
                                  underlying volume.
                                type: object
                              conditions:
                                description: Current Condition of persistent volume
                                  claim. If underlying persistent volume is being
                                  resized then the Condition will be set to 'ResizeStarted'.
                                items:
                                  description: PersistentVolumeClaimCondition contails
                                    details about state of pvc
                                  properties:
                                    lastProbeTime:
                                      description: Time is a wrapper around time.Time
                                        which supports correct marshaling to YAML
                                        and JSON.  Wrappers are provided for many
                                        of the factory methods that the time package
                                        offers.
                                      format: date-time
                                      type: string
                                    lastTransitionTime:
                                      description: Time is a wrapper around time.Time
                                        which supports correct marshaling to YAML
                                        and JSON.  Wrappers are provided for many
                                        of the factory methods that the time package
                                        offers.
                                      format: date-time
                                      type: string
                                    message:
                                      description: Human-readable message indicating
                                        details about last transition.
                                      type: string
                                    reason:
                                      description: Unique, this should be a short,
                                        machine understandable string that gives the
                                        reason for condition's last transition. If
                                        it reports "ResizeStarted" that means the
                                        underlying persistent volume is being resized.
                                      type: string
                                    status:
                                      type: string
                                    type:
                                      type: string
                                  required:
                                  - type
                                  - status
                                type: array
                              phase:
                                description: Phase represents the current phase of
                                  PersistentVolumeClaim.
                                type: string
                  tag:
                    description: Tag of Alertmanager container image to be deployed.
                      Defaults to the value of `version`. Version is ignored if Tag
                      is set.
                    type: string
                  tolerations:
                    description: If specified, the pod's tolerations.
                    items:
                      description: The pod this Toleration is attached to tolerates
                        any taint that matches the triple <key,value,effect> using
                        the matching operator <operator>.
                      properties:
                        effect:
                          description: Effect indicates the taint effect to match.
                            Empty means match all taint effects. When specified, allowed
                            values are NoSchedule, PreferNoSchedule and NoExecute.
                          type: string
                        key:
                          description: Key is the taint key that the toleration applies
                            to. Empty means match all taint keys. If the key is empty,
                            operator must be Exists; this combination means to match
                            all values and all keys.
                          type: string
                        operator:
                          description: Operator represents a key's relationship to
                            the value. Valid operators are Exists and Equal. Defaults
                            to Equal. Exists is equivalent to wildcard for value,
                            so that a pod can tolerate all taints of a particular
                            category.
                          type: string
                        tolerationSeconds:
                          description: TolerationSeconds represents the period of
                            time the toleration (which must be of effect NoExecute,
                            otherwise this field is ignored) tolerates the taint.
                            By default, it is not set, which means tolerate the taint
                            forever (do not evict). Zero and negative values will
                            be treated as 0 (evict immediately) by the system.
                          format: int64
                          type: integer
                        value:
                          description: Value is the taint value the toleration matches
                            to. If the operator is Exists, the value should be empty,
                            otherwise just a regular string.
                          type: string
                    type: array
                  version:
                    description: Version the cluster should be on.
                    type: string
              status:
                description: 'AlertmanagerStatus is the most recent observed status
                  of the Alertmanager cluster. Read-only. Not included when requesting
                  from the apiserver, only from the Prometheus Operator API itself.
                  More info: https://github.com/kubernetes/community/blob/master/contributors/devel/api-conventions.md#spec-and-status'
                properties:
                  availableReplicas:
                    description: Total number of available pods (ready for at least
                      minReadySeconds) targeted by this Alertmanager cluster.
                    format: int32
                    type: integer
                  paused:
                    description: Represents whether any actions on the underlaying
                      managed objects are being performed. Only delete actions will
                      be performed.
                    type: boolean
                  replicas:
                    description: Total number of non-terminated pods targeted by this
                      Alertmanager cluster (their labels match the selector).
                    format: int32
                    type: integer
                  unavailableReplicas:
                    description: Total number of unavailable pods targeted by this
                      Alertmanager cluster.
                    format: int32
                    type: integer
                  updatedReplicas:
                    description: Total number of non-terminated pods targeted by this
                      Alertmanager cluster that have the desired version spec.
                    format: int32
                    type: integer
                required:
                - paused
                - replicas
                - updatedReplicas
                - availableReplicas
                - unavailableReplicas
        version: v1
  - name: prometheus-k8s-service-account
    object:
      apiVersion: v1
      kind: ServiceAccount
      metadata:
        name: prometheus-k8s
        namespace: paralus-infra
  - name: prometheus-k8s-clusterrole
    object:
      apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRole
      metadata:
        name: prometheus-k8s
      rules:
      - apiGroups:
        - ""
        resources:
        - nodes/metrics
        verbs:
        - get
      - nonResourceURLs:
        - /metrics
        verbs:
        - get
  - name: prometheus-k8s-clusterrolebinding
    object:
      apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRoleBinding
      metadata:
        name: prometheus-k8s
      roleRef:
        apiGroup: rbac.authorization.k8s.io
        kind: ClusterRole
        name: prometheus-k8s
      subjects:
      - kind: ServiceAccount
        name: prometheus-k8s
        namespace: paralus-infra
  - name: prometheus-k8s-roleconfig
    object:
      apiVersion: rbac.authorization.k8s.io/v1
      kind: Role
      metadata:
        name: prometheus-k8s-config
        namespace: paralus-infra
      rules:
      - apiGroups:
        - ""
        resources:
        - configmaps
        verbs:
        - get
  - name: prometheus-k8s-role-default
    object:
      apiVersion: rbac.authorization.k8s.io/v1
      kind: Role
      metadata:
        name: prometheus-k8s
        namespace: default
      rules:
      - apiGroups:
        - ""
        resources:
        - nodes
        - services
        - endpoints
        - pods
        verbs:
        - get
        - list
        - watch
  - name: prometheus-k8s-role-kube-system
    object:
      apiVersion: rbac.authorization.k8s.io/v1
      kind: Role
      metadata:
        name: prometheus-k8s
        namespace: kube-system
      rules:
      - apiGroups:
        - ""
        resources:
        - nodes
        - services
        - endpoints
        - pods
        verbs:
        - get
        - list
        - watch
  - name: prometheus-k8s-role-paralus-infra
    object:
      apiVersion: rbac.authorization.k8s.io/v1
      kind: Role
      metadata:
        name: prometheus-k8s
        namespace: paralus-infra
      rules:
      - apiGroups:
        - ""
        resources:
        - nodes
        - services
        - endpoints
        - pods
        verbs:
        - get
        - list
        - watch
  - name: prometheus-k8s-rolebindingconfig
    object:
      apiVersion: rbac.authorization.k8s.io/v1
      kind: RoleBinding
      metadata:
        name: prometheus-k8s-config
        namespace: paralus-infra
      roleRef:
        apiGroup: rbac.authorization.k8s.io
        kind: Role
        name: prometheus-k8s-config
      subjects:
      - kind: ServiceAccount
        name: prometheus-k8s
        namespace: paralus-infra
  - name: prometheus-k8s-rolebinding-default
    object:
      apiVersion: rbac.authorization.k8s.io/v1
      kind: RoleBinding
      metadata:
        name: prometheus-k8s
        namespace: default
      roleRef:
        apiGroup: rbac.authorization.k8s.io
        kind: Role
        name: prometheus-k8s
      subjects:
      - kind: ServiceAccount
        name: prometheus-k8s
        namespace: paralus-infra
  - name: prometheus-k8s-rolebinding-kube-system
    object:
      apiVersion: rbac.authorization.k8s.io/v1
      kind: RoleBinding
      metadata:
        name: prometheus-k8s
        namespace: kube-system
      roleRef:
        apiGroup: rbac.authorization.k8s.io
        kind: Role
        name: prometheus-k8s
      subjects:
      - kind: ServiceAccount
        name: prometheus-k8s
        namespace: paralus-infra
  - name: prometheus-k8s-rolebinding-paralus-infra
    object:
      apiVersion: rbac.authorization.k8s.io/v1
      kind: RoleBinding
      metadata:
        name: prometheus-k8s
        namespace: paralus-infra
      roleRef:
        apiGroup: rbac.authorization.k8s.io
        kind: Role
        name: prometheus-k8s
      subjects:
      - kind: ServiceAccount
        name: prometheus-k8s
        namespace: paralus-infra
  - name: prometheus-operator-serviceaccount
    object:
      apiVersion: v1
      kind: ServiceAccount
      metadata:
        name: prometheus-operator
        namespace: paralus-infra
  - name: prometheus-operator-clusterrole
    object:
      apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRole
      metadata:
        name: prometheus-operator
      rules:
      - apiGroups:
        - apiextensions.k8s.io
        resources:
        - customresourcedefinitions
        verbs:
        - '*'
      - apiGroups:
        - monitoring.coreos.com
        resources:
        - alertmanagers
        - prometheuses
        - prometheuses/finalizers
        - alertmanagers/finalizers
        - servicemonitors
        - prometheusrules
        verbs:
        - '*'
      - apiGroups:
        - apps
        resources:
        - statefulsets
        verbs:
        - '*'
      - apiGroups:
        - ""
        resources:
        - configmaps
        - secrets
        verbs:
        - '*'
      - apiGroups:
        - ""
        resources:
        - pods
        verbs:
        - list
        - delete
      - apiGroups:
        - ""
        resources:
        - services
        - endpoints
        verbs:
        - get
        - create
        - update
      - apiGroups:
        - ""
        resources:
        - nodes
        verbs:
        - list
        - watch
      - apiGroups:
        - ""
        resources:
        - namespaces
        verbs:
        - get
        - list
        - watch
  - name: prometheus-operator-clusterrole-binding
    object:
      apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRoleBinding
      metadata:
        name: prometheus-operator
      roleRef:
        apiGroup: rbac.authorization.k8s.io
        kind: ClusterRole
        name: prometheus-operator
      subjects:
      - kind: ServiceAccount
        name: prometheus-operator
        namespace: paralus-infra
  - name: prometheus-operator-servicemonitor
    object:
      apiVersion: monitoring.coreos.com/v1
      kind: ServiceMonitor
      metadata:
        labels:
          k8s-app: prometheus-operator
        name: prometheus-operator
        namespace: paralus-infra
      spec:
        endpoints:
        - honorLabels: true
          port: http
        selector:
          matchLabels:
            k8s-app: prometheus-operator
  - name: alertmanager-service-account
    object:
      apiVersion: v1
      kind: ServiceAccount
      metadata:
        name: alertmanager-main
        namespace: paralus-infra
  - name: alertmanager-main-secret
    object:
      apiVersion: v1
      data:
        alertmanager.yaml: Z2xvYmFsOgogICMgVGhlIHNtYXJ0aG9zdCBhbmQgU01UUCBzZW5kZXIgdXNlZCBmb3IgbWFpbCBub3RpZmljYXRpb25zLgogICNzbXRwX3NtYXJ0aG9zdDogJ2xvY2FsaG9zdDoyNScKICAjc210cF9mcm9tOiAnYWxlcnRtYW5hZ2VyQGV4YW1wbGUub3JnJwogICNzbXRwX2F1dGhfdXNlcm5hbWU6ICdhbGVydG1hbmFnZXInCiAgI3NtdHBfYXV0aF9wYXNzd29yZDogJ3Bhc3N3b3JkJwogICMgVGhlIGF1dGggdG9rZW4gZm9yIEhpcGNoYXQuCiAgI2hpcGNoYXRfYXV0aF90b2tlbjogJzEyMzQ1NTY3ODknCiAgIyBBbHRlcm5hdGl2ZSBob3N0IGZvciBIaXBjaGF0LgogICNoaXBjaGF0X2FwaV91cmw6ICdodHRwczovL2hpcGNoYXQuZm9vYmFyLm9yZy8nCiAgb3BzZ2VuaWVfYXBpX2tleTogJzEyN2FjYjUzLTIyYmItNDlkMC04Y2I4LWU5NGJiYjQ1YWZmMicKCgojIFRoZSBkaXJlY3RvcnkgZnJvbSB3aGljaCBub3RpZmljYXRpb24gdGVtcGxhdGVzIGFyZSByZWFkLgp0ZW1wbGF0ZXM6IAotICcvZXRjL2FsZXJ0bWFuYWdlci90ZW1wbGF0ZS8qLnRtcGwnCgojIFRoZSByb290IHJvdXRlIG9uIHdoaWNoIGVhY2ggaW5jb21pbmcgYWxlcnQgZW50ZXJzLgpyb3V0ZToKICAjIFRoZSBsYWJlbHMgYnkgd2hpY2ggaW5jb21pbmcgYWxlcnRzIGFyZSBncm91cGVkIHRvZ2V0aGVyLiBGb3IgZXhhbXBsZSwKICAjIG11bHRpcGxlIGFsZXJ0cyBjb21pbmcgaW4gZm9yIGNsdXN0ZXI9QSBhbmQgYWxlcnRuYW1lPUxhdGVuY3lIaWdoIHdvdWxkCiAgIyBiZSBiYXRjaGVkIGludG8gYSBzaW5nbGUgZ3JvdXAuCiAgIwogICMgVG8gYWdncmVnYXRlIGJ5IGFsbCBwb3NzaWJsZSBsYWJlbHMgdXNlICcuLi4nIGFzIHRoZSBzb2xlIGxhYmVsIG5hbWUuCiAgIyBUaGlzIGVmZmVjdGl2ZWx5IGRpc2FibGVzIGFnZ3JlZ2F0aW9uIGVudGlyZWx5LCBwYXNzaW5nIHRocm91Z2ggYWxsCiAgIyBhbGVydHMgYXMtaXMuIFRoaXMgaXMgdW5saWtlbHkgdG8gYmUgd2hhdCB5b3Ugd2FudCwgdW5sZXNzIHlvdSBoYXZlCiAgIyBhIHZlcnkgbG93IGFsZXJ0IHZvbHVtZSBvciB5b3VyIHVwc3RyZWFtIG5vdGlmaWNhdGlvbiBzeXN0ZW0gcGVyZm9ybXMKICAjIGl0cyBvd24gZ3JvdXBpbmcuIEV4YW1wbGU6IGdyb3VwX2J5OiBbLi4uXQogIGdyb3VwX2J5OiBbJ2FsZXJ0bmFtZScsICdyY19lZGdlaWQnLCAnc2VydmljZSddCgogICMgV2hlbiBhIG5ldyBncm91cCBvZiBhbGVydHMgaXMgY3JlYXRlZCBieSBhbiBpbmNvbWluZyBhbGVydCwgd2FpdCBhdAogICMgbGVhc3QgJ2dyb3VwX3dhaXQnIHRvIHNlbmQgdGhlIGluaXRpYWwgbm90aWZpY2F0aW9uLgogICMgVGhpcyB3YXkgZW5zdXJlcyB0aGF0IHlvdSBnZXQgbXVsdGlwbGUgYWxlcnRzIGZvciB0aGUgc2FtZSBncm91cCB0aGF0IHN0YXJ0CiAgIyBmaXJpbmcgc2hvcnRseSBhZnRlciBhbm90aGVyIGFyZSBiYXRjaGVkIHRvZ2V0aGVyIG9uIHRoZSBmaXJzdCAKICAjIG5vdGlmaWNhdGlvbi4KICBncm91cF93YWl0OiAzMHMKCiAgIyBXaGVuIHRoZSBmaXJzdCBub3RpZmljYXRpb24gd2FzIHNlbnQsIHdhaXQgJ2dyb3VwX2ludGVydmFsJyB0byBzZW5kIGEgYmF0Y2gKICAjIG9mIG5ldyBhbGVydHMgdGhhdCBzdGFydGVkIGZpcmluZyBmb3IgdGhhdCBncm91cC4KICBncm91cF9pbnRlcnZhbDogNW0KCiAgIyBJZiBhbiBhbGVydCBoYXMgc3VjY2Vzc2Z1bGx5IGJlZW4gc2VudCwgd2FpdCAncmVwZWF0X2ludGVydmFsJyB0bwogICMgcmVzZW5kIHRoZW0uCiAgcmVwZWF0X2ludGVydmFsOiAzaCAKCiAgIyBBIGRlZmF1bHQgcmVjZWl2ZXIKCiAgcmVjZWl2ZXI6IHRlYW0tb3BzLWdlbmllCgoKICAjIEFsbCB0aGUgYWJvdmUgYXR0cmlidXRlcyBhcmUgaW5oZXJpdGVkIGJ5IGFsbCBjaGlsZCByb3V0ZXMgYW5kIGNhbiAKICAjIG92ZXJ3cml0dGVuIG9uIGVhY2guCgogICMgVGhlIGNoaWxkIHJvdXRlIHRyZWVzLgogIHJvdXRlczoKICAjIFRoaXMgcm91dGVzIHBlcmZvcm1zIGEgcmVndWxhciBleHByZXNzaW9uIG1hdGNoIG9uIGFsZXJ0IGxhYmVscyB0bwogICMgY2F0Y2ggYWxlcnRzIHRoYXQgYXJlIHJlbGF0ZWQgdG8gYSBsaXN0IG9mIHNlcnZpY2VzLgogICMtIG1hdGNoX3JlOgogICMgICAgc2VydmljZTogXihmb28xfGZvbzJ8YmF6KSQKICAjICByZWNlaXZlcjogdGVhbS1YLW1haWxzCiAgIyAgIyBUaGUgc2VydmljZSBoYXMgYSBzdWItcm91dGUgZm9yIGNyaXRpY2FsIGFsZXJ0cywgYW55IGFsZXJ0cwogICMgICMgdGhhdCBkbyBub3QgbWF0Y2gsIGkuZS4gc2V2ZXJpdHkgIT0gY3JpdGljYWwsIGZhbGwtYmFjayB0byB0aGUKICAjICAjIHBhcmVudCBub2RlIGFuZCBhcmUgc2VudCB0byAndGVhbS1YLW1haWxzJwogICMgIHJvdXRlczoKICAjICAtIG1hdGNoOgogICMgICAgICBzZXZlcml0eTogY3JpdGljYWwKICAjICAgIHJlY2VpdmVyOiB0ZWFtLVgtcGFnZXIKICAjLSBtYXRjaDoKICAjICAgIHNlcnZpY2U6IGZpbGVzCiAgIyAgcmVjZWl2ZXI6IHRlYW0tWS1tYWlscwoKICAjICByb3V0ZXM6CiAgIyAgLSBtYXRjaDoKICAjICAgICAgc2V2ZXJpdHk6IGNyaXRpY2FsCiAgIyAgICByZWNlaXZlcjogdGVhbS1ZLXBhZ2VyCgogICMgVGhpcyByb3V0ZSBoYW5kbGVzIGFsbCBhbGVydHMgY29taW5nIGZyb20gYSBkYXRhYmFzZSBzZXJ2aWNlLiBJZiB0aGVyZSdzCiAgIyBubyB0ZWFtIHRvIGhhbmRsZSBpdCwgaXQgZGVmYXVsdHMgdG8gdGhlIERCIHRlYW0uCiAgIy0gbWF0Y2g6CiAgIyAgICBzZXJ2aWNlOiBkYXRhYmFzZQogICMgIHJlY2VpdmVyOiB0ZWFtLURCLXBhZ2VyCiAgICAjIEFsc28gZ3JvdXAgYWxlcnRzIGJ5IGFmZmVjdGVkIGRhdGFiYXNlLgogICMgIGdyb3VwX2J5OiBbYWxlcnRuYW1lLCBjbHVzdGVyLCBkYXRhYmFzZV0KICAjICByb3V0ZXM6CiAgIyAgLSBtYXRjaDoKICAjICAgICAgb3duZXI6IHRlYW0tWAogICMgICAgcmVjZWl2ZXI6IHRlYW0tWC1wYWdlcgogICMgICAgY29udGludWU6IHRydWUKICAjICAtIG1hdGNoOgogICMgICAgICBvd25lcjogdGVhbS1ZCiAgIyAgICByZWNlaXZlcjogdGVhbS1ZLXBhZ2VyCgogIC0gcmVjZWl2ZXI6ICdvcHNnZW5pZS1oZWFydGJlYXQnCiAgICBtYXRjaDoKICAgICAgYWxlcnRuYW1lOiBEZWFkTWFuc1N3aXRjaAogICAgZ3JvdXBfd2FpdDogMzBzCiAgICBncm91cF9pbnRlcnZhbDogMzBzCiAgICByZXBlYXRfaW50ZXJ2YWw6IDMwcwoKCiMgSW5oaWJpdGlvbiBydWxlcyBhbGxvdyB0byBtdXRlIGEgc2V0IG9mIGFsZXJ0cyBnaXZlbiB0aGF0IGFub3RoZXIgYWxlcnQgaXMKIyBmaXJpbmcuCiMgV2UgdXNlIHRoaXMgdG8gbXV0ZSBhbnkgd2FybmluZy1sZXZlbCBub3RpZmljYXRpb25zIGlmIHRoZSBzYW1lIGFsZXJ0IGlzIAojIGFscmVhZHkgY3JpdGljYWwuCmluaGliaXRfcnVsZXM6Ci0gc291cmNlX21hdGNoOgogICAgc2V2ZXJpdHk6ICdjcml0aWNhbCcKICB0YXJnZXRfbWF0Y2g6CiAgICBzZXZlcml0eTogJ3dhcm5pbmcnCiAgIyBBcHBseSBpbmhpYml0aW9uIGlmIHRoZSBhbGVydG5hbWUgaXMgdGhlIHNhbWUuCiAgZXF1YWw6IFsnYWxlcnRuYW1lJywgJ3JjX2VkZ2VpZCcsICdzZXJ2aWNlJ10KCgpyZWNlaXZlcnM6Ci0gbmFtZTogZGVhZG1hbnNzd2l0Y2gKCgoKLSBuYW1lOiAndGVhbS1vcHMtZ2VuaWUnCiAgb3BzZ2VuaWVfY29uZmlnczoKICAtIHNlbmRfcmVzb2x2ZWQ6IHRydWUKICAgIHRlYW1zOiBPcGVyYXRpb25zLVN0YWdpbmcKICAgIHRhZ3M6ICd7eyByYW5nZSAuQWxlcnRzIH19e3sgLkxhYmVscy5WYWx1ZXMgfCBqb2luICIsIiB9fXt7ZW5kfX0nCiAgICBwcmlvcml0eTogJ3t7IHJhbmdlIC5BbGVydHMgfX17eyBpZiBlcSAuTGFiZWxzLnNldmVyaXR5ICJjcml0aWNhbCJ9fVAxe3tlbHNlfX1QM3t7ZW5kfX17e2VuZH19JwoKLSBuYW1lOiAnb3BzZ2VuaWUtaGVhcnRiZWF0JwogIHdlYmhvb2tfY29uZmlnczoKICAtIHVybDogJ2h0dHBzOi8vYXBpLm9wc2dlbmllLmNvbS92Mi9oZWFydGJlYXRzL3Byb21ldGhldXMuZW1wOXoyOC5lYXN0LXVzMS5henVyZS5lZGdlLnN0YWdlLnJhZmF5LWVkZ2UubmV0LnN0YWdpbmcvcGluZz9hcGlLZXk9MTI3YWNiNTMtMjJiYi00OWQwLThjYjgtZTk0YmJiNDVhZmYyJwogICAgc2VuZF9yZXNvbHZlZDogdHJ1ZQoK
      kind: Secret
      metadata:
        annotations:
          paralus.dev/overridedBy: cluster/default-override-eks-london-1118
        name: alertmanager-main
        namespace: paralus-infra
      type: Opaque
  - name: kube-state-metrics-service-account
    object:
      apiVersion: v1
      kind: ServiceAccount
      metadata:
        name: kube-state-metrics
        namespace: paralus-infra
  - name: kube-state-metrics-cluster-role
    object:
      apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRole
      metadata:
        name: kube-state-metrics
      rules:
      - apiGroups:
        - ""
        resources:
        - configmaps
        - secrets
        - nodes
        - pods
        - services
        - resourcequotas
        - replicationcontrollers
        - limitranges
        - persistentvolumeclaims
        - persistentvolumes
        - namespaces
        - endpoints
        verbs:
        - list
        - watch
      - apiGroups:
        - extensions
        resources:
        - daemonsets
        - deployments
        - replicasets
        verbs:
        - list
        - watch
      - apiGroups:
        - apps
        resources:
        - statefulsets
        - daemonsets
        - deployments
        - replicasets
        verbs:
        - list
        - watch
      - apiGroups:
        - batch
        resources:
        - cronjobs
        - jobs
        verbs:
        - list
        - watch
      - apiGroups:
        - autoscaling
        resources:
        - horizontalpodautoscalers
        verbs:
        - list
        - watch
      - apiGroups:
        - authentication.k8s.io
        resources:
        - tokenreviews
        verbs:
        - create
      - apiGroups:
        - authorization.k8s.io
        resources:
        - subjectaccessreviews
        verbs:
        - create
  - name: kube-state-metrics-cluster-role-binding
    object:
      apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRoleBinding
      metadata:
        name: kube-state-metrics
      roleRef:
        apiGroup: rbac.authorization.k8s.io
        kind: ClusterRole
        name: kube-state-metrics
      subjects:
      - kind: ServiceAccount
        name: kube-state-metrics
        namespace: paralus-infra
  - name: kube-state-metrics-role
    object:
      apiVersion: rbac.authorization.k8s.io/v1
      kind: Role
      metadata:
        name: kube-state-metrics
        namespace: paralus-infra
      rules:
      - apiGroups:
        - ""
        resources:
        - pods
        verbs:
        - get
      - apiGroups:
        - extensions
        resourceNames:
        - kube-state-metrics
        resources:
        - deployments
        verbs:
        - get
        - update
      - apiGroups:
        - apps
        resourceNames:
        - kube-state-metrics
        resources:
        - deployments
        verbs:
        - get
        - update
  - name: kube-state-metrics-rolebinding
    object:
      apiVersion: rbac.authorization.k8s.io/v1
      kind: RoleBinding
      metadata:
        name: kube-state-metrics
        namespace: paralus-infra
      roleRef:
        apiGroup: rbac.authorization.k8s.io
        kind: Role
        name: kube-state-metrics
      subjects:
      - kind: ServiceAccount
        name: kube-state-metrics
        namespace: paralus-infra
  - name: node-exporter-serviceaccount
    object:
      apiVersion: v1
      kind: ServiceAccount
      metadata:
        name: node-exporter
        namespace: paralus-infra
  - name: node-exporter-cluster-role
    object:
      apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRole
      metadata:
        name: node-exporter
      rules:
      - apiGroups:
        - authentication.k8s.io
        resources:
        - tokenreviews
        verbs:
        - create
      - apiGroups:
        - authorization.k8s.io
        resources:
        - subjectaccessreviews
        verbs:
        - create
  - name: node-exporter-cluster-role-binding
    object:
      apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRoleBinding
      metadata:
        name: node-exporter
      roleRef:
        apiGroup: rbac.authorization.k8s.io
        kind: ClusterRole
        name: node-exporter
      subjects:
      - kind: ServiceAccount
        name: node-exporter
        namespace: paralus-infra
  - name: prometheus-adapter-service-account
    object:
      apiVersion: v1
      kind: ServiceAccount
      metadata:
        name: prometheus-adapter
        namespace: paralus-infra
  - name: prometheus-adapter-cluster-role
    object:
      apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRole
      metadata:
        name: prometheus-adapter
      rules:
      - apiGroups:
        - ""
        resources:
        - nodes
        - namespaces
        - pods
        - services
        verbs:
        - get
        - list
        - watch
  - name: prometheus-adapter-cluster-role-binding
    object:
      apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRoleBinding
      metadata:
        name: prometheus-adapter
        namespace: paralus-infra
      roleRef:
        apiGroup: rbac.authorization.k8s.io
        kind: ClusterRole
        name: prometheus-adapter
      subjects:
      - kind: ServiceAccount
        name: prometheus-adapter
        namespace: paralus-infra
  - name: prometheus-adapter-cluster-role-binding-delegator
    object:
      apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRoleBinding
      metadata:
        name: resource-metrics:system:auth-delegator
      roleRef:
        apiGroup: rbac.authorization.k8s.io
        kind: ClusterRole
        name: system:auth-delegator
      subjects:
      - kind: ServiceAccount
        name: prometheus-adapter
        namespace: paralus-infra
  - name: prometheus-adapter-cluster-role-server-resources
    object:
      apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRole
      metadata:
        name: resource-metrics-server-resources
      rules:
      - apiGroups:
        - custom.metrics.k8s.io
        resources:
        - '*'
        verbs:
        - '*'
  - name: prometheus-adapter-configmap
    object:
      apiVersion: v1
      data:
        config.yaml: |
          resourceRules:
            cpu:
              containerQuery: sum(rate(container_cpu_usage_seconds_total{<<.LabelMatchers>>}[1m])) by (<<.GroupBy>>)
              nodeQuery: sum(rate(container_cpu_usage_seconds_total{<<.LabelMatchers>>, id='/'}[1m])) by (<<.GroupBy>>)
              resources:
                overrides:
                  node:
                    resource: node
                  namespace:
                    resource: namespace
                  pod_name:
                    resource: pod
              containerLabel: container_name
            memory:
              containerQuery: sum(container_memory_working_set_bytes{<<.LabelMatchers>>}) by (<<.GroupBy>>)
              nodeQuery: sum(container_memory_working_set_bytes{<<.LabelMatchers>>,id='/'}) by (<<.GroupBy>>)
              resources:
                overrides:
                  node:
                    resource: node
                  namespace:
                    resource: namespace
                  pod_name:
                    resource: pod
              containerLabel: container_name
            window: 1m
      kind: ConfigMap
      metadata:
        name: adapter-config
        namespace: paralus-infra
  - name: prometheus-adapter-role-binding-auth-reader
    object:
      apiVersion: rbac.authorization.k8s.io/v1
      kind: RoleBinding
      metadata:
        name: resource-metrics-auth-reader
        namespace: kube-system
      roleRef:
        apiGroup: rbac.authorization.k8s.io
        kind: Role
        name: extension-apiserver-authentication-reader
      subjects:
      - kind: ServiceAccount
        name: prometheus-adapter
        namespace: paralus-infra
  - name: prometheus-k8s-edge-creds-configmap
    object:
      apiVersion: v1
      data:
        ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUZtekNDQTRPZ0F3SUJBZ0lVVkVPcmZYNzlOYk04QlViOHhUbnR0eGFxWWljd0RRWUpLb1pJaHZjTkFRRU4KQlFBd1pERUxNQWtHQTFVRUJoTUNWVk14Q3pBSkJnTlZCQWdUQWtOQk1SSXdFQVlEVlFRSEV3bFRkVzV1ZVhaaApiR1V4R3pBWkJnTlZCQW9URWxKaFptRjVJRk41YzNSbGJYTWdTVzVqTGpFWE1CVUdBMVVFQXd3T2NtRm1ZWGxmCmFXNW1jbUZmWTJFd0hoY05NVGd3TWpFMk1EQXhNakF3V2hjTk1qTXdNakUxTURBeE1qQXdXakJrTVFzd0NRWUQKVlFRR0V3SlZVekVMTUFrR0ExVUVDQk1DUTBFeEVqQVFCZ05WQkFjVENWTjFibTU1ZG1Gc1pURWJNQmtHQTFVRQpDaE1TVW1GbVlYa2dVM2x6ZEdWdGN5QkpibU11TVJjd0ZRWURWUVFEREE1eVlXWmhlVjlwYm1aeVlWOWpZVENDCkFpSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnSVBBRENDQWdvQ2dnSUJBTHdQdk9UME5JanBLV0YraWVieVlYakUKUkMwcGpvYmRUTmVHSndzQmlvbmQwMVR4NmxxbEtFS1k3Z1dpQUo2YUxETm5LY0FyR3lqa3N4UGl3MUZtVWRYZwo5YnVreDNkRWJLcU5ZV3p3dmFsSEUwZVZzeEZ1SlBoZkVBYmxLYWN2NDVRYTJrWHBDUXhJMWdURFFicW1SK2pGCkFqaENHbWRhZmJJTVNaS1F1VnphNEN0MnR6eHM1RUxBQjByK1NDajVkSXU5YUpsYld6cTh0ejRZc042VHpDMDEKcDV1UlVORTlQSDM1UVQ0bXRMSk54dFlrZVEvL1pOcGNXelRxM3dvNFQ2ZkZSNnRJcys1WXRrTWhCRW5ybDR2awo5ank3L3QyZUQ3aDllSnRKTXRKb3pGR1hFNG0ydDhnOEc0eEVRSEZNK1ZyMlZpcVB0YnVraks3ekxERURGUkhFCnZnNmxWM2hPTEphRWRLY05WUGgrdXlkQmpYbHdSdHVHZE5sYlhhdGh2cDlicksvcEI0bldZckV1NnJUaFFVMnoKVVN4SHNkLzRoQU1yZUlIL1lQQnUzeDVRaCtRL3NTTEc3dGUwR1ZUdCt2c0JjTkN5cGhlQksxUmZOMi9rNWVxQwpHVW9GZjNsVU1VcE1BemFGdTF5ZTU4blAwU2RyQkdmM2IzVU80eW8rUU44Wk5ZdUVHZUJLKzdDZU9PSzhrbkVlCjZvT29JcDE0SDVQYy9PTUFYUlNvNUR3cUhxNUJqa2IyOVRINzUwVk5KQmtORVVyWkhORUJaQmh0V1NhcjZ5TGwKYWt3TXJOS3FJR3BFdUVXQk1kSmMvdUlJYWIzK29wSnZXQnVtcWFGcUpnK0JrL2NUSTh3NEM4YVpiWkFVckk2TwplUENZZkFSM242QTBwOFlsb0k3SkFnTUJBQUdqUlRCRE1BNEdBMVVkRHdFQi93UUVBd0lCQmpBU0JnTlZIUk1CCkFmOEVDREFHQVFIL0FnRUNNQjBHQTFVZERnUVdCQlRWdkxpUWs4a0dHTkxTS25VN0g1anRmd0lKMlRBTkJna3EKaGtpRzl3MEJBUTBGQUFPQ0FnRUFuVmlIRks4ZGZiNWhuaGNobVB5YU9xM3I3VWUvQTlsTkQ4cXdneGIwYVNTeAozRm5yQnJXMEVZckN2ajNXTkFqVG5NUnhjVkc5RlNXVm1sRVBodVBSTkQwcitIUWpKNGJBTGRkL09yU2JLOWFDCm14cnpacitMaXFrbmo3YlQxVGZmSDJEZUlQdGl5d1l1eEw0T2VjV0hXT29YaGVmWXgrVUViSmJNMnpVeXd0bGsKRUpXT3RSZGZGM2x4c0JJemx1L3cxYXl1eGhTLzdzcFVVbG1kUHBUZUhMUkM2K3NRM1lreC8zT1dJWm9hRWdpNwpzM2xCajdGYmpLaldVNDczKytrN1dOOGFERDRMRnIvZGdsNjQ3ZGVBdEJGU2IvYUJqVVkyK1BPYU1sK2xVZTF6CjVWR2x1T0lNTDU3TXhWR0lOdXJpekxwZldZcG5ydkNjRzRQd1d2a2N1RGt1K29EbTF4OTNsaHkyM1ZwUGh3Rk0KMUtYZldhVklGeXBjSFRxZW8rS3R4OUpuNjF2RGd5amFqQ0RmODA0WVMwaTRmZVQ1VzZ4cmdBMEQxRmxHL2NxUgpqUXRHRHIrMUpLbDR1VWl0bzNtTU80T1gzVktRSnhCbUoxa2pOZGZkTXNCcjg2aDNRbG5KYnNBU0ZiVFZtS21zCjVWS3RBV1cwTkV3bUFsWG0rQXZtSE9aMXd0ZlJiR2V3dXVpaDNmTDhISGdQbEUrZmtaUjVwWUVtVFd3UmZ3KysKNC9pVGNEWGg3MkNhVUZ6cWlwUmNUdGJhcHZvZjRobGpuZi8rWEx3Q0RLUWN5UVN4ZEdhaEtqT3NGNW40dTdnZgpmaWZBa1g0VExqV0g1Q2liSXBQNUw1TDdXSVhpUjI0N3paWnpYOE4ySEdCMHZnQ1A1Y1Nsb0Vyb1U5V2xVamM9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
        client.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUdoRENDQkd5Z0F3SUJBZ0lRVVdtOWVPZjFPbXY0VS9meTQ5bk0rVEFOQmdrcWhraUc5dzBCQVFzRkFEQmsKTVFzd0NRWURWUVFHRXdKVlV6RUxNQWtHQTFVRUNCTUNRMEV4RWpBUUJnTlZCQWNUQ1ZOMWJtNTVkbUZzWlRFYgpNQmtHQTFVRUNoTVNVbUZtWVhrZ1UzbHpkR1Z0Y3lCSmJtTXVNUmN3RlFZRFZRUUREQTV5WVdaaGVWOXBibVp5CllWOWpZVEFlRncweE9URXhNVGd5TVRBM01ESmFGdzB5TkRFeU1Ua3lNVEEzTURKYU1JSGpNUXN3Q1FZRFZRUUcKRXdKVlV6RUxNQWtHQTFVRUNCTUNRMEV4RWpBUUJnTlZCQWNUQ1ZOMWJtNTVkbUZzWlRFNk1EZ0dBMVVFQ2hNeApaekk1Ykc5bE1pNXdjbWwyWVhSbExuQnJkbmQyTW00dVpXUm5aUzV6ZEdGblpTNXlZV1poZVMxbFpHZGxMbTVsCmRERXJNQ2tHQTFVRUN4TWlkMjl5YTJ4dllXUXVZMjl5WlM1emRHRm5aUzV5WVdaaGVTMWxaR2RsTG01bGRERksKTUVnR0ExVUVBeE5CZDI5eWEyeHZZV1F0WTJ4cFpXNTBMbWN5T1d4dlpUSXVjSEpwZG1GMFpTNXdhM1ozZGpKdQpMbVZrWjJVdWMzUmhaMlV1Y21GbVlYa3RaV1JuWlM1dVpYUXdnZ0lpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElDCkR3QXdnZ0lLQW9JQ0FRRDJmb2syTVZxeEprQ25vYzRTQ1l1RnQ3MXZoWkFJVmJ5YVNTMVNnUkxxYWFxOS9FdmEKYWJSVkVxL3NsT2dDSkhOWjRlQkx3TnhJbWtEMGNISWlUTGp3cGlhWCtiV1MxNTExcFNnS1YzWUVGKzYwYUxBOApGdDladjNCZUZOY0llZHlPQ2YzMGpsV1g4ajQ4eU9RSXV0Q2lFWlVuWUp5WlliQlZBczRBTUViT3A4Y2ZTeGZVCkRmMXdrVEs5MTVwSm5VY3p4TnNrbDdndnRQTmpPc1F2SmkzV2QyU3RSS0czaWNxVEtNUUYwTGpoOWM4cS9STmsKUExUQnpBSVg4emdZYnJVU2xKSVMraHBtVXVQLys5RnhrUHRHdFp2dnNXamlVclFCQ0I4WkpoTmRzeWpVWnJkNAprM05zYW1oL1FTdjltRzJDQW9zYU8rTFAzc0haUnh0TGhMZERlaGlrc3p0NWo3K0krRTVZNEw5bm1PbE1HUG1yCjhBNUIvVWF5RTBQYzl6VlFHSDlnL1V5MVhVZEdhaTlGSmEvOE9SMndtVHJ5dHR5QythZnUveXh4VWdyRWxtVVQKZ1RYNmRLb08yakJHRFNqVGVidlMyNDZKcE1sODJPKzdFTzFSOFlNakxHNktzT3lnQ24zK0J1UkdDNUphY1J1NQo5Sm4zZHM3Q0szOGFkNTdLUWYwYkIxdWhyN2xqODY0SU8xZURoWkw3UGpCOEdtb2VSVGU4M0pkTktnajZJWFNXCnRSenZ1QUFlUjhlT2N4eUlmbnFZYjlGajF5emJlY2RDM2J6OEsxZE5RQnU1YmdtMGVqejZBTytkNlJ3bzh0WkUKWjdrc0JXUWJIeXF0Y1JGb3g1RllDOEpYR1g2QTZ4N0JBSVdNY2NoUlZiVzJ4ZVpoTEVsbi9EQXdtUUlEQVFBQgpvNEd4TUlHdU1BNEdBMVVkRHdFQi93UUVBd0lGb0RBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFnWUlLd1lCCkJRVUhBd0V3RGdZRFZSME9CQWNFQlFFQ0F3UUZNQjhHQTFVZEl3UVlNQmFBRk5XOHVKQ1R5UVlZMHRJcWRUc2YKbU8xL0FnblpNRXdHQTFVZEVRUkZNRU9DUVhkdmNtdHNiMkZrTFdOc2FXVnVkQzVuTWpsc2IyVXlMbkJ5YVhaaApkR1V1Y0d0MmQzWXliaTVsWkdkbExuTjBZV2RsTG5KaFptRjVMV1ZrWjJVdWJtVjBNQTBHQ1NxR1NJYjNEUUVCCkN3VUFBNElDQVFBUVo3WS9xSUttRFRQUnYxS1BrTHRvQ2VLbmZIN2FBL1ppM05LTzBsOFRCK052cWN3dUhnL04KdXVBNjhmbjlMdXNFZkNJelNBV0Zid3M5Rm5mYmgvZHFMU3R6V1VmeXphYVprY2N6OVMvZ0ZkTjlrKzBPV3ZBNQo5bDUrcXo4YXZsNWhiM3I2TVJKdTV3WUx4a0NCcUFSOElkb0VvcjlZRkRXTXhDR2ozUFNkVTBybHJ4aWRQWU5zClBadnovMml2anJtRFI4Nk9GcjZKbjVkRVR6U3pOTVUxaGlVbldLUzlTSzgyNnVCbHJYZmdOYmhXVGdwLzc5STQKL1RBMnNRQlBZbGs1ejJFWnliMG9taVB0YlhORE9ERjI2L1JFN2JjeWJZRnB4NFB1K1psSC9EUnFSbjNOaGx5eQpJTDl3VmFXeTJRR0dQUFNwOVFmZzlHYVNkaEtoSnllTElGeEJySDBEbW1uR0FaczZwZHR0NWhMZzhmQ0syYnJzCkhtOExRanFITk5XSTFUUHkvS0VRaXhFQzI3b3ErWGRFY2NHWnZjUjVIUUF6eDgramJmOW9hVm0rb256dlF5MHIKeXZtR216V2JXSzdrS3d6V1pockRWb0NlN2pQQ3graUF4bGZ2OVdoMjIwMlljdW5WYUs0M2M5Tnl4WkZTRVE4RwpyK3J3RHpuODFJV1NiUG9FZTlHK3dCZUFGNk5wWUlVRCtWdjY0cERlRS9ZMFR2OFBGdkJyMXd1ZG1uaTBMOFVoCmZJVjI3aXhMOXh3eWRNMUZjdWsrWGprVGphTHd6NmRnUHl6UUw4UkpnSFZ3N3RnZW5weXR3amhTRjU5NjlvNDcKVlR4dXhxV2NxT2NpMWRoMWl0em9VYzJEWmJXOTdtNWxsb0JlOGlFVDFIdjlLSjd2eStGb1Z3PT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
        client.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlKS0FJQkFBS0NBZ0VBOW42Sk5qRmFzU1pBcDZIT0VnbUxoYmU5YjRXUUNGVzhta2t0VW9FUzZtbXF2ZnhMCjJtbTBWUkt2N0pUb0FpUnpXZUhnUzhEY1NKcEE5SEJ5SWt5NDhLWW1sL20xa3RlZGRhVW9DbGQyQkJmdXRHaXcKUEJiZldiOXdYaFRYQ0huY2pnbjk5STVWbC9JK1BNamtDTHJRb2hHVkoyQ2NtV0d3VlFMT0FEQkd6cWZISDBzWAoxQTM5Y0pFeXZkZWFTWjFITThUYkpKZTRMN1R6WXpyRUx5WXQxbmRrclVTaHQ0bktreWpFQmRDNDRmWFBLdjBUClpEeTB3Y3dDRi9NNEdHNjFFcFNTRXZvYVpsTGovL3ZSY1pEN1JyV2I3N0ZvNGxLMEFRZ2ZHU1lUWGJNbzFHYTMKZUpOemJHcG9mMEVyL1podGdnS0xHanZpejk3QjJVY2JTNFMzUTNvWXBMTTdlWSsvaVBoT1dPQy9aNWpwVEJqNQpxL0FPUWYxR3NoTkQzUGMxVUJoL1lQMU10VjFIUm1vdlJTV3YvRGtkc0prNjhyYmNndm1uN3Y4c2NWSUt4SlpsCkU0RTErblNxRHRvd1JnMG8wM203MHR1T2lhVEpmTmp2dXhEdFVmR0RJeXh1aXJEc29BcDkvZ2JrUmd1U1duRWIKdWZTWjkzYk93aXQvR25lZXlrSDlHd2Rib2ErNVkvT3VDRHRYZzRXUyt6NHdmQnBxSGtVM3ZOeVhUU29JK2lGMApsclVjNzdnQUhrZkhqbk1jaUg1Nm1HL1JZOWNzMjNuSFF0MjgvQ3RYVFVBYnVXNEp0SG84K2dEdm5la2NLUExXClJHZTVMQVZrR3g4cXJYRVJhTWVSV0F2Q1Z4bCtnT3Nld1FDRmpISElVVlcxdHNYbVlTeEpaL3d3TUprQ0F3RUEKQVFLQ0FnQk1nMVNtTE1YQkRXV3VZeXhyTHVsUE5ZeW83R1djSUxqdGoxOXhKNzJ1WStSckdzQ1U2SkRnZzI5MgpXWFozQzhkK2svMmlwaGY2dFY4S1FVazhXbUpoMk1GTUZXZ0dUOFdCdWlWbXFHVnF1ZDhQd3h0Slc3UXkwSmpaCnExQmdRaXR6TDZqVDI4YTM1cXJwQlZhN1d2bmVCT1V1bHUrbE1NeWlacjk1RVlNNUxKMURtblNvRHp1blVIclcKc1BFa2ZweVdkam1yN3lodUxwWUtMRGl2aGdOZWVpc1hHYUcxTGlGaWNwbitVQjdEalNDa2NIQXZnaVI5cjR6SwowR1dPTi9jZThGMHpaTTBERENIWDJOdlhpN0JqNzRXYTdvL25DTkwxS3djME1EeDhybHN6S3pzeVExcmx3VlgwCmdrOWNaWTlBZHZla3lnZ0tqRlBSMVIrazNtcGYvTGNpREhDUXA3MVhaemNjZm5RbmMwVmpDUG1Zc1RKTHdtU2MKQzJwbGpzN2hzUnR4S0RFYWlNRURHSmZXODRZeVFWMFV2WnNEM0N2djdvVTArWmVrNEFUTE1XRSttbEtoN01qTgptMUMzTFlrOHdGaExwRkNDaVVhc043azMzQ3czQThIb2Jhbi92dld2VEgvTXkxVEpQeHBpYm5HUGkxN0EreGhKCnZrSW1ra3pzYTRJZDQ0VTRRU3g1a0pDcVczMldWaG41YnNLcWRWcGZtazF6bmFzN2g3a1JzZUs5dEcwZGMwajAKdjJtV3puYlloVDRmcFhKUkFiV1lkZ3g2NjNsUzdwR1pxVkJYZ1FnU0doYk5UZ3FTWElJQkhsVnVWWW1md2pMcgpSOUNmTC8wYWY1YldOeHdlSUhTdTVMTFU1UldCdTJLQ01WRU9jb21KUGVabmFtZkNjUUtDQVFFQS9NREI1Y09pCnR0MFdMZnFIQ0RGcUVjamtjZmNFUXdyWlM0dWsvaURkZ0dTK0VXd2FKeG1FazRnWGNTUFJ3OW1RTmtFdDZ6OWMKMU1iVHRDeFF6MVMzSFNBWFRObmJPbW4wT1VGK3FWWDBjSkFDNENzb28wSW01dHhrYkQvbHkwYURrdVNoOHZqeApHMy9PQjJadEFDZTh5Y3NHV0RkQ3dHTHphVTNlZUNjbno3aVVTTzFoU01EaEY0cXhNeUVtdUwwd2VFY1ZXTTZkCm56b2FXMjlENm8xUHBJcGd2TlZNaFRWeHc1cGVEV1E0ZEZnR3BoVGJhekVtRzZKOWJJOGh2Y1RXUDZMVUNGUloKNU1SdUJRaTZMQW8xTGVSWjhsaDU2UVZHOHhCN2QrbmlrWGhyUGc1ZzlzK21TMm4rb2lUTWJoVHBqYTEyK293aAoyVUM3RkV4SmVJTEtWUUtDQVFFQStha3lBQSszYnVuSWZvT0s1dHJPTGtqSW54eTFXNEYzRzJoeGFub2hrSTV5ClpDSTE5MGZPa2dFdFJDK0pDUFFpelV5Q0pIZEZBSlFuaFNUK3FPVU1VcDZhVlZSblFqMFFueERsbkZyOFlEbXoKTWlYUUUvcUFtQ0liT2REc0VkZHhEdWwwTGhjcHY2TzhCbk5tOUt1OTJQNnF3UXJZK0ttdHNIMkxTakVEdWhiNgpZYUVVbUNWWVFRcFZVR2puV09aSTQwbGNwTWxWWFIwTkxlTlQveTNHK0RlTExHcHcvcUI3SkxQNVI3WGZjRjZRCkhWbkNkYmh2VUYyME9GSWc4d1A4RjUzNFdDaHBmNGtxU3R3S3R6eWN4MHRSbTkrNXE1ZE13VUEyZW1SSG8wMmEKNFl2YUlGVWZBcEkxT2pHRkJ1T1I1MXgxcU9FVEhIRW1mMGkvQS9JWk5RS0NBUUJUeGlmK1dkdWl0S0RYV0lSTgpLT081UlZiQ2wxY29TWDVBVmVhMy9IaXVSN1hmM0c3R3F1U1FhYmtyWE8zMzlqS2dhUFlwVlBVVjZWamVEUm96CnZpWjdWdG1pTlVzK2owUE5mbkhXK3BCc2hxOE5VZ0RFSy9iczZmdTNEVzdDODNwRXc5Y1J5NFZPMGd1ZDFFc28KbEFNMDkwQUJHVC9jdUc5cFpjL3BEMEZZemhzSUdQWDN3VVphSVRRZWVFeDNTdTIzMEFlNVNiSmd4a2RhS3dUZAp4enl3a3RVQmdjazlGYnZCVTNiOUJVelk4eHd4REJTMThMSnEwbTZ6L3JUMlN6bWdHZjRoVEtRRytUeG1Hc0JxClBHL242Qm9RQTFkVTd0VFhWNDAwNzZhVEJOQzIzdGt3dFI2dlBGQ1R1Wkt3b2VuUGRjRkx4Z3FxRVpSd1krQ3UKT3R1SkFvSUJBUUNrMHZvcXBqV2hLUUR2M1dKZnBNY0lNWThaMUxjNjBVOVVMZkRxcmZUbzNkSlJuM0JuYitYRgo2TGI4MURFeFV4U0MyMmIwTWpYQSt3N1lUU00vVi9CNXZ6SCs4YmsyTnVCNVU0dHpYWEpQQ09qd1M1eURCQmZQCjJIeUhBQkpLZVNTd0JwcG9MMnlsazdCM3hjcUw3N0pueDBIdUxuNHVOTDl4eklDZ0c1bnRTbXhFOWphRmQrbzcKRGxwaXVzODVsdGM2RHQzMkFPRzFsbzl6NHlnNlNQdWFOZmxRK25qYzhoQTZuQU1RUDlkaTlWdEp0VSszcm1yMgo4TlloZEw5Q0VUaG1VeWw0OGowc01OOVdDczJjU1l6cjJpTG51SjE0MW11YkRneXBZdmtVckJCN3BYdjlhcFVOCmVuOWZpdi9iRzNUZy9ON0Uvc3RDTk1XSXRQcyszSitkQW9JQkFBWEgvZTdKVGdwdGpUYWRhL25LZS8vYTdJb1gKOEpsNm1DQjVxRTY0bmVyM1pxODkvYmlUd25MVjVCakZSeEh4WHhPeEtmYnIwTGRraXIyUHZRbEt6ZnJtbi85NApQRksyeDRESVliSkJINFZEQlZRblN5M0s2WEtSMnoyUnJpZHBnVDhKQjkydGIvNTFZK21hZXFHVjU5b0VoNEcrCjlRYUtRc0R0Ry8vZWdOdDlyVEl6d1VDakF2dU00TW9XWnJTd3NRUXQ3czVJd0lhMGpKVGZZRjhya3djWGxiWGEKTXBtU2VQaEQwSXM5MDROZVBoZ3ZYS2RPQTh6QWtPR3k2TmtMekZDbnFVSkNlV0dZZ0pXMWtONUFqa3JabHFxcQpML1MrMGRSeHdhQ3RKNzVoN0l0SUNnQlh5WUp4TUk4QkxWdWdRSEc0RlV0VmdjNEt3UldOa2VJaGwrbz0KLS0tLS1FTkQgUlNBIFBSSVZBVEUgS0VZLS0tLS0K
      kind: Secret
      metadata:
        annotations:
          paralus.dev/overridedBy: cluster/default-override-eks-london-1118
        name: edge-creds
        namespace: paralus-infra
      type: Opaque
  tasklet:
    metadata:
      creationTimestamp: null
      finalizers:
      - cluster.paralus.dev.v2.predelete
      name: v1-prometheus
      namespace: paralus-infra
    spec:
      init:
      - name: prometheus-k8s-prometheus
        object:
          apiVersion: monitoring.coreos.com/v1
          kind: Prometheus
          metadata:
            annotations:
              paralus.dev/overridedBy: cluster/default-override-eks-london-1118
            labels:
              prometheus: k8s
            name: k8s
            namespace: paralus-infra
          spec:
            alerting:
              alertmanagers:
              - name: alertmanager-main
                namespace: paralus-infra
                port: web
            baseImage: quay.io/prometheus/prometheus
            evaluationInterval: 1m
            externalLabels:
              deployment_env: staging
              rc_edgeid: g29loe2.private.pkvwv2n.edge.stage.paralus-edge.net
            externalUrl: https://prometheusrelay.ops.stage.paralus-edge.net
            nodeSelector:
              beta.kubernetes.io/os: linux
            priorityClassName: paralus-cluster-critical
            remoteWrite:
            - queueConfig:
                batchSendDeadline: 10s
                capacity: 2000
                maxBackoff: 5m
                maxRetries: 15
                maxSamplesPerSend: 1000
                maxShards: 100
                minBackoff: 30s
                minShards: 1
              remoteTimeout: 60s
              tlsConfig:
                caFile: /etc/prometheus/secrets/edge-creds/ca.crt
                certFile: /etc/prometheus/secrets/edge-creds/client.crt
                keyFile: /etc/prometheus/secrets/edge-creds/client.key
                serverName: influxdb01.core.stage.paralus-edge.net
              url: https://influxdb01.core.stage.paralus-edge.net/api/v1/prom/write?db=monitoringdb&rp=shortterm&u=prometheus_svc&p=Paralus!98
              writeRelabelConfigs:
              - action: keep
                regex: rcloud.*|kube_daemonset_metadata_generation|kube_deployment_metadata_generation|node_cpu_seconds_total|kube_pod_container_status_running|kube_pod_container_resource_requests_cpu_cores|kube_pod_container_resource_limits_cpu_cores|node:node_num_cpu:sum|:node_memory_MemFreeCachedBuffers_bytes:sum|:node_memory_MemTotal_bytes:sum|node_memory_MemTotal_bytes|kube_pod_container_resource_requests_memory_bytes|kube_pod_container_resource_limits_memory_bytes|amespace_pod_name_container_name:container_cpu_usage_seconds_total:sum_rate|namespace_pod_name_container_name:container_cpu_usage_seconds_total:sum_rate|container_memory_rss|namespace_pod_name_container_name:container_cpu_usage_seconds_total:sum_rate|node:node_cpu_utilisation:avg1m|node:node_cpu_saturation_load1:|kube_pod_info|node:node_memory_utilisation:|node:node_memory_utilisation:ratio|node:node_memory_swap_io_bytes:sum_rate|node:node_disk_utilisation:avg_irate|:kube_pod_info_node_count:|node:node_disk_saturation:avg_irate|node:node_net_utilisation:sum_irate|node:node_net_saturation:sum_irate|node_filesystem_size_bytes|node_filesystem_avail_bytes|node_namespace_pod:kube_pod_info:|node_load1|node_load5|node_load15|node_memory_MemFree_bytes|node_memory_Buffers_bytes|node_memory_Cached_bytes|node_disk_read_bytes_total|node_disk_written_bytes_total|node_disk_io_time_seconds_total|node:node_filesystem_usage:|node_network_receive_bytes_total|node_network_transmit_bytes_total|container_memory_usage_bytes|kube_pod_container_resource_requests_memory_bytes|container_cpu_usage_seconds_total|container_network_receive_bytes_total|container_network_transmit_bytes_total|kube_statefulset_replicas|kube_statefulset_status_replicas|kube_statefulset_status_replicas_ready|kube_statefulset_status_replicas_current|kube_statefulset_status_replicas_updated|node_boot_time_seconds|kube_node_info|kube_pod_container_info|kube_statefulset_metadata_generation|kube_statefulset_status_observed_generation|kubelet_volume_stats_capacity_bytes|kubelet_volume_stats_available_bytes|kubelet_volume_stats_used_bytes|kube_node_status_condition|fluentd_input_status_num_records_total|fluentd_output_status_buffer_queue_length|fluentd_output_status_num_errors|fluentd_output_status_emit_count|fluentd_output_status_buffer_queue_length|fluentd_output_status_retry_count|fluentd_output_status_rollback_count|fluentd_output_status_buffer_total_bytes|fluentd_output_status_num_records_total
                replacement: $1
                sourceLabels:
                - __name__
            replicas: 1
            resources:
              limits:
                cpu: 400m
                memory: 3Gi
              requests:
                cpu: 200m
                memory: 600Mi
            retention: 3h
            ruleSelector:
              matchLabels:
                prometheus: k8s
                role: alert-rules
            scrapeInterval: 1m
            secrets:
            - edge-creds
            securityContext:
              fsGroup: 2002
            serviceAccountName: prometheus-k8s
            serviceMonitorNamespaceSelector:
              matchNames:
              - paralus-infra
            serviceMonitorSelector:
              matchExpressions:
              - key: k8s-app
                operator: Exists
            storage:
              volumeClaimTemplate:
                metadata:
                  name: data
                spec:
                  accessModes:
                  - ReadWriteOnce
                  resources:
                    requests:
                      storage: 15Gi
            version: v2.7.1
      - name: prometheus-k8s-servicemonitor
        object:
          apiVersion: monitoring.coreos.com/v1
          kind: ServiceMonitor
          metadata:
            labels:
              k8s-app: prometheus
            name: prometheus
            namespace: paralus-infra
          spec:
            endpoints:
            - interval: 30s
              port: web
            selector:
              matchLabels:
                prometheus: k8s
      - name: alertmanager-servicemonitor
        object:
          apiVersion: monitoring.coreos.com/v1
          kind: ServiceMonitor
          metadata:
            labels:
              k8s-app: alertmanager
            name: alertmanager
            namespace: paralus-infra
          spec:
            endpoints:
            - interval: 30s
              metricRelabelings:
              - action: keep
                regex: alertmanager_config_hash|alertmanager_config_last_reload_successful|alertmanager_cluster_members
                sourceLabels:
                - __name__
              port: web
            selector:
              matchLabels:
                alertmanager: main
      - name: alertmanager-alertmanager
        object:
          apiVersion: monitoring.coreos.com/v1
          kind: Alertmanager
          metadata:
            labels:
              alertmanager: main
            name: main
            namespace: paralus-infra
          spec:
            baseImage: quay.io/prometheus/alertmanager
            nodeSelector:
              beta.kubernetes.io/os: linux
            replicas: 1
            securityContext:
              fsGroup: 2000
              runAsNonRoot: true
              runAsUser: 1000
            serviceAccountName: alertmanager-main
            version: v0.15.3
      - name: kube-state-metrics-servicemonitor
        object:
          apiVersion: monitoring.coreos.com/v1
          kind: ServiceMonitor
          metadata:
            labels:
              k8s-app: kube-state-metrics
            name: kube-state-metrics
            namespace: paralus-infra
          spec:
            endpoints:
            - bearerTokenFile: /var/run/secrets/kubernetes.io/serviceaccount/token
              honorLabels: true
              interval: 30s
              port: https-main
              scheme: https
              scrapeTimeout: 30s
              tlsConfig:
                insecureSkipVerify: true
            - bearerTokenFile: /var/run/secrets/kubernetes.io/serviceaccount/token
              interval: 30s
              port: https-self
              scheme: https
              tlsConfig:
                insecureSkipVerify: true
            jobLabel: k8s-app
            selector:
              matchLabels:
                k8s-app: kube-state-metrics
      - name: node-exporter-servicemonitor
        object:
          apiVersion: monitoring.coreos.com/v1
          kind: ServiceMonitor
          metadata:
            labels:
              k8s-app: node-exporter
            name: node-exporter
            namespace: paralus-infra
          spec:
            endpoints:
            - bearerTokenFile: /var/run/secrets/kubernetes.io/serviceaccount/token
              interval: 30s
              port: https
              scheme: https
              tlsConfig:
                insecureSkipVerify: true
            jobLabel: k8s-app
            selector:
              matchLabels:
                k8s-app: node-exporter
      - name: prometheus-adapter-api-service
        object:
          apiVersion: apiregistration.k8s.io/v1beta1
          kind: APIService
          metadata:
            name: v1beta1.custom.metrics.k8s.io
            namespace: paralus-infra
          spec:
            group: custom.metrics.k8s.io
            groupPriorityMinimum: 100
            insecureSkipTLSVerify: true
            service:
              name: prometheus-adapter
              namespace: paralus-infra
            version: v1beta1
            versionPriority: 5
      - name: kube-control-manager-service
        object:
          apiVersion: v1
          kind: Service
          metadata:
            labels:
              k8s-app: kube-controller-manager
            name: kube-controller-manager-prometheus-discovery
            namespace: kube-system
          spec:
            clusterIP: None
            ports:
            - name: http-metrics
              port: 10252
              protocol: TCP
              targetPort: 10252
            selector:
              component: kube-controller-manager
            type: ClusterIP
      - name: prometheus-k8s-service
        object:
          apiVersion: v1
          kind: Service
          metadata:
            labels:
              prometheus: k8s
            name: prometheus-k8s
            namespace: paralus-infra
          spec:
            ports:
            - name: web
              port: 9090
              targetPort: web
            selector:
              app: prometheus
              prometheus: k8s
      - name: prometheus-operator-service
        object:
          apiVersion: v1
          kind: Service
          metadata:
            labels:
              k8s-app: prometheus-operator
            name: prometheus-operator
            namespace: paralus-infra
          spec:
            clusterIP: None
            ports:
            - name: http
              port: 8080
              targetPort: http
            selector:
              k8s-app: prometheus-operator
      - name: alertmanager-service
        object:
          apiVersion: v1
          kind: Service
          metadata:
            labels:
              alertmanager: main
            name: alertmanager-main
            namespace: paralus-infra
          spec:
            ports:
            - name: web
              nodePort: 30903
              port: 9093
              targetPort: web
            selector:
              alertmanager: main
              app: alertmanager
            type: NodePort
      - name: kube-state-metrics-service
        object:
          apiVersion: v1
          kind: Service
          metadata:
            labels:
              k8s-app: kube-state-metrics
            name: kube-state-metrics
            namespace: paralus-infra
          spec:
            clusterIP: None
            ports:
            - name: https-main
              port: 8443
              targetPort: https-main
            - name: https-self
              port: 9443
              targetPort: https-self
            selector:
              app: kube-state-metrics
      - name: node-exporter-service
        object:
          apiVersion: v1
          kind: Service
          metadata:
            labels:
              k8s-app: node-exporter
            name: node-exporter
            namespace: paralus-infra
          spec:
            clusterIP: None
            ports:
            - name: https
              port: 9100
              targetPort: https
            selector:
              app: node-exporter
      - name: prometheus-adapter-service
        object:
          apiVersion: v1
          kind: Service
          metadata:
            labels:
              name: prometheus-adapter
            name: prometheus-adapter
            namespace: paralus-infra
          spec:
            ports:
            - name: https
              port: 443
              targetPort: 6443
            selector:
              name: prometheus-adapter
      - name: kubelet-servicemonitor
        object:
          apiVersion: monitoring.coreos.com/v1
          kind: ServiceMonitor
          metadata:
            labels:
              k8s-app: kubelet
            name: kubelet
            namespace: paralus-infra
          spec:
            endpoints:
            - bearerTokenFile: /var/run/secrets/kubernetes.io/serviceaccount/token
              honorLabels: true
              interval: 30s
              metricRelabelings:
              - action: keep
                regex: kubelet_volume_stats_capacity_bytes|kubelet_volume_stats_available_bytes|kubelet_volume_stats_used_bytes
                sourceLabels:
                - __name__
              port: https-metrics
              scheme: https
              tlsConfig:
                insecureSkipVerify: true
            - bearerTokenFile: /var/run/secrets/kubernetes.io/serviceaccount/token
              honorLabels: true
              interval: 30s
              metricRelabelings:
              - action: keep
                regex: container_memory_rss|container_memory_usage_bytes|container_cpu_usage_seconds_total|container_network_receive_bytes_total|container_network_transmit_bytes_total|container_cpu_cfs_throttled_periods_total|kubelet_volume_stats_capacity_bytes
                sourceLabels:
                - __name__
              - action: labeldrop
                regex: id|interface
              path: /metrics/cadvisor
              port: https-metrics
              scheme: https
              tlsConfig:
                insecureSkipVerify: true
            jobLabel: k8s-app
            namespaceSelector:
              matchNames:
              - kube-system
            selector:
              matchLabels:
                k8s-app: kubelet
      - name: fluentd-servicemonitor
        object:
          apiVersion: monitoring.coreos.com/v1
          kind: ServiceMonitor
          metadata:
            labels:
              k8s-app: fluentd
            name: fluentd
            namespace: paralus-infra
          spec:
            endpoints:
            - interval: 1m
              metricRelabelings:
              - action: labeldrop
                regex: plugin_id
              path: /metrics
              port: prometheus
            jobLabel: component
            namespaceSelector:
              matchNames:
              - logging
              - rcloud-infra
            selector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - log-router
                - fluentd-aggregator
                - fluentd-customer-aggregator
      - name: apiserver-servicemonitor
        object:
          apiVersion: monitoring.coreos.com/v1
          kind: ServiceMonitor
          metadata:
            labels:
              k8s-app: apiserver
            name: kube-apiserver
            namespace: paralus-infra
          spec:
            endpoints:
            - bearerTokenFile: /var/run/secrets/kubernetes.io/serviceaccount/token
              interval: 30s
              metricRelabelings:
              - action: drop
                regex: etcd_(debugging|disk|request|server).*
                sourceLabels:
                - __name__
              port: https
              scheme: https
              tlsConfig:
                caFile: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
                serverName: kubernetes
            jobLabel: component
            namespaceSelector:
              matchNames:
              - default
            selector:
              matchLabels:
                component: apiserver
                provider: kubernetes
      - name: coredns-servicemonitor
        object:
          apiVersion: monitoring.coreos.com/v1
          kind: ServiceMonitor
          metadata:
            labels:
              k8s-app: coredns
            name: coredns
            namespace: paralus-infra
          spec:
            endpoints:
            - bearerTokenFile: /var/run/secrets/kubernetes.io/serviceaccount/token
              interval: 15s
              port: metrics
            namespaceSelector:
              matchNames:
              - kube-system
            selector:
              matchLabels:
                k8s-app: kube-dns
      - name: kube-control-manager-servicemonitor
        object:
          apiVersion: monitoring.coreos.com/v1
          kind: ServiceMonitor
          metadata:
            labels:
              k8s-app: kube-controller-manager
            name: kube-controller-manager
            namespace: paralus-infra
          spec:
            endpoints:
            - interval: 30s
              metricRelabelings:
              - action: drop
                regex: etcd_(debugging|disk|request|server).*
                sourceLabels:
                - __name__
              port: http-metrics
            jobLabel: k8s-app
            namespaceSelector:
              matchNames:
              - kube-system
            selector:
              matchLabels:
                k8s-app: kube-controller-manager
      - name: kube-scheduler-service-monitor
        object:
          apiVersion: monitoring.coreos.com/v1
          kind: ServiceMonitor
          metadata:
            labels:
              k8s-app: kube-scheduler
            name: kube-scheduler
            namespace: paralus-infra
          spec:
            endpoints:
            - interval: 30s
              port: http-metrics
            jobLabel: k8s-app
            namespaceSelector:
              matchNames:
              - kube-system
            selector:
              matchLabels:
                k8s-app: kube-scheduler
      install:
      - name: prometheus-operator-deployment
        object:
          apiVersion: apps/v1
          kind: Deployment
          metadata:
            labels:
              k8s-app: prometheus-operator
            name: prometheus-operator
            namespace: paralus-infra
          spec:
            replicas: 1
            selector:
              matchLabels:
                k8s-app: prometheus-operator
            template:
              metadata:
                labels:
                  k8s-app: prometheus-operator
              spec:
                containers:
                - args:
                  - --kubelet-service=kube-system/kubelet
                  - --logtostderr=true
                  - --config-reloader-image=quay.io/coreos/configmap-reload:v0.0.1
                  - --prometheus-config-reloader=quay.io/coreos/prometheus-config-reloader:v0.29.0
                  image: quay.io/coreos/prometheus-operator:v0.29.0
                  name: prometheus-operator
                  ports:
                  - containerPort: 8080
                    name: http
                  resources:
                    limits:
                      cpu: 200m
                      memory: 200Mi
                    requests:
                      cpu: 100m
                      memory: 100Mi
                  securityContext:
                    readOnlyRootFilesystem: true
                nodeSelector:
                  beta.kubernetes.io/os: linux
                securityContext:
                  runAsNonRoot: true
                  runAsUser: 65534
                serviceAccountName: prometheus-operator
      - name: kube-state-metrics-deployment
        object:
          apiVersion: apps/v1
          kind: Deployment
          metadata:
            labels:
              app: kube-state-metrics
            name: kube-state-metrics
            namespace: paralus-infra
          spec:
            replicas: 1
            selector:
              matchLabels:
                app: kube-state-metrics
            template:
              metadata:
                labels:
                  app: kube-state-metrics
              spec:
                containers:
                - args:
                  - --secure-listen-address=:8443
                  - --upstream=http://127.0.0.1:8081/
                  image: quay.io/coreos/kube-rbac-proxy:v0.4.0
                  name: kube-rbac-proxy-main
                  ports:
                  - containerPort: 8443
                    name: https-main
                  resources:
                    limits:
                      cpu: 20m
                      memory: 40Mi
                    requests:
                      cpu: 10m
                      memory: 20Mi
                - args:
                  - --secure-listen-address=:9443
                  - --upstream=http://127.0.0.1:8082/
                  image: quay.io/coreos/kube-rbac-proxy:v0.4.0
                  name: kube-rbac-proxy-self
                  ports:
                  - containerPort: 9443
                    name: https-self
                  resources:
                    limits:
                      cpu: 20m
                      memory: 40Mi
                    requests:
                      cpu: 10m
                      memory: 20Mi
                - args:
                  - --host=127.0.0.1
                  - --port=8081
                  - --telemetry-host=127.0.0.1
                  - --telemetry-port=8082
                  image: quay.io/coreos/kube-state-metrics:v1.4.0
                  name: kube-state-metrics
                  resources:
                    limits:
                      cpu: 100m
                      memory: 150Mi
                    requests:
                      cpu: 100m
                      memory: 150Mi
                - command:
                  - /pod_nanny
                  - --container=kube-state-metrics
                  - --cpu=100m
                  - --extra-cpu=2m
                  - --memory=150Mi
                  - --extra-memory=30Mi
                  - --threshold=5
                  - --deployment=kube-state-metrics
                  env:
                  - name: MY_POD_NAME
                    valueFrom:
                      fieldRef:
                        apiVersion: v1
                        fieldPath: metadata.name
                  - name: MY_POD_NAMESPACE
                    valueFrom:
                      fieldRef:
                        apiVersion: v1
                        fieldPath: metadata.namespace
                  image: quay.io/coreos/addon-resizer:1.0
                  name: addon-resizer
                  resources:
                    limits:
                      cpu: 50m
                      memory: 30Mi
                    requests:
                      cpu: 10m
                      memory: 30Mi
                nodeSelector:
                  beta.kubernetes.io/os: linux
                securityContext:
                  runAsNonRoot: true
                  runAsUser: 65534
                serviceAccountName: kube-state-metrics
      - name: node-exporter-deamonset
        object:
          apiVersion: apps/v1
          kind: DaemonSet
          metadata:
            labels:
              app: node-exporter
            name: node-exporter
            namespace: paralus-infra
          spec:
            selector:
              matchLabels:
                app: node-exporter
            template:
              metadata:
                labels:
                  app: node-exporter
              spec:
                containers:
                - args:
                  - --web.listen-address=127.0.0.1:9100
                  - --path.procfs=/host/proc
                  - --path.sysfs=/host/sys
                  - --collector.filesystem.ignored-mount-points=^/(dev|proc|sys|var/lib/docker/.+)($|/)
                  - --collector.filesystem.ignored-fs-types=^(autofs|binfmt_misc|cgroup|configfs|debugfs|devpts|devtmpfs|fusectl|hugetlbfs|mqueue|overlay|proc|procfs|pstore|rpc_pipefs|securityfs|sysfs|tracefs)$
                  image: quay.io/prometheus/node-exporter:v0.16.0
                  name: node-exporter
                  resources:
                    limits:
                      cpu: 250m
                      memory: 180Mi
                    requests:
                      cpu: 102m
                      memory: 180Mi
                  volumeMounts:
                  - mountPath: /host/proc
                    name: proc
                  - mountPath: /host/sys
                    name: sys
                  - mountPath: /host/root
                    mountPropagation: HostToContainer
                    name: root
                    readOnly: true
                - args:
                  - --secure-listen-address=$(IP):9100
                  - --upstream=http://127.0.0.1:9100/
                  env:
                  - name: IP
                    valueFrom:
                      fieldRef:
                        fieldPath: status.podIP
                  image: quay.io/coreos/kube-rbac-proxy:v0.4.0
                  name: kube-rbac-proxy
                  ports:
                  - containerPort: 9100
                    hostPort: 9100
                    name: https
                  resources:
                    limits:
                      cpu: 20m
                      memory: 40Mi
                    requests:
                      cpu: 10m
                      memory: 20Mi
                hostNetwork: true
                hostPID: true
                nodeSelector:
                  beta.kubernetes.io/os: linux
                securityContext:
                  runAsNonRoot: true
                  runAsUser: 65534
                serviceAccountName: node-exporter
                tolerations:
                - effect: NoSchedule
                  key: node-role.kubernetes.io/master
                volumes:
                - hostPath:
                    path: /proc
                  name: proc
                - hostPath:
                    path: /sys
                  name: sys
                - hostPath:
                    path: /
                  name: root
      - name: prometheus-adapter-deployment
        object:
          apiVersion: apps/v1
          kind: Deployment
          metadata:
            name: prometheus-adapter
            namespace: paralus-infra
          spec:
            replicas: 1
            selector:
              matchLabels:
                name: prometheus-adapter
            template:
              metadata:
                labels:
                  name: prometheus-adapter
              spec:
                containers:
                - args:
                  - --cert-dir=/var/run/serving-cert
                  - --config=/etc/adapter/config.yaml
                  - --logtostderr=true
                  - --metrics-relist-interval=1m
                  - --prometheus-url=http://prometheus-k8s.monitoring.svc:9090/
                  - --secure-port=6443
                  - --v=4
                  image: registry.dev.paralus-edge.net:5000/paralus/k8s-prometheus-adapter-amd64:v1.0.4
                  name: prometheus-adapter
                  ports:
                  - containerPort: 6443
                  volumeMounts:
                  - mountPath: /tmp
                    name: tmpfs
                  - mountPath: /var/run/serving-cert
                    name: volume-serving-cert
                  - mountPath: /etc/adapter
                    name: config
                serviceAccountName: prometheus-adapter
                volumes:
                - name: tmpfs
                - name: volume-serving-cert
                - configMap:
                    name: adapter-config
                  name: config
      postInstall:
      - name: prometheus-k8s-rules
        object:
          apiVersion: monitoring.coreos.com/v1
          kind: PrometheusRule
          metadata:
            labels:
              prometheus: k8s
              role: alert-rules
            name: prometheus-k8s-rules
            namespace: paralus-infra
          spec:
            groups:
            - name: k8s.rules
              rules:
              - expr: |
                  sum(rate(container_cpu_usage_seconds_total{job="kubelet", image!="", container_name!=""}[5m])) by (namespace)
                record: namespace:container_cpu_usage_seconds_total:sum_rate
              - expr: |
                  sum by (namespace, pod_name, container_name) (
                    rate(container_cpu_usage_seconds_total{job="kubelet", image!="", container_name!=""}[5m])
                  )
                record: namespace_pod_name_container_name:container_cpu_usage_seconds_total:sum_rate
              - expr: |
                  sum(container_memory_usage_bytes{job="kubelet", image!="", container_name!=""}) by (namespace)
                record: namespace:container_memory_usage_bytes:sum
              - expr: |
                  sum by (namespace, label_name) (
                    sum(rate(container_cpu_usage_seconds_total{job="kubelet", image!="", container_name!=""}[5m])) by (namespace, pod_name)
                  * on (namespace, pod_name) group_left(label_name)
                    label_replace(kube_pod_labels{job="kube-state-metrics"}, "pod_name", "$1", "pod", "(.*)")
                  )
                record: namespace_name:container_cpu_usage_seconds_total:sum_rate
              - expr: |
                  sum by (namespace, label_name) (
                    sum(container_memory_usage_bytes{job="kubelet",image!="", container_name!=""}) by (pod_name, namespace)
                  * on (namespace, pod_name) group_left(label_name)
                    label_replace(kube_pod_labels{job="kube-state-metrics"}, "pod_name", "$1", "pod", "(.*)")
                  )
                record: namespace_name:container_memory_usage_bytes:sum
              - expr: |
                  sum by (namespace, label_name) (
                    sum(kube_pod_container_resource_requests_memory_bytes{job="kube-state-metrics"}) by (namespace, pod)
                  * on (namespace, pod) group_left(label_name)
                    label_replace(kube_pod_labels{job="kube-state-metrics"}, "pod_name", "$1", "pod", "(.*)")
                  )
                record: namespace_name:kube_pod_container_resource_requests_memory_bytes:sum
              - expr: |
                  sum by (namespace, label_name) (
                    sum(kube_pod_container_resource_requests_cpu_cores{job="kube-state-metrics"} and on(pod) kube_pod_status_scheduled{condition="true"}) by (namespace, pod)
                  * on (namespace, pod) group_left(label_name)
                    label_replace(kube_pod_labels{job="kube-state-metrics"}, "pod_name", "$1", "pod", "(.*)")
                  )
                record: namespace_name:kube_pod_container_resource_requests_cpu_cores:sum
            - name: kube-scheduler.rules
              rules:
              - expr: |
                  histogram_quantile(0.99, sum(rate(scheduler_e2e_scheduling_latency_microseconds_bucket{job="kube-scheduler"}[5m])) without(instance, pod)) / 1e+06
                labels:
                  quantile: "0.99"
                record: cluster_quantile:scheduler_e2e_scheduling_latency:histogram_quantile
              - expr: |
                  histogram_quantile(0.99, sum(rate(scheduler_scheduling_algorithm_latency_microseconds_bucket{job="kube-scheduler"}[5m])) without(instance, pod)) / 1e+06
                labels:
                  quantile: "0.99"
                record: cluster_quantile:scheduler_scheduling_algorithm_latency:histogram_quantile
              - expr: |
                  histogram_quantile(0.99, sum(rate(scheduler_binding_latency_microseconds_bucket{job="kube-scheduler"}[5m])) without(instance, pod)) / 1e+06
                labels:
                  quantile: "0.99"
                record: cluster_quantile:scheduler_binding_latency:histogram_quantile
              - expr: |
                  histogram_quantile(0.9, sum(rate(scheduler_e2e_scheduling_latency_microseconds_bucket{job="kube-scheduler"}[5m])) without(instance, pod)) / 1e+06
                labels:
                  quantile: "0.9"
                record: cluster_quantile:scheduler_e2e_scheduling_latency:histogram_quantile
              - expr: |
                  histogram_quantile(0.9, sum(rate(scheduler_scheduling_algorithm_latency_microseconds_bucket{job="kube-scheduler"}[5m])) without(instance, pod)) / 1e+06
                labels:
                  quantile: "0.9"
                record: cluster_quantile:scheduler_scheduling_algorithm_latency:histogram_quantile
              - expr: |
                  histogram_quantile(0.9, sum(rate(scheduler_binding_latency_microseconds_bucket{job="kube-scheduler"}[5m])) without(instance, pod)) / 1e+06
                labels:
                  quantile: "0.9"
                record: cluster_quantile:scheduler_binding_latency:histogram_quantile
              - expr: |
                  histogram_quantile(0.5, sum(rate(scheduler_e2e_scheduling_latency_microseconds_bucket{job="kube-scheduler"}[5m])) without(instance, pod)) / 1e+06
                labels:
                  quantile: "0.5"
                record: cluster_quantile:scheduler_e2e_scheduling_latency:histogram_quantile
              - expr: |
                  histogram_quantile(0.5, sum(rate(scheduler_scheduling_algorithm_latency_microseconds_bucket{job="kube-scheduler"}[5m])) without(instance, pod)) / 1e+06
                labels:
                  quantile: "0.5"
                record: cluster_quantile:scheduler_scheduling_algorithm_latency:histogram_quantile
              - expr: |
                  histogram_quantile(0.5, sum(rate(scheduler_binding_latency_microseconds_bucket{job="kube-scheduler"}[5m])) without(instance, pod)) / 1e+06
                labels:
                  quantile: "0.5"
                record: cluster_quantile:scheduler_binding_latency:histogram_quantile
            - name: kube-apiserver.rules
              rules:
              - expr: |
                  histogram_quantile(0.99, sum(rate(apiserver_request_latencies_bucket{job="apiserver"}[5m])) without(instance, pod)) / 1e+06
                labels:
                  quantile: "0.99"
                record: cluster_quantile:apiserver_request_latencies:histogram_quantile
              - expr: |
                  histogram_quantile(0.9, sum(rate(apiserver_request_latencies_bucket{job="apiserver"}[5m])) without(instance, pod)) / 1e+06
                labels:
                  quantile: "0.9"
                record: cluster_quantile:apiserver_request_latencies:histogram_quantile
              - expr: |
                  histogram_quantile(0.5, sum(rate(apiserver_request_latencies_bucket{job="apiserver"}[5m])) without(instance, pod)) / 1e+06
                labels:
                  quantile: "0.5"
                record: cluster_quantile:apiserver_request_latencies:histogram_quantile
            - name: node.rules
              rules:
              - expr: sum(min(kube_pod_info) by (node))
                record: ':kube_pod_info_node_count:'
              - expr: |
                  max(label_replace(kube_pod_info{job="kube-state-metrics"}, "pod", "$1", "pod", "(.*)")) by (node, namespace, pod)
                record: 'node_namespace_pod:kube_pod_info:'
              - expr: |
                  count by (node) (sum by (node, cpu) (
                    node_cpu_seconds_total{job="node-exporter"}
                  * on (namespace, pod) group_left(node)
                    node_namespace_pod:kube_pod_info:
                  ))
                record: node:node_num_cpu:sum
              - expr: |
                  1 - avg(rate(node_cpu_seconds_total{job="node-exporter",mode="idle"}[1m]))
                record: :node_cpu_utilisation:avg1m
              - expr: |
                  1 - avg by (node) (
                    rate(node_cpu_seconds_total{job="node-exporter",mode="idle"}[1m])
                  * on (namespace, pod) group_left(node)
                    node_namespace_pod:kube_pod_info:)
                record: node:node_cpu_utilisation:avg1m
              - expr: |
                  sum(node_load1{job="node-exporter"})
                  /
                  sum(node:node_num_cpu:sum)
                record: ':node_cpu_saturation_load1:'
              - expr: |
                  sum by (node) (
                    node_load1{job="node-exporter"}
                  * on (namespace, pod) group_left(node)
                    node_namespace_pod:kube_pod_info:
                  )
                  /
                  node:node_num_cpu:sum
                record: 'node:node_cpu_saturation_load1:'
              - expr: |
                  1 -
                  sum(node_memory_MemFree_bytes{job="node-exporter"} + node_memory_Cached_bytes{job="node-exporter"} + node_memory_Buffers_bytes{job="node-exporter"})
                  /
                  sum(node_memory_MemTotal_bytes{job="node-exporter"})
                record: ':node_memory_utilisation:'
              - expr: |
                  sum(node_memory_MemFree_bytes{job="node-exporter"} + node_memory_Cached_bytes{job="node-exporter"} + node_memory_Buffers_bytes{job="node-exporter"})
                record: :node_memory_MemFreeCachedBuffers_bytes:sum
              - expr: |
                  sum(node_memory_MemTotal_bytes{job="node-exporter"})
                record: :node_memory_MemTotal_bytes:sum
              - expr: |
                  sum by (node) (
                    (node_memory_MemFree_bytes{job="node-exporter"} + node_memory_Cached_bytes{job="node-exporter"} + node_memory_Buffers_bytes{job="node-exporter"})
                    * on (namespace, pod) group_left(node)
                      node_namespace_pod:kube_pod_info:
                  )
                record: node:node_memory_bytes_available:sum
              - expr: |
                  sum by (node) (
                    node_memory_MemTotal_bytes{job="node-exporter"}
                    * on (namespace, pod) group_left(node)
                      node_namespace_pod:kube_pod_info:
                  )
                record: node:node_memory_bytes_total:sum
              - expr: |
                  (node:node_memory_bytes_total:sum - node:node_memory_bytes_available:sum)
                  /
                  scalar(sum(node:node_memory_bytes_total:sum))
                record: node:node_memory_utilisation:ratio
              - expr: |
                  1e3 * sum(
                    (rate(node_vmstat_pgpgin{job="node-exporter"}[1m])
                  + rate(node_vmstat_pgpgout{job="node-exporter"}[1m]))
                  )
                record: :node_memory_swap_io_bytes:sum_rate
              - expr: |
                  1 -
                  sum by (node) (
                    (node_memory_MemFree_bytes{job="node-exporter"} + node_memory_Cached_bytes{job="node-exporter"} + node_memory_Buffers_bytes{job="node-exporter"})
                  * on (namespace, pod) group_left(node)
                    node_namespace_pod:kube_pod_info:
                  )
                  /
                  sum by (node) (
                    node_memory_MemTotal_bytes{job="node-exporter"}
                  * on (namespace, pod) group_left(node)
                    node_namespace_pod:kube_pod_info:
                  )
                record: 'node:node_memory_utilisation:'
              - expr: |
                  1 - (node:node_memory_bytes_available:sum / node:node_memory_bytes_total:sum)
                record: 'node:node_memory_utilisation_2:'
              - expr: |
                  1e3 * sum by (node) (
                    (rate(node_vmstat_pgpgin{job="node-exporter"}[1m])
                  + rate(node_vmstat_pgpgout{job="node-exporter"}[1m]))
                  * on (namespace, pod) group_left(node)
                    node_namespace_pod:kube_pod_info:
                  )
                record: node:node_memory_swap_io_bytes:sum_rate
              - expr: |
                  avg(irate(node_disk_io_time_seconds_total{job="node-exporter",device=~"nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+"}[1m]))
                record: :node_disk_utilisation:avg_irate
              - expr: |
                  avg by (node) (
                    irate(node_disk_io_time_seconds_total{job="node-exporter",device=~"nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+"}[1m])
                  * on (namespace, pod) group_left(node)
                    node_namespace_pod:kube_pod_info:
                  )
                record: node:node_disk_utilisation:avg_irate
              - expr: |
                  avg(irate(node_disk_io_time_weighted_seconds_total{job="node-exporter",device=~"nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+"}[1m]))
                record: :node_disk_saturation:avg_irate
              - expr: |
                  avg by (node) (
                    irate(node_disk_io_time_weighted_seconds_total{job="node-exporter",device=~"nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+"}[1m])
                  * on (namespace, pod) group_left(node)
                    node_namespace_pod:kube_pod_info:
                  )
                record: node:node_disk_saturation:avg_irate
              - expr: |
                  max by (namespace, pod, device) ((node_filesystem_size_bytes{fstype=~"ext[234]|btrfs|xfs|zfs"}
                  - node_filesystem_avail_bytes{fstype=~"ext[234]|btrfs|xfs|zfs"})
                  / node_filesystem_size_bytes{fstype=~"ext[234]|btrfs|xfs|zfs"})
                record: 'node:node_filesystem_usage:'
              - expr: |
                  max by (namespace, pod, device) (node_filesystem_avail_bytes{fstype=~"ext[234]|btrfs|xfs|zfs"} / node_filesystem_size_bytes{fstype=~"ext[234]|btrfs|xfs|zfs"})
                record: 'node:node_filesystem_avail:'
              - expr: |
                  sum(irate(node_network_receive_bytes_total{job="node-exporter",device!~"veth.+"}[1m])) +
                  sum(irate(node_network_transmit_bytes_total{job="node-exporter",device!~"veth.+"}[1m]))
                record: :node_net_utilisation:sum_irate
              - expr: |
                  sum by (node) (
                    (irate(node_network_receive_bytes_total{job="node-exporter",device!~"veth.+"}[1m]) +
                    irate(node_network_transmit_bytes_total{job="node-exporter",device!~"veth.+"}[1m]))
                  * on (namespace, pod) group_left(node)
                    node_namespace_pod:kube_pod_info:
                  )
                record: node:node_net_utilisation:sum_irate
              - expr: |
                  sum(irate(node_network_receive_drop_total{job="node-exporter",device!~"veth.+"}[1m])) +
                  sum(irate(node_network_transmit_drop_total{job="node-exporter",device!~"veth.+"}[1m]))
                record: :node_net_saturation:sum_irate
              - expr: |
                  sum by (node) (
                    (irate(node_network_receive_drop_total{job="node-exporter",device!~"veth.+"}[1m]) +
                    irate(node_network_transmit_drop_total{job="node-exporter",device!~"veth.+"}[1m]))
                  * on (namespace, pod) group_left(node)
                    node_namespace_pod:kube_pod_info:
                  )
                record: node:node_net_saturation:sum_irate
            - name: kube-prometheus-node-recording.rules
              rules:
              - expr: sum(rate(node_cpu{mode!="idle",mode!="iowait"}[3m])) BY (instance)
                record: instance:node_cpu:rate:sum
              - expr: sum((node_filesystem_size{mountpoint="/"} - node_filesystem_free{mountpoint="/"}))
                  BY (instance)
                record: instance:node_filesystem_usage:sum
              - expr: sum(rate(node_network_receive_bytes[3m])) BY (instance)
                record: instance:node_network_receive_bytes:rate:sum
              - expr: sum(rate(node_network_transmit_bytes[3m])) BY (instance)
                record: instance:node_network_transmit_bytes:rate:sum
              - expr: sum(rate(node_cpu{mode!="idle",mode!="iowait"}[5m])) WITHOUT
                  (cpu, mode) / ON(instance) GROUP_LEFT() count(sum(node_cpu) BY (instance,
                  cpu)) BY (instance)
                record: instance:node_cpu:ratio
              - expr: sum(rate(node_cpu{mode!="idle",mode!="iowait"}[5m]))
                record: cluster:node_cpu:sum_rate5m
              - expr: cluster:node_cpu:rate5m / count(sum(node_cpu) BY (instance,
                  cpu))
                record: cluster:node_cpu:ratio
            - name: kubernetes-absent
              rules:
              - alert: CoreDNSDown
                annotations:
                  message: CoreDNS has disappeared from Prometheus target discovery.
                  runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-corednsdown
                expr: |
                  absent(up{job="kube-dns-prometheus-discovery"} == 1)
                for: 15m
                labels:
                  severity: critical
              - alert: KubeAPIDown
                annotations:
                  message: KubeAPI has disappeared from Prometheus target discovery.
                  runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubeapidown
                expr: |
                  absent(up{job="apiserver"} == 1)
                for: 15m
                labels:
                  severity: critical
              - alert: KubeControllerManagerDown
                annotations:
                  message: KubeControllerManager has disappeared from Prometheus target
                    discovery.
                  runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubecontrollermanagerdown
                expr: |
                  absent(up{job="kube-controller-manager"} == 1)
                for: 15m
                labels:
                  severity: critical
              - alert: KubeSchedulerDown
                annotations:
                  message: KubeScheduler has disappeared from Prometheus target discovery.
                  runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubeschedulerdown
                expr: |
                  absent(up{job="kube-scheduler"} == 1)
                for: 15m
                labels:
                  severity: critical
              - alert: KubeStateMetricsDown
                annotations:
                  message: KubeStateMetrics has disappeared from Prometheus target
                    discovery.
                  runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubestatemetricsdown
                expr: |
                  absent(up{job="kube-state-metrics"} == 1)
                for: 15m
                labels:
                  severity: critical
              - alert: KubeletDown
                annotations:
                  message: Kubelet has disappeared from Prometheus target discovery.
                  runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubeletdown
                expr: |
                  absent(up{job="kubelet"} == 1)
                for: 15m
                labels:
                  severity: critical
              - alert: NodeExporterDown
                annotations:
                  message: NodeExporter has disappeared from Prometheus target discovery.
                  runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-nodeexporterdown
                expr: |
                  absent(up{job="node-exporter"} == 1)
                for: 15m
                labels:
                  severity: critical
              - alert: PrometheusDown
                annotations:
                  message: Prometheus has disappeared from Prometheus target discovery.
                  runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-prometheusdown
                expr: |
                  absent(up{job="prometheus-k8s"} == 1)
                for: 15m
                labels:
                  severity: critical
              - alert: PrometheusOperatorDown
                annotations:
                  message: PrometheusOperator has disappeared from Prometheus target
                    discovery.
                  runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-prometheusoperatordown
                expr: |
                  absent(up{job="prometheus-operator"} == 1)
                for: 15m
                labels:
                  severity: critical
            - name: kubernetes-apps
              rules:
              - alert: KubePodCrashLooping
                annotations:
                  message: Pod {{ $labels.namespace }}/{{ $labels.pod }} ({{ $labels.container
                    }}) is restarting {{ printf "%.2f" $value }} times / 5 minutes.
                  runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubepodcrashlooping
                expr: |
                  rate(kube_pod_container_status_restarts_total{job="kube-state-metrics"}[15m]) * 60 * 5 > 0
                for: 1h
                labels:
                  severity: critical
              - alert: KubePodNotReady
                annotations:
                  message: Pod {{ $labels.namespace }}/{{ $labels.pod }} has been
                    in a non-ready state for longer than an hour.
                  runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubepodnotready
                expr: |
                  sum by (namespace, pod) (kube_pod_status_phase{job="kube-state-metrics", phase=~"Pending|Unknown"}) > 0
                for: 1h
                labels:
                  severity: critical
              - alert: KubeDeploymentGenerationMismatch
                annotations:
                  message: Deployment generation for {{ $labels.namespace }}/{{ $labels.deployment
                    }} does not match, this indicates that the Deployment has failed
                    but has not been rolled back.
                  runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubedeploymentgenerationmismatch
                expr: |
                  kube_deployment_status_observed_generation{job="kube-state-metrics"}
                    !=
                  kube_deployment_metadata_generation{job="kube-state-metrics"}
                for: 15m
                labels:
                  severity: critical
              - alert: KubeDeploymentReplicasMismatch
                annotations:
                  message: Deployment {{ $labels.namespace }}/{{ $labels.deployment
                    }} has not matched the expected number of replicas for longer
                    than an hour.
                  runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubedeploymentreplicasmismatch
                expr: |
                  kube_deployment_spec_replicas{job="kube-state-metrics"}
                    !=
                  kube_deployment_status_replicas_available{job="kube-state-metrics"}
                for: 1h
                labels:
                  severity: critical
              - alert: KubeStatefulSetReplicasMismatch
                annotations:
                  message: StatefulSet {{ $labels.namespace }}/{{ $labels.statefulset
                    }} has not matched the expected number of replicas for longer
                    than 15 minutes.
                  runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubestatefulsetreplicasmismatch
                expr: |
                  kube_statefulset_status_replicas_ready{job="kube-state-metrics"}
                    !=
                  kube_statefulset_status_replicas{job="kube-state-metrics"}
                for: 15m
                labels:
                  severity: critical
              - alert: KubeStatefulSetGenerationMismatch
                annotations:
                  message: StatefulSet generation for {{ $labels.namespace }}/{{ $labels.statefulset
                    }} does not match, this indicates that the StatefulSet has failed
                    but has not been rolled back.
                  runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubestatefulsetgenerationmismatch
                expr: |
                  kube_statefulset_status_observed_generation{job="kube-state-metrics"}
                    !=
                  kube_statefulset_metadata_generation{job="kube-state-metrics"}
                for: 15m
                labels:
                  severity: critical
              - alert: KubeStatefulSetUpdateNotRolledOut
                annotations:
                  message: StatefulSet {{ $labels.namespace }}/{{ $labels.statefulset
                    }} update has not been rolled out.
                  runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubestatefulsetupdatenotrolledout
                expr: |
                  max without (revision) (
                    kube_statefulset_status_current_revision{job="kube-state-metrics"}
                      unless
                    kube_statefulset_status_update_revision{job="kube-state-metrics"}
                  )
                    *
                  (
                    kube_statefulset_replicas{job="kube-state-metrics"}
                      !=
                    kube_statefulset_status_replicas_updated{job="kube-state-metrics"}
                  )
                for: 15m
                labels:
                  severity: critical
              - alert: KubeDaemonSetRolloutStuck
                annotations:
                  message: Only {{ $value }}% of the desired Pods of DaemonSet {{
                    $labels.namespace }}/{{ $labels.daemonset }} are scheduled and
                    ready.
                  runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubedaemonsetrolloutstuck
                expr: |
                  kube_daemonset_status_number_ready{job="kube-state-metrics"}
                    /
                  kube_daemonset_status_desired_number_scheduled{job="kube-state-metrics"} * 100 < 100
                for: 15m
                labels:
                  severity: critical
              - alert: KubeDaemonSetNotScheduled
                annotations:
                  message: '{{ $value }} Pods of DaemonSet {{ $labels.namespace }}/{{
                    $labels.daemonset }} are not scheduled.'
                  runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubedaemonsetnotscheduled
                expr: |
                  kube_daemonset_status_desired_number_scheduled{job="kube-state-metrics"}
                    -
                  kube_daemonset_status_current_number_scheduled{job="kube-state-metrics"} > 0
                for: 10m
                labels:
                  severity: warning
              - alert: KubeDaemonSetMisScheduled
                annotations:
                  message: '{{ $value }} Pods of DaemonSet {{ $labels.namespace }}/{{
                    $labels.daemonset }} are running where they are not supposed to
                    run.'
                  runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubedaemonsetmisscheduled
                expr: |
                  kube_daemonset_status_number_misscheduled{job="kube-state-metrics"} > 0
                for: 10m
                labels:
                  severity: warning
              - alert: KubeCronJobRunning
                annotations:
                  message: CronJob {{ $labels.namespace }}/{{ $labels.cronjob }} is
                    taking more than 1h to complete.
                  runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubecronjobrunning
                expr: |
                  time() - kube_cronjob_next_schedule_time{job="kube-state-metrics"} > 3600
                for: 1h
                labels:
                  severity: warning
              - alert: KubeJobCompletion
                annotations:
                  message: Job {{ $labels.namespace }}/{{ $labels.job_name }} is taking
                    more than one hour to complete.
                  runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubejobcompletion
                expr: |
                  kube_job_spec_completions{job="kube-state-metrics"} - kube_job_status_succeeded{job="kube-state-metrics"}  > 0
                for: 1h
                labels:
                  severity: warning
              - alert: KubeJobFailed
                annotations:
                  message: Job {{ $labels.namespace }}/{{ $labels.job_name }} failed
                    to complete.
                  runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubejobfailed
                expr: |
                  kube_job_status_failed{job="kube-state-metrics"}  > 0
                for: 1h
                labels:
                  severity: warning
            - name: kubernetes-resources
              rules:
              - alert: KubeCPUOvercommit
                annotations:
                  message: Cluster has overcommitted CPU resource requests for Pods
                    and cannot tolerate node failure.
                  runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubecpuovercommit
                expr: |
                  sum(namespace_name:kube_pod_container_resource_requests_cpu_cores:sum)
                    /
                  sum(node:node_num_cpu:sum)
                    >
                  (count(node:node_num_cpu:sum)-1) / count(node:node_num_cpu:sum)
                for: 5m
                labels:
                  severity: warning
              - alert: KubeMemOvercommit
                annotations:
                  message: Cluster has overcommitted memory resource requests for
                    Pods and cannot tolerate node failure.
                  runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubememovercommit
                expr: |
                  sum(namespace_name:kube_pod_container_resource_requests_memory_bytes:sum)
                    /
                  sum(node_memory_MemTotal_bytes)
                    >
                  (count(node:node_num_cpu:sum)-1)
                    /
                  count(node:node_num_cpu:sum)
                for: 5m
                labels:
                  severity: warning
              - alert: KubeCPUOvercommit
                annotations:
                  message: Cluster has overcommitted CPU resource requests for Namespaces.
                  runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubecpuovercommit
                expr: |
                  sum(kube_resourcequota{job="kube-state-metrics", type="hard", resource="requests.cpu"})
                    /
                  sum(node:node_num_cpu:sum)
                    > 1.5
                for: 5m
                labels:
                  severity: warning
              - alert: KubeMemOvercommit
                annotations:
                  message: Cluster has overcommitted memory resource requests for
                    Namespaces.
                  runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubememovercommit
                expr: |
                  sum(kube_resourcequota{job="kube-state-metrics", type="hard", resource="requests.memory"})
                    /
                  sum(node_memory_MemTotal_bytes{job="node-exporter"})
                    > 1.5
                for: 5m
                labels:
                  severity: warning
              - alert: KubeQuotaExceeded
                annotations:
                  message: Namespace {{ $labels.namespace }} is using {{ printf "%0.0f"
                    $value }}% of its {{ $labels.resource }} quota.
                  runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubequotaexceeded
                expr: |
                  100 * kube_resourcequota{job="kube-state-metrics", type="used"}
                    / ignoring(instance, job, type)
                  (kube_resourcequota{job="kube-state-metrics", type="hard"} > 0)
                    > 90
                for: 15m
                labels:
                  severity: warning
              - alert: CPUThrottlingHigh
                annotations:
                  message: '{{ printf "%0.0f" $value }}% throttling of CPU in namespace
                    {{ $labels.namespace }} for container {{ $labels.container_name
                    }} in pod {{ $labels.pod_name }}.'
                  runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-cputhrottlinghigh
                expr: "100 * sum(increase(container_cpu_cfs_throttled_periods_total{}[5m]))
                  by (container_name, pod_name, namespace) \n  / \nsum(increase(container_cpu_cfs_periods_total{}[5m]))
                  by (container_name, pod_name, namespace)\n  > 50 \n"
                for: 15m
                labels:
                  severity: warning
            - name: kubernetes-storage
              rules:
              - alert: KubePersistentVolumeUsageCritical
                annotations:
                  message: The PersistentVolume claimed by {{ $labels.persistentvolumeclaim
                    }} in Namespace {{ $labels.namespace }} is only {{ printf "%0.2f"
                    $value }}% free.
                  runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubepersistentvolumeusagecritical
                expr: |
                  100 * kubelet_volume_stats_available_bytes{job="kubelet"}
                    /
                  kubelet_volume_stats_capacity_bytes{job="kubelet"}
                    < 3
                for: 1m
                labels:
                  severity: critical
              - alert: KubePersistentVolumeFullInFourDays
                annotations:
                  message: Based on recent sampling, the PersistentVolume claimed
                    by {{ $labels.persistentvolumeclaim }} in Namespace {{ $labels.namespace
                    }} is expected to fill up within four days. Currently {{ printf
                    "%0.2f" $value }}% is available.
                  runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubepersistentvolumefullinfourdays
                expr: |
                  100 * (
                    kubelet_volume_stats_available_bytes{job="kubelet"}
                      /
                    kubelet_volume_stats_capacity_bytes{job="kubelet"}
                  ) < 15
                  and
                  predict_linear(kubelet_volume_stats_available_bytes{job="kubelet"}[6h], 4 * 24 * 3600) < 0
                for: 5m
                labels:
                  severity: critical
              - alert: KubePersistentVolumeErrors
                annotations:
                  message: The persistent volume {{ $labels.persistentvolume }} has
                    status {{ $labels.phase }}.
                  runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubepersistentvolumeerrors
                expr: |
                  kube_persistentvolume_status_phase{phase=~"Failed|Pending",job="kube-state-metrics"} > 0
                for: 5m
                labels:
                  severity: critical
            - name: kubernetes-system
              rules:
              - alert: KubeNodeNotReady
                annotations:
                  message: '{{ $labels.node }} has been unready for more than an hour.'
                  runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubenodenotready
                expr: |
                  kube_node_status_condition{job="kube-state-metrics",condition="Ready",status="true"} == 0
                for: 1h
                labels:
                  severity: warning
              - alert: KubeVersionMismatch
                annotations:
                  message: There are {{ $value }} different versions of Kubernetes
                    components running.
                  runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubeversionmismatch
                expr: |
                  count(count(kubernetes_build_info{job!="kube-dns-prometheus-discovery"}) by (gitVersion)) > 1
                for: 1h
                labels:
                  severity: warning
              - alert: KubeClientErrors
                annotations:
                  message: Kubernetes API server client '{{ $labels.job }}/{{ $labels.instance
                    }}' is experiencing {{ printf "%0.0f" $value }}% errors.'
                  runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubeclienterrors
                expr: |
                  (sum(rate(rest_client_requests_total{code!~"2..|404"}[5m])) by (instance, job)
                    /
                  sum(rate(rest_client_requests_total[5m])) by (instance, job))
                  * 100 > 1
                for: 15m
                labels:
                  severity: warning
              - alert: KubeClientErrors
                annotations:
                  message: Kubernetes API server client '{{ $labels.job }}/{{ $labels.instance
                    }}' is experiencing {{ printf "%0.0f" $value }} errors / second.
                  runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubeclienterrors
                expr: |
                  sum(rate(ksm_scrape_error_total{job="kube-state-metrics"}[5m])) by (instance, job) > 0.1
                for: 15m
                labels:
                  severity: warning
              - alert: KubeletTooManyPods
                annotations:
                  message: Kubelet {{ $labels.instance }} is running {{ $value }}
                    Pods, close to the limit of 110.
                  runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubelettoomanypods
                expr: |
                  kubelet_running_pod_count{job="kubelet"} > 110 * 0.9
                for: 15m
                labels:
                  severity: warning
              - alert: KubeAPILatencyHigh
                annotations:
                  message: The API server has a 99th percentile latency of {{ $value
                    }} seconds for {{ $labels.verb }} {{ $labels.resource }}.
                  runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubeapilatencyhigh
                expr: |
                  cluster_quantile:apiserver_request_latencies:histogram_quantile{job="apiserver",quantile="0.99",subresource!="log",verb!~"^(?:LIST|WATCH|WATCHLIST|PROXY|CONNECT)$"} > 1
                for: 10m
                labels:
                  severity: warning
              - alert: KubeAPILatencyHigh
                annotations:
                  message: The API server has a 99th percentile latency of {{ $value
                    }} seconds for {{ $labels.verb }} {{ $labels.resource }}.
                  runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubeapilatencyhigh
                expr: |
                  cluster_quantile:apiserver_request_latencies:histogram_quantile{job="apiserver",quantile="0.99",subresource!="log",verb!~"^(?:LIST|WATCH|WATCHLIST|PROXY|CONNECT)$"} > 4
                for: 10m
                labels:
                  severity: critical
              - alert: KubeAPIErrorsHigh
                annotations:
                  message: API server is returning errors for {{ $value }}% of requests.
                  runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubeapierrorshigh
                expr: |
                  sum(rate(apiserver_request_count{job="apiserver",code=~"^(?:5..)$"}[5m])) without(instance, pod)
                    /
                  sum(rate(apiserver_request_count{job="apiserver"}[5m])) without(instance, pod) * 100 > 10
                for: 10m
                labels:
                  severity: critical
              - alert: KubeAPIErrorsHigh
                annotations:
                  message: API server is returning errors for {{ $value }}% of requests.
                  runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubeapierrorshigh
                expr: |
                  sum(rate(apiserver_request_count{job="apiserver",code=~"^(?:5..)$"}[5m])) without(instance, pod)
                    /
                  sum(rate(apiserver_request_count{job="apiserver"}[5m])) without(instance, pod) * 100 > 5
                for: 10m
                labels:
                  severity: warning
              - alert: KubeClientCertificateExpiration
                annotations:
                  message: Kubernetes API certificate is expiring in less than 7 days.
                  runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubeclientcertificateexpiration
                expr: |
                  histogram_quantile(0.01, sum by (job, le) (rate(apiserver_client_certificate_expiration_seconds_bucket{job="apiserver"}[5m]))) < 604800
                labels:
                  severity: warning
              - alert: KubeClientCertificateExpiration
                annotations:
                  message: Kubernetes API certificate is expiring in less than 24
                    hours.
                  runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubeclientcertificateexpiration
                expr: |
                  histogram_quantile(0.01, sum by (job, le) (rate(apiserver_client_certificate_expiration_seconds_bucket{job="apiserver"}[5m]))) < 86400
                labels:
                  severity: critical
            - name: general.rules
              rules:
              - alert: TargetDown
                annotations:
                  message: '{{ $value }}% of the {{ $labels.job }} targets are down.'
                expr: 100 * (count(up == 0) BY (job) / count(up) BY (job)) > 10
                for: 10m
                labels:
                  severity: warning
              - alert: DeadMansSwitch
                annotations:
                  message: This is a DeadMansSwitch meant to ensure that the entire
                    alerting pipeline is functional.
                expr: vector(1)
                labels:
                  severity: none
            - name: kube-prometheus-node-alerting.rules
              rules:
              - alert: NodeDiskRunningFull
                annotations:
                  message: Device {{ $labels.device }} of node-exporter {{ $labels.namespace
                    }}/{{ $labels.pod }} will be full within the next 24 hours.
                expr: |
                  (node:node_filesystem_usage: > 0.85) and (predict_linear(node:node_filesystem_avail:[6h], 3600 * 24) < 0)
                for: 30m
                labels:
                  severity: warning
              - alert: NodeDiskRunningFull
                annotations:
                  message: Device {{ $labels.device }} of node-exporter {{ $labels.namespace
                    }}/{{ $labels.pod }} will be full within the next 2 hours.
                expr: |
                  (node:node_filesystem_usage: > 0.85) and (predict_linear(node:node_filesystem_avail:[30m], 3600 * 2) < 0)
                for: 10m
                labels:
                  severity: critical
            - name: prometheus.rules
              rules:
              - alert: PrometheusConfigReloadFailed
                annotations:
                  description: Reloading Prometheus' configuration has failed for
                    {{$labels.namespace}}/{{$labels.pod}}
                  summary: Reloading Prometheus' configuration failed
                expr: |
                  prometheus_config_last_reload_successful{job="prometheus-k8s"} == 0
                for: 10m
                labels:
                  severity: warning
              - alert: PrometheusNotificationQueueRunningFull
                annotations:
                  description: Prometheus' alert notification queue is running full
                    for {{$labels.namespace}}/{{ $labels.pod}}
                  summary: Prometheus' alert notification queue is running full
                expr: |
                  predict_linear(prometheus_notifications_queue_length{job="prometheus-k8s"}[5m], 60 * 30) > prometheus_notifications_queue_capacity{job="prometheus-k8s"}
                for: 10m
                labels:
                  severity: warning
              - alert: PrometheusErrorSendingAlerts
                annotations:
                  description: Errors while sending alerts from Prometheus {{$labels.namespace}}/{{
                    $labels.pod}} to Alertmanager {{$labels.Alertmanager}}
                  summary: Errors while sending alert from Prometheus
                expr: |
                  rate(prometheus_notifications_errors_total{job="prometheus-k8s"}[5m]) / rate(prometheus_notifications_sent_total{job="prometheus-k8s"}[5m]) > 0.01
                for: 10m
                labels:
                  severity: warning
              - alert: PrometheusErrorSendingAlerts
                annotations:
                  description: Errors while sending alerts from Prometheus {{$labels.namespace}}/{{
                    $labels.pod}} to Alertmanager {{$labels.Alertmanager}}
                  summary: Errors while sending alerts from Prometheus
                expr: |
                  rate(prometheus_notifications_errors_total{job="prometheus-k8s"}[5m]) / rate(prometheus_notifications_sent_total{job="prometheus-k8s"}[5m]) > 0.03
                for: 10m
                labels:
                  severity: critical
              - alert: PrometheusNotConnectedToAlertmanagers
                annotations:
                  description: Prometheus {{ $labels.namespace }}/{{ $labels.pod}}
                    is not connected to any Alertmanagers
                  summary: Prometheus is not connected to any Alertmanagers
                expr: |
                  prometheus_notifications_alertmanagers_discovered{job="prometheus-k8s"} < 1
                for: 10m
                labels:
                  severity: warning
              - alert: PrometheusTSDBReloadsFailing
                annotations:
                  description: '{{$labels.job}} at {{$labels.instance}} had {{$value
                    | humanize}} reload failures over the last four hours.'
                  summary: Prometheus has issues reloading data blocks from disk
                expr: |
                  increase(prometheus_tsdb_reloads_failures_total{job="prometheus-k8s"}[2h]) > 0
                for: 12h
                labels:
                  severity: warning
              - alert: PrometheusTSDBCompactionsFailing
                annotations:
                  description: '{{$labels.job}} at {{$labels.instance}} had {{$value
                    | humanize}} compaction failures over the last four hours.'
                  summary: Prometheus has issues compacting sample blocks
                expr: |
                  increase(prometheus_tsdb_compactions_failed_total{job="prometheus-k8s"}[2h]) > 0
                for: 12h
                labels:
                  severity: warning
              - alert: PrometheusTSDBWALCorruptions
                annotations:
                  description: '{{$labels.job}} at {{$labels.instance}} has a corrupted
                    write-ahead log (WAL).'
                  summary: Prometheus write-ahead log is corrupted
                expr: |
                  tsdb_wal_corruptions_total{job="prometheus-k8s"} > 0
                for: 4h
                labels:
                  severity: warning
              - alert: PrometheusNotIngestingSamples
                annotations:
                  description: Prometheus {{ $labels.namespace }}/{{ $labels.pod}}
                    isn't ingesting samples.
                  summary: Prometheus isn't ingesting samples
                expr: |
                  rate(prometheus_tsdb_head_samples_appended_total{job="prometheus-k8s"}[5m]) <= 0
                for: 10m
                labels:
                  severity: warning
              - alert: PrometheusTargetScrapesDuplicate
                annotations:
                  description: '{{$labels.namespace}}/{{$labels.pod}} has many samples
                    rejected due to duplicate timestamps but different values'
                  summary: Prometheus has many samples rejected
                expr: |
                  increase(prometheus_target_scrapes_sample_duplicate_timestamp_total{job="prometheus-k8s"}[5m]) > 0
                for: 10m
                labels:
                  severity: warning
            - name: prometheus-operator
              rules:
              - alert: PrometheusOperatorReconcileErrors
                annotations:
                  message: Errors while reconciling {{ $labels.controller }} in {{
                    $labels.namespace }} Namespace.
                expr: |
                  rate(prometheus_operator_reconcile_errors_total{job="prometheus-operator"}[5m]) > 0.1
                for: 10m
                labels:
                  severity: warning
              - alert: PrometheusOperatorNodeLookupErrors
                annotations:
                  message: Errors while reconciling Prometheus in {{ $labels.namespace
                    }} Namespace.
                expr: |
                  rate(prometheus_operator_node_address_lookup_errors_total{job="prometheus-operator"}[5m]) > 0.1
                for: 10m
                labels:
                  severity: warning
      - name: prometheus-k8s-custom-rules
        object:
          apiVersion: monitoring.coreos.com/v1
          kind: PrometheusRule
          metadata:
            labels:
              prometheus: k8s
              role: alert-rules
            name: custom-prometheus-k8s-rules
            namespace: paralus-infra
          spec:
            groups:
            - name: custom.rules
              rules:
              - expr: sum (label_replace(rate(container_memory_usage_bytes{container_name!="POD",image!="",name=~"^k8s_.*"}[1m]),
                  "container", "$1", "container_name", "(.*)")) by (container, pod_name,
                  namespace) / on (namespace,pod_name, container) group_left label_replace(kube_pod_container_resource_limits_memory_bytes,
                  "pod_name", "$1", "pod", "(.*)") * on (pod_name) group_left(label_rep_organization,
                  label_rep_partner, label_rep_workload, pod) label_replace(kube_pod_labels,
                  "pod_name", "$1", "pod", "(.*)") * 100
                record: hpa_memory_usage_perc
              - expr: sum(label_replace(rate(container_cpu_usage_seconds_total{ container_name!="POD",image!="",name=~"^k8s_.*"}[1m]),
                  "container", "$1", "container_name", "(.*)")) by (container, pod_name,
                  namespace) / on (namespace, pod_name, container) group_left label_replace(kube_pod_container_resource_limits_cpu_cores{},
                  "pod_name", "$1", "pod", "(.*)")*   on (pod_name) group_left(label_rep_organization,
                  label_rep_partner, label_rep_workload, pod) label_replace(kube_pod_labels,
                  "pod_name", "$1", "pod", "(.*)")* 100
                record: hpa_cpu_usage_perc
              - expr: sum by (pod_name, container_name, label_rep_organization, label_rep_partner,
                  label_rep_workload) ( sum(rate(container_cpu_usage_seconds_total{image!="",container_name!="POD"}[1m]))
                  by (pod_name, container_name) * on (pod_name) group_left(label_rep_organization,
                  label_rep_partner, label_rep_workload, pod) label_replace(kube_pod_labels,
                  "pod_name", "$1", "pod", "(.*)") )
                record: rcloud:container:container_cpu_usage_seconds_total:sum
              - expr: sum by (pod_name, container, label_rep_organization, label_rep_partner,
                  label_rep_workload) ( sum(label_replace(rate(container_cpu_usage_seconds_total{container_name!="POD",image!="",name=~"^k8s_.*"}[5m]),
                  "container", "$1", "container_name", "(.*)")) by (container, pod_name)
                  / on (pod_name, container) group_left label_replace(kube_pod_container_resource_limits_cpu_cores{},
                  "pod_name", "$1", "pod", "(.*)")  * on (pod_name) group_left(label_rep_organization,
                  label_rep_partner, label_rep_workload, pod) label_replace(kube_pod_labels,
                  "pod_name", "$1", "pod", "(.*)") ) * 100
                record: rcloud:pod:container_cpu_usage_percent
              - expr: sum by (pod_name, container_name, label_rep_organization, label_rep_partner,
                  label_rep_workload) ( sum by(pod_name, container_name) (container_memory_usage_bytes{
                  container_name!="POD"}) * on (pod_name) group_left(label_rep_organization,
                  label_rep_partner, label_rep_workload, pod) label_replace(kube_pod_labels,
                  "pod_name", "$1", "pod", "(.*)") )
                record: rcloud:pod:container_memory_usage_bytes:sum
              - expr: sum by (pod_name, container, label_rep_organization, label_rep_partner,
                  label_rep_workload) ( sum(label_replace(container_memory_usage_bytes{container_name!="POD",image!="",name=~"^k8s_.*"},
                  "container", "$1", "container_name", "(.*)")) by (pod_name, container)
                  /  on (pod_name, container) group_left label_replace(kube_pod_container_resource_limits_memory_bytes{},
                  "pod_name", "$1", "pod", "(.*)")  * on (pod_name) group_left(label_rep_organization,
                  label_rep_partner, label_rep_workload, pod) label_replace(kube_pod_labels,
                  "pod_name", "$1", "pod", "(.*)") ) * 100
                record: rcloud:pod:container_memory_usage_percent
              - expr: sum by (pod_name, namespace, container, instance, label_rep_organization,
                  label_rep_partner, label_rep_workload) ( (kube_pod_container_status_running{})
                  * on (pod) group_left(label_rep_organization, label_rep_partner,
                  label_rep_workload, pod_name) label_replace(kube_pod_labels, "pod_name",
                  "$1", "pod", "(.*)") )
                record: rcloud:pod:kube_pod_container_status_running
              - expr: sum by (pod_name, namespace, label_rep_organization, label_rep_partner,
                  label_rep_workload) ( (sum(rate(container_network_transmit_bytes_total{}[3m]))
                  BY (namespace, pod_name) + sum(rate(container_network_receive_bytes_total{}[3m]))
                  BY (namespace, pod_name)) * on (pod_name) group_left(label_rep_organization,
                  label_rep_partner, label_rep_workload, pod) label_replace(kube_pod_labels,
                  "pod_name", "$1", "pod", "(.*)") )
                record: rcloud:deployment:container_network_throughput_bytes_total:sum3m
              - expr: sort_desc(sum by (pod_name, label_rep_organization, label_rep_partner,
                  label_rep_workload) ( sum by (pod_name) (rate(container_network_receive_bytes_total{}[1m]))
                  * on (pod_name) group_left(label_rep_organization, label_rep_partner,
                  label_rep_workload, pod) label_replace(kube_pod_labels, "pod_name",
                  "$1", "pod", "(.*)") ))
                record: rcloud:container:container_network_receive_bytes_total:sum
              - expr: sum by (pod_name, label_rep_organization, label_rep_partner,
                  label_rep_workload) ( sum by (pod_name) (rate(container_network_transmit_bytes_total{}[1m]))
                  * on (pod_name) group_left(label_rep_organization, label_rep_partner,
                  label_rep_workload, pod) label_replace(kube_pod_labels, "pod_name",
                  "$1", "pod", "(.*)") )
                record: rcloud:container:container_network_transmit_bytes_total:sum
              - expr: sum by (pod_name, namespace, phase, label_rep_organization,
                  label_rep_partner, label_rep_workload) ( (kube_pod_status_phase{})
                  * on (pod) group_left(label_rep_organization, label_rep_partner,
                  label_rep_workload, pod_name) label_replace(kube_pod_labels, "pod_name",
                  "$1", "pod", "(.*)") )
                record: rcloud:pod:kube_pod_status_phase
              - expr: sum by (pod_name, namespace, condition, label_rep_organization,
                  label_rep_partner, label_rep_workload) ( (kube_pod_status_ready{})
                  * on (pod) group_left(label_rep_organization, label_rep_partner,
                  label_rep_workload, pod_name) label_replace(kube_pod_labels, "pod_name",
                  "$1", "pod", "(.*)") )
                record: rcloud:pod:kube_pod_status_ready
              - expr: sum by (pod_name, namespace, container, image, instance, label_rep_organization,
                  label_rep_partner, label_rep_workload) ( (kube_pod_container_info{})
                  * on (pod) group_left(label_rep_organization, label_rep_partner,
                  label_rep_workload, pod_name) label_replace(kube_pod_labels, "pod_name",
                  "$1", "pod", "(.*)") )
                record: rcloud:pod:kube_pod_container_info
              - expr: sum by (pod_name, namespace, container,reason, instance, label_rep_organization,
                  label_rep_partner, label_rep_workload) ( (kube_pod_container_status_waiting_reason{})
                  * on (pod) group_left(label_rep_organization, label_rep_partner,
                  label_rep_workload, pod_name) label_replace(kube_pod_labels, "pod_name",
                  "$1", "pod", "(.*)") )
                record: rcloud:pod:kube_pod_container_status_waiting_reason
              - expr: sum by (pod_name, namespace, container, instance, label_rep_organization,
                  label_rep_partner, label_rep_workload) ( (kube_pod_container_status_restarts_total{})
                  * on (pod) group_left(label_rep_organization, label_rep_partner,
                  label_rep_workload, pod_name) label_replace(kube_pod_labels, "pod_name",
                  "$1", "pod", "(.*)") )
                record: rcloud:pod:kube_pod_container_status_restarts_total
              - expr: sum by (pod_name, namespace, node, container, instance, label_rep_organization,
                  label_rep_partner, label_rep_workload) ( (kube_pod_container_resource_limits_cpu_cores{})
                  * on (pod) group_left(label_rep_organization, label_rep_partner,
                  label_rep_workload, pod_name) label_replace(kube_pod_labels, "pod_name",
                  "$1", "pod", "(.*)") )
                record: rcloud:pod:kube_pod_container_resource_limits_cpu_cores
              - expr: sum by (pod_name, namespace, node, container, instance, label_rep_organization,
                  label_rep_partner, label_rep_workload) ( (kube_pod_container_resource_limits_memory_bytes{})
                  * on (pod) group_left(label_rep_organization, label_rep_partner,
                  label_rep_workload, pod_name) label_replace(kube_pod_labels, "pod_name",
                  "$1", "pod", "(.*)") )
                record: rcloud:pod:kube_pod_container_resource_limits_memory_bytes
status:
  conditions:
  - lastUpdateTime: "2019-11-18T21:09:50Z"
    reason: all steps complete
    status: Complete
    type: TaskInit
  - lastUpdateTime: "2019-11-18T21:09:53Z"
    reason: namespace created
    status: Complete
    type: TaskletCreate
  - lastUpdateTime: "2019-11-18T21:11:42Z"
    reason: tasklet complete
    status: Complete
    type: TaskReady
  init:
  - jobReason: not configured
    jobState: StepJobComplete
    name: prometheus-k8s-prometheus-crd
    objectReason: object type *v1beta1.CustomResourceDefinition not handled
    objectRef:
      apiVersion: apiextensions.k8s.io/v1beta1
      kind: CustomResourceDefinition
      name: prometheuses.monitoring.coreos.com
      resourceVersion: "4207"
      uid: b1843d52-0a47-11ea-be30-0aed3d6c8d42
    objectState: StepObjectComplete
    reason: complete
    state: StepComplete
  - jobReason: not configured
    jobState: StepJobComplete
    name: prometheus-k8s-prometheus-rules-crd
    objectReason: object type *v1beta1.CustomResourceDefinition not handled
    objectRef:
      apiVersion: apiextensions.k8s.io/v1beta1
      kind: CustomResourceDefinition
      name: prometheusrules.monitoring.coreos.com
      resourceVersion: "4262"
      uid: b28f3a1d-0a47-11ea-be30-0aed3d6c8d42
    objectState: StepObjectComplete
    reason: complete
    state: StepComplete
  - jobReason: not configured
    jobState: StepJobComplete
    name: alertmanager-crd
    objectReason: object type *v1beta1.CustomResourceDefinition not handled
    objectRef:
      apiVersion: apiextensions.k8s.io/v1beta1
      kind: CustomResourceDefinition
      name: alertmanagers.monitoring.coreos.com
      resourceVersion: "4338"
      uid: be81eb5c-0a47-11ea-8c3a-0219fcc74e7c
    objectState: StepObjectComplete
    reason: complete
    state: StepComplete
  - jobReason: not configured
    jobState: StepJobComplete
    name: prometheus-k8s-service-account
    objectReason: object type *v1.ServiceAccount not handled
    objectRef:
      apiVersion: v1
      kind: ServiceAccount
      name: prometheus-k8s
      namespace: paralus-infra
      resourceVersion: "4345"
      uid: bfca15e3-0a47-11ea-8c3a-0219fcc74e7c
    objectState: StepObjectComplete
    reason: complete
    state: StepComplete
  - jobReason: not configured
    jobState: StepJobComplete
    name: prometheus-k8s-clusterrole
    objectReason: object type *v1.ClusterRole not handled
    objectRef:
      apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRole
      name: prometheus-k8s
      resourceVersion: "4346"
      uid: bfcb903b-0a47-11ea-8c3a-0219fcc74e7c
    objectState: StepObjectComplete
    reason: complete
    state: StepComplete
  - jobReason: not configured
    jobState: StepJobComplete
    name: prometheus-k8s-clusterrolebinding
    objectReason: object type *v1.ClusterRoleBinding not handled
    objectRef:
      apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRoleBinding
      name: prometheus-k8s
      resourceVersion: "4350"
      uid: bfd06590-0a47-11ea-8c3a-0219fcc74e7c
    objectState: StepObjectComplete
    reason: complete
    state: StepComplete
  - jobReason: not configured
    jobState: StepJobComplete
    name: prometheus-k8s-roleconfig
    objectReason: object type *v1.Role not handled
    objectRef:
      apiVersion: rbac.authorization.k8s.io/v1
      kind: Role
      name: prometheus-k8s-config
      namespace: paralus-infra
      resourceVersion: "4351"
      uid: bfd1918a-0a47-11ea-8c3a-0219fcc74e7c
    objectState: StepObjectComplete
    reason: complete
    state: StepComplete
  - jobReason: not configured
    jobState: StepJobComplete
    name: prometheus-k8s-role-default
    objectReason: object type *v1.Role not handled
    objectRef:
      apiVersion: rbac.authorization.k8s.io/v1
      kind: Role
      name: prometheus-k8s
      namespace: default
      resourceVersion: "4352"
      uid: bfe00568-0a47-11ea-8c3a-0219fcc74e7c
    objectState: StepObjectComplete
    reason: complete
    state: StepComplete
  - jobReason: not configured
    jobState: StepJobComplete
    name: prometheus-k8s-role-kube-system
    objectReason: object type *v1.Role not handled
    objectRef:
      apiVersion: rbac.authorization.k8s.io/v1
      kind: Role
      name: prometheus-k8s
      namespace: kube-system
      resourceVersion: "4353"
      uid: bfe1734d-0a47-11ea-8c3a-0219fcc74e7c
    objectState: StepObjectComplete
    reason: complete
    state: StepComplete
  - jobReason: not configured
    jobState: StepJobComplete
    name: prometheus-k8s-role-paralus-infra
    objectReason: object type *v1.Role not handled
    objectRef:
      apiVersion: rbac.authorization.k8s.io/v1
      kind: Role
      name: prometheus-k8s
      namespace: paralus-infra
      resourceVersion: "4354"
      uid: bfe3792f-0a47-11ea-8c3a-0219fcc74e7c
    objectState: StepObjectComplete
    reason: complete
    state: StepComplete
  - jobReason: not configured
    jobState: StepJobComplete
    name: prometheus-k8s-rolebindingconfig
    objectReason: object type *v1.RoleBinding not handled
    objectRef:
      apiVersion: rbac.authorization.k8s.io/v1
      kind: RoleBinding
      name: prometheus-k8s-config
      namespace: paralus-infra
      resourceVersion: "4355"
      uid: bfe4dbec-0a47-11ea-8c3a-0219fcc74e7c
    objectState: StepObjectComplete
    reason: complete
    state: StepComplete
  - jobReason: not configured
    jobState: StepJobComplete
    name: prometheus-k8s-rolebinding-default
    objectReason: object type *v1.RoleBinding not handled
    objectRef:
      apiVersion: rbac.authorization.k8s.io/v1
      kind: RoleBinding
      name: prometheus-k8s
      namespace: default
      resourceVersion: "4356"
      uid: bfe6555b-0a47-11ea-8c3a-0219fcc74e7c
    objectState: StepObjectComplete
    reason: complete
    state: StepComplete
  - jobReason: not configured
    jobState: StepJobComplete
    name: prometheus-k8s-rolebinding-kube-system
    objectReason: object type *v1.RoleBinding not handled
    objectRef:
      apiVersion: rbac.authorization.k8s.io/v1
      kind: RoleBinding
      name: prometheus-k8s
      namespace: kube-system
      resourceVersion: "4358"
      uid: bfef8fa1-0a47-11ea-8c3a-0219fcc74e7c
    objectState: StepObjectComplete
    reason: complete
    state: StepComplete
  - jobReason: not configured
    jobState: StepJobComplete
    name: prometheus-k8s-rolebinding-paralus-infra
    objectReason: object type *v1.RoleBinding not handled
    objectRef:
      apiVersion: rbac.authorization.k8s.io/v1
      kind: RoleBinding
      name: prometheus-k8s
      namespace: paralus-infra
      resourceVersion: "4359"
      uid: bff0fd0d-0a47-11ea-8c3a-0219fcc74e7c
    objectState: StepObjectComplete
    reason: complete
    state: StepComplete
  - jobReason: not configured
    jobState: StepJobComplete
    name: prometheus-operator-serviceaccount
    objectReason: object type *v1.ServiceAccount not handled
    objectRef:
      apiVersion: v1
      kind: ServiceAccount
      name: prometheus-operator
      namespace: paralus-infra
      resourceVersion: "4360"
      uid: bff248c3-0a47-11ea-8c3a-0219fcc74e7c
    objectState: StepObjectComplete
    reason: complete
    state: StepComplete
  - jobReason: not configured
    jobState: StepJobComplete
    name: prometheus-operator-clusterrole
    objectReason: object type *v1.ClusterRole not handled
    objectRef:
      apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRole
      name: prometheus-operator
      resourceVersion: "4361"
      uid: bff3a3ad-0a47-11ea-8c3a-0219fcc74e7c
    objectState: StepObjectComplete
    reason: complete
    state: StepComplete
  - jobReason: not configured
    jobState: StepJobComplete
    name: prometheus-operator-clusterrole-binding
    objectReason: object type *v1.ClusterRoleBinding not handled
    objectRef:
      apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRoleBinding
      name: prometheus-operator
      resourceVersion: "4364"
      uid: bff4fa8d-0a47-11ea-8c3a-0219fcc74e7c
    objectState: StepObjectComplete
    reason: complete
    state: StepComplete
  - jobReason: not configured
    jobState: StepJobComplete
    name: prometheus-operator-servicemonitor
    objectReason: object type *unstructured.Unstructured not handled
    objectRef:
      apiVersion: monitoring.coreos.com/v1
      kind: ServiceMonitor
      name: prometheus-operator
      namespace: paralus-infra
      resourceVersion: "4365"
      uid: bff65354-0a47-11ea-8c3a-0219fcc74e7c
    objectState: StepObjectComplete
    reason: complete
    state: StepComplete
  - jobReason: not configured
    jobState: StepJobComplete
    name: alertmanager-service-account
    objectReason: object type *v1.ServiceAccount not handled
    objectRef:
      apiVersion: v1
      kind: ServiceAccount
      name: alertmanager-main
      namespace: paralus-infra
      resourceVersion: "4366"
      uid: bff799f4-0a47-11ea-8c3a-0219fcc74e7c
    objectState: StepObjectComplete
    reason: complete
    state: StepComplete
  - jobReason: not configured
    jobState: StepJobComplete
    name: alertmanager-main-secret
    objectReason: object type *v1.Secret not handled
    objectRef:
      apiVersion: v1
      kind: Secret
      name: alertmanager-main
      namespace: paralus-infra
      resourceVersion: "4367"
      uid: bff8f244-0a47-11ea-8c3a-0219fcc74e7c
    objectState: StepObjectComplete
    reason: complete
    state: StepComplete
  - jobReason: not configured
    jobState: StepJobComplete
    name: kube-state-metrics-service-account
    objectReason: object type *v1.ServiceAccount not handled
    objectRef:
      apiVersion: v1
      kind: ServiceAccount
      name: kube-state-metrics
      namespace: paralus-infra
      resourceVersion: "4370"
      uid: bffeb3cb-0a47-11ea-8c3a-0219fcc74e7c
    objectState: StepObjectComplete
    reason: complete
    state: StepComplete
  - jobReason: not configured
    jobState: StepJobComplete
    name: kube-state-metrics-cluster-role
    objectReason: object type *v1.ClusterRole not handled
    objectRef:
      apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRole
      name: kube-state-metrics
      resourceVersion: "4371"
      uid: bffffcdc-0a47-11ea-8c3a-0219fcc74e7c
    objectState: StepObjectComplete
    reason: complete
    state: StepComplete
  - jobReason: not configured
    jobState: StepJobComplete
    name: kube-state-metrics-cluster-role-binding
    objectReason: object type *v1.ClusterRoleBinding not handled
    objectRef:
      apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRoleBinding
      name: kube-state-metrics
      resourceVersion: "4374"
      uid: c001740f-0a47-11ea-8c3a-0219fcc74e7c
    objectState: StepObjectComplete
    reason: complete
    state: StepComplete
  - jobReason: not configured
    jobState: StepJobComplete
    name: kube-state-metrics-role
    objectReason: object type *v1.Role not handled
    objectRef:
      apiVersion: rbac.authorization.k8s.io/v1
      kind: Role
      name: kube-state-metrics
      namespace: paralus-infra
      resourceVersion: "4375"
      uid: c0027a33-0a47-11ea-8c3a-0219fcc74e7c
    objectState: StepObjectComplete
    reason: complete
    state: StepComplete
  - jobReason: not configured
    jobState: StepJobComplete
    name: kube-state-metrics-rolebinding
    objectReason: object type *v1.RoleBinding not handled
    objectRef:
      apiVersion: rbac.authorization.k8s.io/v1
      kind: RoleBinding
      name: kube-state-metrics
      namespace: paralus-infra
      resourceVersion: "4376"
      uid: c00399d7-0a47-11ea-8c3a-0219fcc74e7c
    objectState: StepObjectComplete
    reason: complete
    state: StepComplete
  - jobReason: not configured
    jobState: StepJobComplete
    name: node-exporter-serviceaccount
    objectReason: object type *v1.ServiceAccount not handled
    objectRef:
      apiVersion: v1
      kind: ServiceAccount
      name: node-exporter
      namespace: paralus-infra
      resourceVersion: "4377"
      uid: c0050866-0a47-11ea-8c3a-0219fcc74e7c
    objectState: StepObjectComplete
    reason: complete
    state: StepComplete
  - jobReason: not configured
    jobState: StepJobComplete
    name: node-exporter-cluster-role
    objectReason: object type *v1.ClusterRole not handled
    objectRef:
      apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRole
      name: node-exporter
      resourceVersion: "4378"
      uid: c0065120-0a47-11ea-8c3a-0219fcc74e7c
    objectState: StepObjectComplete
    reason: complete
    state: StepComplete
  - jobReason: not configured
    jobState: StepJobComplete
    name: node-exporter-cluster-role-binding
    objectReason: object type *v1.ClusterRoleBinding not handled
    objectRef:
      apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRoleBinding
      name: node-exporter
      resourceVersion: "4381"
      uid: c00e0171-0a47-11ea-8c3a-0219fcc74e7c
    objectState: StepObjectComplete
    reason: complete
    state: StepComplete
  - jobReason: not configured
    jobState: StepJobComplete
    name: prometheus-adapter-service-account
    objectReason: object type *v1.ServiceAccount not handled
    objectRef:
      apiVersion: v1
      kind: ServiceAccount
      name: prometheus-adapter
      namespace: paralus-infra
      resourceVersion: "4382"
      uid: c00f3ed8-0a47-11ea-8c3a-0219fcc74e7c
    objectState: StepObjectComplete
    reason: complete
    state: StepComplete
  - jobReason: not configured
    jobState: StepJobComplete
    name: prometheus-adapter-cluster-role
    objectReason: object type *v1.ClusterRole not handled
    objectRef:
      apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRole
      name: prometheus-adapter
      resourceVersion: "4383"
      uid: c0107e0b-0a47-11ea-8c3a-0219fcc74e7c
    objectState: StepObjectComplete
    reason: complete
    state: StepComplete
  - jobReason: not configured
    jobState: StepJobComplete
    name: prometheus-adapter-cluster-role-binding
    objectReason: object type *v1.ClusterRoleBinding not handled
    objectRef:
      apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRoleBinding
      name: prometheus-adapter
      namespace: paralus-infra
      resourceVersion: "4386"
      uid: c011c005-0a47-11ea-8c3a-0219fcc74e7c
    objectState: StepObjectComplete
    reason: complete
    state: StepComplete
  - jobReason: not configured
    jobState: StepJobComplete
    name: prometheus-adapter-cluster-role-binding-delegator
    objectReason: object type *v1.ClusterRoleBinding not handled
    objectRef:
      apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRoleBinding
      name: resource-metrics:system:auth-delegator
      resourceVersion: "4387"
      uid: c012f52b-0a47-11ea-8c3a-0219fcc74e7c
    objectState: StepObjectComplete
    reason: complete
    state: StepComplete
  - jobReason: not configured
    jobState: StepJobComplete
    name: prometheus-adapter-cluster-role-server-resources
    objectReason: object type *v1.ClusterRole not handled
    objectRef:
      apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRole
      name: resource-metrics-server-resources
      resourceVersion: "4388"
      uid: c0143b9e-0a47-11ea-8c3a-0219fcc74e7c
    objectState: StepObjectComplete
    reason: complete
    state: StepComplete
  - jobReason: not configured
    jobState: StepJobComplete
    name: prometheus-adapter-configmap
    objectReason: object type *v1.ConfigMap not handled
    objectRef:
      apiVersion: v1
      kind: ConfigMap
      name: adapter-config
      namespace: paralus-infra
      resourceVersion: "4389"
      uid: c01581ce-0a47-11ea-8c3a-0219fcc74e7c
    objectState: StepObjectComplete
    reason: complete
    state: StepComplete
  - jobReason: not configured
    jobState: StepJobComplete
    name: prometheus-adapter-role-binding-auth-reader
    objectReason: object type *v1.RoleBinding not handled
    objectRef:
      apiVersion: rbac.authorization.k8s.io/v1
      kind: RoleBinding
      name: resource-metrics-auth-reader
      namespace: kube-system
      resourceVersion: "4390"
      uid: c01d5364-0a47-11ea-8c3a-0219fcc74e7c
    objectState: StepObjectComplete
    reason: complete
    state: StepComplete
  - jobReason: not configured
    jobState: StepJobComplete
    name: prometheus-k8s-edge-creds-configmap
    objectReason: object type *v1.Secret not handled
    objectRef:
      apiVersion: v1
      kind: Secret
      name: edge-creds
      namespace: paralus-infra
      resourceVersion: "4391"
      uid: c01ebd57-0a47-11ea-8c3a-0219fcc74e7c
    objectState: StepObjectComplete
    reason: complete
    state: StepComplete
  observedGeneration: 1
  taskletRef:
    apiVersion: cluster.paralus.dev/v2
    kind: Tasklet
    name: v1-prometheus
    namespace: paralus-infra
    resourceVersion: "4456"
    uid: c3930f90-0a47-11ea-8c3a-0219fcc74e7c

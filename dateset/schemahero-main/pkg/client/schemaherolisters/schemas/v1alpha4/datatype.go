/*
Copyright 2021 The SchemaHero Authors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha4

import (
	v1alpha4 "github.com/schemahero/schemahero/pkg/apis/schemas/v1alpha4"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// DataTypeLister helps list DataTypes.
// All objects returned here must be treated as read-only.
type DataTypeLister interface {
	// List lists all DataTypes in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha4.DataType, err error)
	// DataTypes returns an object that can list and get DataTypes.
	DataTypes(namespace string) DataTypeNamespaceLister
	DataTypeListerExpansion
}

// dataTypeLister implements the DataTypeLister interface.
type dataTypeLister struct {
	indexer cache.Indexer
}

// NewDataTypeLister returns a new DataTypeLister.
func NewDataTypeLister(indexer cache.Indexer) DataTypeLister {
	return &dataTypeLister{indexer: indexer}
}

// List lists all DataTypes in the indexer.
func (s *dataTypeLister) List(selector labels.Selector) (ret []*v1alpha4.DataType, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha4.DataType))
	})
	return ret, err
}

// DataTypes returns an object that can list and get DataTypes.
func (s *dataTypeLister) DataTypes(namespace string) DataTypeNamespaceLister {
	return dataTypeNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// DataTypeNamespaceLister helps list and get DataTypes.
// All objects returned here must be treated as read-only.
type DataTypeNamespaceLister interface {
	// List lists all DataTypes in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha4.DataType, err error)
	// Get retrieves the DataType from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha4.DataType, error)
	DataTypeNamespaceListerExpansion
}

// dataTypeNamespaceLister implements the DataTypeNamespaceLister
// interface.
type dataTypeNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all DataTypes in the indexer for a given namespace.
func (s dataTypeNamespaceLister) List(selector labels.Selector) (ret []*v1alpha4.DataType, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha4.DataType))
	})
	return ret, err
}

// Get retrieves the DataType from the indexer for a given namespace and name.
func (s dataTypeNamespaceLister) Get(name string) (*v1alpha4.DataType, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha4.Resource("datatype"), name)
	}
	return obj.(*v1alpha4.DataType), nil
}

apiVersion: core.openfunction.io/v1beta2
kind: Function
metadata:
  name: bindings
spec:
  image: openfunctiondev/v1beta1-bindings:latest
  serving:
    bindings:
      cron:
        ignoreErrors: false
        initTimeout: ""
        metadata:
          - name: schedule
            secretKeyRef:
              key: ""
              name: ""
            value: '@every 2s'
        type: bindings.cron
        version: v1
      kafka-server:
        ignoreErrors: false
        initTimeout: ""
        metadata:
          - name: brokers
            secretKeyRef:
              key: ""
              name: ""
            value: kafka-server-kafka-brokers:9092
          - name: topics
            secretKeyRef:
              key: ""
              name: ""
            value: events-sample
          - name: consumerGroup
            secretKeyRef:
              key: ""
              name: ""
            value: bindings-with-output
          - name: publishTopic
            secretKeyRef:
              key: ""
              name: ""
            value: events-sample
          - name: authRequired
            secretKeyRef:
              key: ""
              name: ""
            value: "false"
        type: bindings.kafka
        version: v1
    outputs:
      - dapr:
          name: kafka-server
          operation: create
          outputName: sample
          type: bindings.kafka
    template:
      containers:
        - imagePullPolicy: Always
          name: function
          resources: {}
    triggers:
      dapr:
        - inputName: cron
          name: cron
          type: bindings.cron
  version: v1.0.0
  workloadRuntime: OCIContainer
---
apiVersion: core.openfunction.io/v1beta2
kind: Function
metadata:
  name: sink-a
spec:
  image: openfunction/sink-sample:latest
  serving:
    template:
      containers:
        - imagePullPolicy: Always
          name: function
          resources: {}
    triggers:
      http:
        port: 8080
        route:
          gatewayRef:
            name: openfunction
            namespace: openfunction
  version: v1.0.0
  workloadRuntime: OCIContainer
---
apiVersion: core.openfunction.io/v1beta2
kind: Function
metadata:
  name: sink-b
spec:
  image: openfunction/sink-sample:latest
  serving:
    template:
      containers:
        - imagePullPolicy: Always
          name: function
          resources: {}
    triggers:
      http:
        port: 8080
        route:
          gatewayRef:
            name: openfunction
            namespace: openfunction
  version: v1.0.0
  workloadRuntime: OCIContainer
---
apiVersion: events.openfunction.io/v1alpha1
kind: EventBus
metadata:
  name: default
spec:
  natsStreaming:
    natsURL: "nats://nats.default:4222"
    natsStreamingClusterID: "stan"
    subscriptionType: "queue"
    durableSubscriptionName: "ImDurable"
---
apiVersion: events.openfunction.io/v1alpha1
kind: EventSource
metadata:
  name: my-eventsource
spec:
  logLevel: "2"
  eventBus: "default"
  kafka:
    sample-one:
      brokers: "kafka-server-kafka-brokers.default.svc.cluster.local:9092"
      topic: "events-sample"
      authRequired: false
  sink:
    uri: "http://sink-a.default.svc.cluster.local/"
---
apiVersion: events.openfunction.io/v1alpha1
kind: Trigger
metadata:
  name: my-trigger
spec:
  logLevel: "2"
  eventBus: "default"
  inputs:
    inputDemo:
      eventSource: "my-eventsource"
      event: "sample-one"
  subscribers:
    - condition: inputDemo
      sink:
        uri: "http://sink-b.default.svc.cluster.local/"

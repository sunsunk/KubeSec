// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/hwameistor/hwameistor/pkg/apis/hwameistor/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// LocalVolumeLister helps list LocalVolumes.
type LocalVolumeLister interface {
	// List lists all LocalVolumes in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.LocalVolume, err error)
	// Get retrieves the LocalVolume from the index for a given name.
	Get(name string) (*v1alpha1.LocalVolume, error)
	LocalVolumeListerExpansion
}

// localVolumeLister implements the LocalVolumeLister interface.
type localVolumeLister struct {
	indexer cache.Indexer
}

// NewLocalVolumeLister returns a new LocalVolumeLister.
func NewLocalVolumeLister(indexer cache.Indexer) LocalVolumeLister {
	return &localVolumeLister{indexer: indexer}
}

// List lists all LocalVolumes in the indexer.
func (s *localVolumeLister) List(selector labels.Selector) (ret []*v1alpha1.LocalVolume, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.LocalVolume))
	})
	return ret, err
}

// Get retrieves the LocalVolume from the index for a given name.
func (s *localVolumeLister) Get(name string) (*v1alpha1.LocalVolume, error) {
	obj, exists, err := s.indexer.GetByKey(name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("localvolume"), name)
	}
	return obj.(*v1alpha1.LocalVolume), nil
}
